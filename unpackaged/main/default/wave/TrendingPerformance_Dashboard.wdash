{"dataSourceLinksInfo":{"enableAutomaticLinking":false,"excludeRelationships":[],"links":[]},"filters":[],"gridLayouts":[{"name":"Mobile","numColumns":1,"pages":[{"name":"Page1","navigationHidden":false,"widgets":[{"colspan":1,"column":0,"name":"mobileErrorText","row":0,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"normal","selectors":["maxWidth(599)","platform(iOS)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#F2F6FA","cellSpacingX":8,"cellSpacingY":8,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0},{"name":"Desktop","numColumns":48,"pages":[{"name":"Page2","navigationHidden":false,"widgets":[{"colspan":10,"column":1,"name":"number_1","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":9,"column":11,"name":"number_2","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":10,"column":20,"name":"number_3","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":9,"column":30,"name":"number_4","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":4,"column":40,"name":"filtersText","row":1,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":40,"name":"teamMemebersSelector","row":5,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":40,"name":"forecastMeasuresSelector","row":11,"rowspan":4,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":40,"name":"filterContainer","row":0,"rowspan":51,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["left"],"borderRadius":0,"borderWidth":1}},{"colspan":40,"column":0,"name":"TrendingPerformanceChart","row":8,"rowspan":43,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["right"],"borderWidth":8}},{"colspan":48,"column":0,"name":"footerContainer","row":51,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top"],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":["minWidth(600)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#FFFFFF","cellSpacingX":8,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"CurrencyTypeStep":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"CurrencyType\"; q = filter q by 'CurrencyCode' in [\"{{coalesce(cell(ForecastingUserPreference.result, 0, \"ForecastingViewCurrency\"), \"DefaultCurrency\").asString()}}\"] || 'IsCorporate' == \"true\"; q = foreach q generate 'NewConversionRate' as 'ConversionRate', 'CurrencyCode' as 'IsoCode', 'IsCorporate';q = order q by 'IsCorporate' asc;\nq = limit q 2;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastingPrediction":{"broadcastFacet":true,"groups":[],"label":"ForecastingPrediction","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"Prediction\" && 'Category' == \"Prediction\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'PredictionAmount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"CurrentUser":{"broadcastFacet":false,"groups":[],"label":"","numbers":[],"query":"u = load \"User\";u = filter u by 'Id' == \"!{user.Id}\";u = foreach u generate 'Id' as 'Id', 'DefaultCurrencyIsoCode' as 'DefaultCurrencyIsoCode';u = limit u 1;","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{}},"TeamMembers":{"broadcastFacet":false,"datasets":[{"name":"User"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"q = load \\\"User\\\";m = load \\\"User\\\";q = filter q by 'MgrRole.ForecastUserId' == \\\"{{cell(CurrentUser.result, 0, \\\"Id\\\").asString()}}\\\";q = foreach q generate 'Id' as 'Id', 'Name' as 'Name';q = order q by 'Name'; q = limit q 2000;m = filter m by 'Id' == \\\"{{cell(CurrentUser.result, 0, \\\"Id\\\").asString()}}\\\";m = foreach m generate 'Id' as 'Id', 'Name' + \\\"'s Team\\\" as 'Name';m = limit m 1;result = union m, q;\",\"measures\":[[\"count\",\"*\"]],\"measuresMap\":{},\"groups\":[\"Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"singlerequired","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"FirstKPI":{"broadcastFacet":true,"groups":[],"label":"FirstKPI","numbers":[],"query":"q = load \"ForecastingData\";\nq = filter q by 'Type' == \"Prediction\" && 'Category' == \"Prediction\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'KPIValue1';\nq = foreach q generate KPIValue1 as 'KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}';\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastMeasures":{"datasets":[],"dimensions":[],"selectMode":"multi","start":"[\"Predicted\"]","type":"static","values":["{\"value\":\"Predicted\",\"display\":\"Einstein Prediction\"}","{\"value\":\"CommitForecast\",\"display\":\"Commit\"}","{\"value\":\"BestCaseForecast\",\"display\":\"Best Case\"}"]},"ForecastingClosedItem":{"broadcastFacet":true,"groups":[],"label":"ForecastingClosedItem","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' in  [\"AmountWithoutManagerAdjustment\", \"ForecastAmount\"] && 'Category' == \"ClosedOnly\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Type' as Type, 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'ForecastAmount', 'Date' as 'Date'; q = order q by ('Date' desc, 'Type' desc); q = limit q 1","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"KPIDetermination":{"broadcastFacet":true,"groups":[],"label":"KPIDetermination","numbers":[],"query":"a = load \"ForecastingData\";a = filter a by 'Type' == \"Quota\" && 'Category' == \"Quota\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nb = load \"ForecastingData\";b = filter b by 'Type' == \"Prediction\" && 'Category' == \"Prediction\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nc = load \"ForecastingData\";c = filter c by 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = group c by 'Owner_ID' left, a by 'Owner_ID' left, b by 'Owner_ID';\nq = foreach q generate c.'Owner_ID' as 'OwnerId', a.'Owner_ID' as 'Quota Owner', b.'Owner_ID' as 'Prediction Owner', case when (a.'Owner_ID' is not null && b.'Owner_ID' is not null) then \"PredictionAndQuota\" when (a.'Owner_ID' is not null && b.'Owner_ID' is null) then \"NoPrediction\" when (a.'Owner_ID' is null && b.'Owner_ID' is not null) then \"NoQuota\" else \"NoPredictionNoQuota\" end as 'KPIDetermination';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"TrendingPerformanceChartStep":{"broadcastFacet":true,"groups":[],"label":"","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\" && ('Category' == \"Actual\" || 'Category' in {{coalesce(column(ForecastMeasures.selection, [\"value\"]), \"[]\").asString()}}) && (('Category' in [\"Actual\", \"Predicted\"]) || ('Type' == \"ForecastAmount\" && 'Owner_ID' != \"!{user.Id}\") || ('Type' == \"AmountWithoutManagerAdjustment\" && 'Owner_ID' == \"!{user.Id}\"));q = group q by ('Date_Year', 'Date_Month', 'Date_Day', 'Category', 'Type');q = foreach q generate ((('Date_Year' + \"~~~\") + 'Date_Month') + \"~~~\") + 'Date_Day' as 'Date_Year~~~Date_Month~~~Date_Day', 'Category' as 'Category', first('Value') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'Amount', \"{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}\" as 'Currency', case when 'Category' == \"Predicted\" then sum('ValueHigherBound') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} end as 'Upper Bound', case when 'Category' == \"Predicted\" then sum('ValueLowerBound') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} end as 'Lower Bound';q = order q by ('Date_Year~~~Date_Month~~~Date_Day' desc, 'Category' desc);q = limit q 100;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"time"}},"ForecastingCommitItem":{"broadcastFacet":true,"groups":[],"label":"ForecastingCommitItem","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' in  [\"AmountWithoutManagerAdjustment\", \"ForecastAmount\"] && 'Category' == \"CommitForecast\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Type' as Type, 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'ForecastAmount', 'Date' as 'Date'; q = order q by ('Date' desc, 'Type' desc); q = limit q 1","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastingQuotaStep":{"broadcastFacet":true,"groups":[],"label":"ForecastingQuotaStep","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"Quota\" && 'Category' == \"Quota\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\";q = foreach q generate 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'Amount';q = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true},"FirstPredictedDate":{"broadcastFacet":false,"groups":[],"label":"FirstPredictedDate","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"Predicted\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";q = foreach q generate 'Date' as 'Date';q = order q by 'Date' asc;q = limit q 1;","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true},"ForecastingBestCaseItem":{"broadcastFacet":true,"groups":[],"label":"ForecastingBestCaseItem","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' in  [\"AmountWithoutManagerAdjustment\", \"ForecastAmount\"] && 'Category' == \"BestCaseForecast\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Type' as Type, 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'ForecastAmount', 'Date' as 'Date'; q = order q by ('Date' desc, 'Type' desc); q = limit q 1","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"KPICalculation_Cumulative":{"broadcastFacet":true,"groups":[],"label":"KPICalculation_Cumulative","numbers":[],"query":"r = load \"ForecastingData\";\nq = load \"User\";\nq = filter q by 'Id' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\";\nq = foreach q generate (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}} end) as 'KPIValue1', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction\" when \"NoQuota\" then \"Einstein Prediction\" else \"Closed\" end) as 'KPILabel1', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}} when \"NoPrediction\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}} end) as 'KPIValue2', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction to Quota Gap\" when \"NoQuota\" then \"Einstein Prediction to Commit Gap\" when \"NoPrediction\" then \"Closed to Quota Gap\" else \"Closed to Commit Gap\" end) as 'KPILabel2', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}} when \"NoPrediction\" then {{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} else {{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingBestCaseItem.result,0,\"ForecastAmount\"),0).asObject()}} end) as 'KPIValue3', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction to Commit Gap\" when \"NoQuota\" then \"Closed to Einstein Prediction Gap\" when \"NoPrediction\" then \"Commit to Quota Gap\" else \"Commit to Best Case Gap\" end) as 'KPILabel3', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}} when \"NoPrediction\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}}-{{coalesce(cell(ForecastingBestCaseItem.result,0,\"ForecastAmount\"),0).asObject()}} end) as 'KPIValue4', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Closed to Quota Gap\" when \"NoQuota\" then \"Closed to Commit Gap\" when \"NoPrediction\" then \"Closed to Commit Gap\" else \"Closed to Best Case Gap\" end) as 'KPILabel4';\nq = foreach q generate 'KPIValue1' as 'KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', 'KPILabel1', case when ('KPIValue1' == 0) then \"#788ABF\" when ('KPIValue1' < 0) then \"#D14062\" else \"#0BA976\" end as 'KPIColor1', 'KPIValue2' as 'KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', 'KPILabel2', case when ('KPIValue2' == 0) then \"#788ABF\" when ('KPIValue2' < 0) then \"#D14062\" else \"#0BA976\" end as 'KPIColor2', 'KPIValue3' as 'KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', 'KPILabel3', case when ('KPIValue3' == 0) then \"#788ABF\" when ('KPIValue3' < 0) then \"#D14062\" else \"#0BA976\" end as 'KPIColor3', 'KPIValue4' as 'KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', 'KPILabel4', case when ('KPIValue4' == 0) then \"#788ABF\" when ('KPIValue4' < 0) then \"#D14062\" else \"#0BA976\" end as 'KPIColor4';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastingUserPreference":{"broadcastFacet":false,"groups":[],"numbers":[],"query":"SELECT ForecastingViewCurrency from ForecastingUserPreference","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","strings":["ForecastingViewCurrency"],"type":"soql"},"KPICalculation_Non_Cumulative":{"broadcastFacet":true,"groups":[],"label":"KPICalculation_Non_Cumulative","numbers":[],"query":"r = load \"ForecastingData\";\nq = load \"User\";\nq = filter q by 'Id' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\";\nq = foreach q generate (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"PredictionAmount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}} end) as 'KPIValue1', (case \"{{cell(KPIDetermination.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction\" when \"NoQuota\" then \"Einstein Prediction\" else \"Closed\" end) as 'KPILabel1', {{coalesce(cell(ForecastingClosedItem.result,0,\"ForecastAmount\"),0).asObject()}} as 'KPIValue2', \"Closed\" as 'KPILabel2', {{coalesce(cell(ForecastingCommitItem.result,0,\"ForecastAmount\"),0).asObject()}} as 'KPIValue3', \"Commit\" as 'KPILabel3', {{coalesce(cell(ForecastingBestCaseItem.result,0,\"ForecastAmount\"),0).asObject()}} as 'KPIValue4', \"Best Case\" as 'KPILabel4';\nq = foreach q generate KPIValue1 as 'KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel1, KPIValue2 as 'KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel2, (case when KPIValue2<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor2', KPIValue3 as 'KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel3, (case when KPIValue3<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor3', KPIValue4 as 'KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel4, (case when KPIValue4<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor4';\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"CurrentPeriod":{"broadcastFacet":true,"groups":[],"label":"CurrentPeriod","numbers":[],"query":"q = load \"Period\";q = filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [\"current month\"..\"current month\"];q = filter q by 'Type' in [\"Month\", \"0\"];q = foreach q generate 'Id' as 'Id', upper(toString(now(), \"yyyy-MM-dd\")) as 'now';q = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"strings":[],"type":"saql","useGlobal":true},"ForecastingQuota":{"broadcastFacet":true,"groups":[],"label":"ForecastingQuota","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"Quota\" && 'Category' == \"Quota\" && 'Owner_ID' == \"{{cell(TeamMembers.selection, 0, \"Id\").asString()}}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"number_4":{"parameters":{"compact":true,"exploreLink":false,"interactions":[],"measureField":"KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor4\").asString()}}","numberSize":32,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel4\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"footerContainer":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"number_3":{"parameters":{"compact":true,"exploreLink":false,"interactions":[],"measureField":"KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor3\").asString()}}","numberSize":32,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel3\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":false,"interactions":[],"measureField":"KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor2\").asString()}}","numberSize":32,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel2\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"#335779","numberSize":32,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel1\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"mobileErrorText":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"20px","color":"#091A3E"},"insert":"This dashboard is not available on Mobile."},{"attributes":{"align":"center"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"filterContainer":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"teamMemebersSelector":{"parameters":{"compact":false,"displayMode":"combo","displayTemplate":"[Name]","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"none","showActionMenu":false,"step":"TeamMembers","title":"Team Members"},"type":"listselector"},"filtersText":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"20px","color":"#091A3E"},"insert":"Filters"},{"attributes":{"align":"left"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"TrendingPerformanceChart":{"parameters":{"autoFitMode":"none","totalValue":"computeTotal","showPoints":true,"legend":{"showHeader":false,"show":true,"customSize":10,"position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":["Amount","Upper Bound","Lower Bound"],"showNullValues":true,"customizeLegend":true,"showPercentage":false,"showDimensions":true,"showMeasures":true,"dimensions":["Date_Year~~~Date_Month~~~Date_Day","Category","Currency"]}}},"visualizationType":"time","missingValue":"cumulativeUntilLastData","exploreLink":true,"timeAxis":{"showTitle":false,"predictiveLine":{"color":"rgb(22, 50, 92)","time":"{{coalesce(cell(FirstPredictedDate.result, 0, \"Date\"), cell(CurrentPeriod.result, 0, \"now\")).asString()}}","label":"Today"},"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","chartsPerLine":4},"totalLabel":"","fillArea":false,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"referenceLines":[{"color":"rgb(46, 196, 78)","label":{"data":"Quota: {{cell(ForecastingQuotaStep.result, 0, \"Amount\").asString()}}","type":"static"},"value":{"data":"{{cell(ForecastingQuotaStep.result, 0, \"Amount\").asObject()}}","type":"static"}}],"title":"","customDomain":{"showDomain":false}},"theme":"wave","step":"TrendingPerformanceChartStep","drawArea":{"measure":"Amount","showDrawArea":true,"bounding1":"Lower Bound","bounding2":"Upper Bound"}},"type":"chart"},"forecastMeasuresSelector":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"showActionMenu":false,"step":"ForecastMeasures","title":"Forecast Measures"},"type":"listselector"}}}