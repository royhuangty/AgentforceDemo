{"dataSourceLinksInfo":{"enableAutomaticLinking":false,"excludeRelationships":[],"links":[]},"filters":[],"gridLayouts":[{"name":"Mobile","numColumns":48,"pages":[{"name":"Page1","navigationHidden":false,"widgets":[{"colspan":48,"column":0,"name":"UserImageChart","row":0,"rowspan":16,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":["bottom"]}},{"colspan":48,"column":0,"name":"RunningUserName","row":16,"rowspan":4,"widgetStyle":{"borderEdges":[]}},{"colspan":46,"column":1,"name":"PercentQuotaNumber","row":20,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":46,"column":1,"name":"QuotaSubtext_2","row":22,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":0,"name":"TopContainer","row":0,"rowspan":26,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#D8DDE6","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"KeyMetrics","row":26,"rowspan":3,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":3,"name":"number_1","row":31,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":43,"column":2,"name":"number_2","row":41,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":43,"column":2,"name":"number_3","row":46,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":43,"column":2,"name":"number_4","row":51,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":46,"column":1,"name":"MiddleContainer_1","row":29,"rowspan":10,"widgetStyle":{"borderColor":"#D8DDE6","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":47,"column":0,"name":"TrendingPerformance","row":57,"rowspan":3,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":46,"column":1,"name":"TrendingPerformanceChart","row":60,"rowspan":42,"widgetStyle":{"borderEdges":["all"],"borderRadius":4}},{"colspan":46,"column":1,"name":"container_1","row":40,"rowspan":17,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(216, 221, 230)","borderEdges":["all"],"borderRadius":4,"borderWidth":1}}]}],"rowHeight":"fine","selectors":["maxWidth(599)","platform(iOS)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#E6ECF2","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0},{"name":"Desktop","numColumns":14,"pages":[{"label":"My Performance","name":"Desktop_Summary_Page","navigationHidden":false,"widgets":[{"colspan":3,"column":1,"name":"DesktopKPI_1","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":4,"name":"DesktopKPI_2","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":7,"name":"DesktopKPI_3","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":10,"name":"DesktopKPI_4","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":0,"name":"MiddleContainer_1","row":1,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":0,"name":"Desktop_TrendingPerformanceChart","row":8,"rowspan":30,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"fine","selectors":["minWidth(200)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#FFFFFF","cellSpacingX":4,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"CurrencyTypeStep":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"CurrencyType\"; q = filter q by 'CurrencyCode' in [\"{{coalesce(cell(ForecastingUserPreference.result, 0, \"ForecastingViewCurrency\"), \"DefaultCurrency\").asString()}}\"] || 'IsCorporate' == \"true\"; q = foreach q generate 'NewConversionRate' as 'ConversionRate', 'CurrencyCode' as 'IsoCode', 'IsCorporate';q = order q by 'IsCorporate' asc;\nq = limit q 2;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"QuotaAchieved":{"broadcastFacet":true,"groups":[],"label":"QuotaAchieved","numbers":[],"query":"a = load \"User\"; a = foreach a generate case when (\"{{ cell(QuotaDetermination.result, 0, \"IsQuotaAvailable\").asString() }}\" == \"QuotaAvailable\" and {{ cell(QuotaDetermination.result, 0, \"PercentQuotaAchieved\").asString() }} <= 49) then \"#D14062\" when (\"{{ cell(QuotaDetermination.result, 0, \"IsQuotaAvailable\").asString() }}\" == \"QuotaAvailable\" and {{ cell(QuotaDetermination.result, 0, \"PercentQuotaAchieved\").asString() }} >= 50 and {{ cell(QuotaDetermination.result, 0, \"PercentQuotaAchieved\").asString() }} <= 99) then \"#F9A549\" else \"#0BA976\" end as 'color', case when \"{{ cell(QuotaDetermination.result, 0, \"IsQuotaAvailable\").asString() }}\" == \"NoQuota\" then \"\" else \"Quota Attainment\" end as 'QuotaSubText', case when \"{{ cell(QuotaDetermination.result, 0, \"IsQuotaAvailable\").asString() }}\" == \"NoQuota\" then \"\" else \"{{ cell(QuotaDetermination.result, 0, \"PercentQuotaAchieved\").asString() }}%\" end as 'PercentQuotaAchieved';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"columnProperties":{},"columns":[],"customBulkActions":[],"interactions":[],"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","totals":true},"type":"table"}},"QuotaDetermination":{"broadcastFacet":true,"groups":[],"label":"QuotaDetermination","numbers":[],"query":"b = load \"ForecastingData\";b = filter b by 'Type' == \"Quota\" && 'Category' == \"Quota\" && 'Owner_ID' == \"!{user.Id}\"&& 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\"; c = load \"User\"; c = filter c by 'Id' == \"!{user.Id}\"; d = group c by 'Id' left, b by 'Owner_ID'; d = foreach d generate first(c.'FullPhotoUrl') as 'ChatterImage', case when sum(b.'Value') is not null then \"QuotaAvailable\" else \"NoQuota\" end as 'IsQuotaAvailable', coalesce(round({{coalesce(cell(ForecastingClosedItem.result, 0, \"AmountWithoutManagerAdjustment\"), 0).asObject()}} / ( sum(b.'Value') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}}) * 100, 1), 0) as 'PercentQuotaAchieved'; d = limit d 2000;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"columnProperties":{},"columns":[],"customBulkActions":[],"interactions":[],"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","totals":true},"type":"table"}},"ForecastingPrediction":{"broadcastFacet":true,"groups":[],"label":"ForecastingPrediction","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"Prediction\" && 'Category' == \"Prediction\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"UserData":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"User\"; q = filter q by 'Id' == \"!{user.Id}\"; q = foreach q generate q.'FirstName' as 'FirstName', q.'Name' as 'Name', q.'Id' as 'Id', q.'Username' as 'Username', q.'DefaultCurrencyIsoCode' as 'DefaultCurrencyIsoCode';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":["Name","Id","Username","FirstName"],"type":"saql","useGlobal":true},"FirstKPI":{"broadcastFacet":true,"groups":[],"label":"FirstKPI","numbers":[],"query":"q = load \"ForecastingData\";\nq = filter q by 'Type' == \"Prediction\" && 'Category' == \"Prediction\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'KPIValue1';\nq = foreach q generate KPIValue1 as 'KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}';\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastingClosedItem":{"broadcastFacet":true,"groups":[],"label":"ForecastingClosedItem","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"AmountWithoutManagerAdjustment\" && 'Category' == \"ClosedOnly\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'AmountWithoutManagerAdjustment', 'Date' as 'Date'; q = order q by 'Date' desc; q = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"TrendingPerformanceChartStep":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' in [\"AmountWithoutManagerAdjustment\", \"Actual\", \"Predicted\" ] && 'Category' in [\"Predicted\", \"Actual\", \"CommitForecast\", \"BestCaseForecast\" ] && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";q = group q by ('Date_Year', 'Date_Month', 'Date_Day', 'Category');q = foreach q generate ((('Date_Year' + \"~~~\") + 'Date_Month') + \"~~~\") + 'Date_Day' as 'Date_Year~~~Date_Month~~~Date_Day', 'Category' as 'Category', sum('Value') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'Amount', \"{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}\" as 'Currency', case when 'Category' == \"Predicted\" then sum('ValueHigherBound') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} end as 'Upper Bound', case when 'Category' == \"Predicted\" then sum('ValueLowerBound') * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} end as 'Lower Bound';q = order q by ('Date_Year~~~Date_Month~~~Date_Day' desc, 'Category' desc);q = limit q 100;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"KPIDetermination_1":{"broadcastFacet":true,"groups":[],"label":"KPIDetermination","numbers":[],"query":"a = load \"ForecastingData\";a = filter a by 'Type' == \"Quota\" && 'Category' == \"Quota\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nb = load \"ForecastingData\";b = filter b by 'Type' == \"Prediction\" && 'Category' == \"Prediction\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nc = load \"ForecastingData\";c = filter c by 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = group c by 'Owner_ID' left, a by 'Owner_ID' left, b by 'Owner_ID';\nq = foreach q generate c.'Owner_ID' as 'OwnerId', a.'Owner_ID' as 'Quota Owner', b.'Owner_ID' as 'Prediction Owner', case when (a.'Owner_ID' is not null && b.'Owner_ID' is not null) then \"PredictionAndQuota\" when (a.'Owner_ID' is not null && b.'Owner_ID' is null) then \"NoPrediction\" when (a.'Owner_ID' is null && b.'Owner_ID' is not null) then \"NoQuota\" else \"NoPredictionNoQuota\" end as 'KPIDetermination';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ForecastingCommitItem":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"AmountWithoutManagerAdjustment\" && 'Category' == \"CommitForecast\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'AmountWithoutManagerAdjustment', 'Date' as 'Date'; q = order q by 'Date' desc; q = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"ForecastingBestCaseItem":{"broadcastFacet":true,"groups":[],"label":"ForecastingBestCaseItem","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"AmountWithoutManagerAdjustment\" && 'Category' == \"BestCaseForecast\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'AmountWithoutManagerAdjustment', 'Date' as 'Date'; q = order q by 'Date' desc; q = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"KPICalculation_Cumulative":{"broadcastFacet":true,"groups":[],"label":"KPICalculation_Cumulative","numbers":[],"query":"r = load \"ForecastingData\";\nq = load \"User\";\nq = filter q by 'Id' == \"!{user.Id}\";\nq = foreach q generate (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} end) as 'KPIValue1', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction\" when \"NoQuota\" then \"Einstein Prediction\" else \"Closed\" end) as 'KPILabel1', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} when \"NoPrediction\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} end) as 'KPIValue2', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction to Quota Gap\" when \"NoQuota\" then \"Einstein Prediction to Commit Gap\" when \"NoPrediction\" then \"Closed to Quota Gap\" else \"Closed to Commit Gap\" end) as 'KPILabel2', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}} when \"NoPrediction\" then {{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} else {{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingBestCaseItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} end) as 'KPIValue3', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction to Commit Gap\" when \"NoQuota\" then \"Closed to Einstein Prediction Gap\" when \"NoPrediction\" then \"Commit to Quota Gap\" else \"Commit to Best Case Gap\" end) as 'KPILabel3', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingQuota.result,0,\"Amount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} when \"NoPrediction\" then {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}}-{{coalesce(cell(ForecastingBestCaseItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} end) as 'KPIValue4', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Closed to Quota Gap\" when \"NoQuota\" then \"Closed to Commit Gap\" when \"NoPrediction\" then \"Closed to Commit Gap\" else \"Closed to Best Case Gap\" end) as 'KPILabel4';\nq = foreach q generate KPIValue1 as 'KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel1, KPIValue2 as 'KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel2, (case when KPIValue2<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor2', KPIValue3 as 'KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel3, (case when KPIValue3<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor3', KPIValue4 as 'KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel4, (case when KPIValue4<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor4';\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastingUserPreference":{"broadcastFacet":false,"groups":[],"numbers":[],"query":"SELECT ForecastingViewCurrency from ForecastingUserPreference","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","strings":["ForecastingViewCurrency"],"type":"soql"},"KPICalculation_Non_Cumulative":{"broadcastFacet":true,"groups":[],"label":"KPICalculation_Non_Cumulative","numbers":[],"query":"r = load \"ForecastingData\";\nq = load \"User\";\nq = filter q by 'Id' == \"!{user.Id}\";\nq = foreach q generate (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}} when \"NoQuota\" then {{coalesce(cell(ForecastingPrediction.result,0,\"Amount\"),0).asObject()}} else {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} end) as 'KPIValue1', (case \"{{cell(KPIDetermination_1.result, 0, \"KPIDetermination\").asString()}}\" when \"PredictionAndQuota\" then \"Einstein Prediction\" when \"NoQuota\" then \"Einstein Prediction\" else \"Closed\" end) as 'KPILabel1', {{coalesce(cell(ForecastingClosedItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} as 'KPIValue2', \"Closed\" as 'KPILabel2', {{coalesce(cell(ForecastingCommitItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} as 'KPIValue3', \"Commit\" as 'KPILabel3', {{coalesce(cell(ForecastingBestCaseItem.result,0,\"AmountWithoutManagerAdjustment\"),0).asObject()}} as 'KPIValue4', \"Best Case\" as 'KPILabel4';\nq = foreach q generate KPIValue1 as 'KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel1, KPIValue2 as 'KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel2, (case when KPIValue2<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor2', KPIValue3 as 'KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel3, (case when KPIValue3<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor3', KPIValue4 as 'KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}', KPILabel4, (case when KPIValue4<0 then \"#D14062\" else \"#08A976\" end) as 'KPIColor4';\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"CurrentPeriod":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"Period\"; q = filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [\"current month\"..\"current month\"]; q = filter q by 'Type' in [\"Month\", \"0\"]; q = foreach q generate 'Id' as 'Id', upper(toString(now(), \"yyyy-MM-dd\")) as 'now'; q = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"TrendingPerformanceTodayLine":{"broadcastFacet":true,"groups":[],"label":"TrendingPerformanceTodayLine","numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' in [\"Predicted\"] && 'Category' in [\"Predicted\"] && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = group q by ('Date_Year', 'Date_Month', 'Date_Day', 'Category');\nq = foreach q generate ((('Date_Year' + \"~~~\") + 'Date_Month') + \"~~~\") + 'Date_Day' as 'Date_Year~~~Date_Month~~~Date_Day';\nq = order q by 'Date_Year~~~Date_Month~~~Date_Day' asc;\nq = limit q 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true},"ForecastingQuota":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"ForecastingData\";q = filter q by 'Type' == \"Quota\" && 'Category' == \"Quota\" && 'Owner_ID' == \"!{user.Id}\" && 'Period_ID' == \"{{cell(CurrentPeriod.result, 0, \"Id\").asString()}}\";\nq = foreach q generate 'Owner_ID' as 'OwnerId', 'Value' * {{coalesce(cell(CurrencyTypeStep.result, 0, \"ConversionRate\"), 1).asObject()}} as 'Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"TopContainer":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"KeyMetrics":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#54698D"},"insert":"KEY METRICS"},{"attributes":{"align":"left"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"QuotaSubtext_2":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#54698D"},"insert":"{{cell(QuotaAchieved.result, 0, \"QuotaSubText\").asString() }}"},{"attributes":{"align":"center"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"PercentQuotaNumber":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"{{cell(QuotaAchieved.result, 0, \"color\").asString() }}"},"insert":"{{ cell(QuotaAchieved.result, 0, \"PercentQuotaAchieved\").asString() }}"},{"attributes":{"align":"center"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"number_4":{"parameters":{"compact":true,"exploreLink":false,"interactions":[],"measureField":"KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor4\").asString()}}","numberSize":15,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel4\").asString()}}","titleColor":"#54698D","titleSize":15,"tooltip":{"customizeTooltip":false}},"type":"number"},"Desktop_TrendingPerformanceChart":{"parameters":{"autoFitMode":"none","totalValue":"computeTotal","showPoints":true,"legend":{"showHeader":false,"show":true,"customSize":10,"position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":["Amount","Upper Bound","Lower Bound"],"showNullValues":true,"customizeLegend":true,"showPercentage":false,"showDimensions":true,"showMeasures":true,"dimensions":["Date_Year~~~Date_Month~~~Date_Day","Category","Currency"]}}},"visualizationType":"time","missingValue":"cumulativeUntilLastData","exploreLink":true,"timeAxis":{"showTitle":false,"predictiveLine":{"color":"rgb(22, 50, 92)","time":"{{coalesce(cell(TrendingPerformanceTodayLine.result, 0, \"Date_Year~~~Date_Month~~~Date_Day\"), cell(CurrentPeriod.result, 0, \"now\")).asString()}}","label":"Today"},"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","chartsPerLine":4},"totalLabel":"","fillArea":false,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"referenceLines":[{"color":"rgb(46, 196, 78)","label":{"data":"Quota: {{cell(ForecastingQuota.result, 0, \"Amount\").asString()}}","type":"static"},"value":{"data":"{{cell(ForecastingQuota.result, 0, \"Amount\").asObject()}}","type":"static"}}],"title":"","customDomain":{"showDomain":false}},"theme":"wave","step":"TrendingPerformanceChartStep","drawArea":{"measure":"Amount","showDrawArea":true,"bounding1":"Lower Bound","bounding2":"Upper Bound"}},"type":"chart"},"number_3":{"parameters":{"compact":true,"exploreLink":false,"interactions":[],"measureField":"KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor3\").asString()}}","numberSize":15,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel3\").asString()}}","titleColor":"#54698D","titleSize":15,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":false,"interactions":[],"measureField":"KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor2\").asString()}}","numberSize":15,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel2\").asString()}}","titleColor":"#54698D","titleSize":15,"tooltip":{"customizeTooltip":false}},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"#16325C","numberSize":30,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel1\").asString()}}","titleColor":"#54698D","titleSize":15,"tooltip":{"customizeTooltip":false}},"type":"number"},"MiddleContainer_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"RunningUserName":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"32px","color":"#16325C"},"insert":"{{ cell(UserData.result, 0, \"Name\").asString() }}"},{"attributes":{"align":"center"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"TrendingPerformanceChart":{"parameters":{"totalValue":"computeTotal","showPoints":true,"legend":{"showHeader":false,"show":true,"customSize":"auto","position":"top-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":["Amount","Upper Bound","Lower Bound"],"showNullValues":true,"customizeLegend":true,"showPercentage":false,"showDimensions":true,"showMeasures":true,"dimensions":["Date_Year~~~Date_Month~~~Date_Day","Category","Currency"]}}},"visualizationType":"time","missingValue":"cumulativeUntilLastData","exploreLink":false,"timeAxis":{"showTitle":false,"predictiveLine":{"color":"#091A3E","time":"{{coalesce(cell(TrendingPerformanceTodayLine.result, 0, \"Date_Year~~~Date_Month~~~Date_Day\"), cell(CurrentPeriod.result, 0, \"now\")).asString()}}","label":"Today"},"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"enable":false,"type":"x","chartsPerLine":4},"totalLabel":"","fillArea":false,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"referenceLines":[{"color":"rgb(27, 204, 32)","label":{"data":"Quota: {{cell(ForecastingQuota.result, 0, \"Amount\").asString()}}","type":"static"},"value":{"data":"{{cell(ForecastingQuota.result, 0, \"Amount\").asString()}}","type":"static"}}],"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","step":"TrendingPerformanceChartStep","drawArea":{"measure":"Amount","showDrawArea":true,"bounding1":"Lower Bound","bounding2":"Upper Bound"}},"type":"chart"},"DesktopKPI_2":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"KPIValue2_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor2\").asString()}}","numberSize":28,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel2\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"DesktopKPI_1":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"KPIValue1_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"#335779","numberSize":28,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel1\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"TrendingPerformance":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#54698D"},"insert":"TRENDING PERFORMANCE"},{"attributes":{"align":"left"},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"UserImageChart":{"parameters":{"totalValue":"computeTotal","max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":false,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","exploreLink":false,"medium":49,"title":{"fontSize":10,"subtitleFontSize":11,"label":"","align":"left","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":false,"enable":true,"type":"x","chartsPerLine":1},"icons":{"useIcons":true,"iconProps":{"fit":"cover","column":"ChatterImage"}},"inner":90,"colors":{"mediumColor2":"#F9A549","mediumColor1":"#F9A549","lowColor1":"#D14062","lowColor2":"#D14062","highColor1":"#0BA976","highColor2":"#0BA976"},"totalLabel":"","high":99,"min":0,"showActionMenu":true,"valueType":"none","theme":"dark","step":"QuotaDetermination"},"type":"chart"},"DesktopKPI_4":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"KPIValue4_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor4\").asString()}}","numberSize":28,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel4\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"DesktopKPI_3":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"KPIValue3_{{coalesce(cell(CurrencyTypeStep.result, 0, \"IsoCode\"), \"DefaultCurrency\").asString()}}","numberColor":"{{cell(KPICalculation_Cumulative.result, 0, \"KPIColor3\").asString()}}","numberSize":28,"showActionMenu":true,"step":"KPICalculation_Cumulative","textAlignment":"center","title":"{{cell(KPICalculation_Cumulative.result, 0, \"KPILabel3\").asString()}}","titleColor":"#335779","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"}}}