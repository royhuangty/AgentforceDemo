import{ac as d,g as s,Q as l,f as m}from"../bundle.js";import{M as c,T as p}from"./enums.445299a0.js";let a;const b=(o,e)=>{switch(a=a||s(),o){case"plot-map-default":e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-map-markers":e.renderAs="Markers",e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-map-clusters":e.renderAs="Cluster",e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-map-heatmap":e.renderAs="Heatmap",e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-map-scatter":e.renderAs="Scatter",e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-visible-default":case"plot-visible-markers":e.renderAs="Markers",e.visibleAreaOnly=!0,e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-visible-clusters":e.renderAs="Cluster",e.visibleAreaOnly=!0,a.addPlottedLayer(e);break;case"plot-visible-heatmap":e.renderAs="Heatmap",e.visibleAreaOnly=!0,e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-visible-scatter":e.renderAs="Scatter",e.visibleAreaOnly=!0,e.component="MarkerLayer",a.addPlottedLayer(e);break;case"plot-load-marker":a.updatePlotOnLoad({id:e.id});break;case"edit-marker-layer":case"clone-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{mode:c.EDIT,type:p.MARKER,isClone:o==="clone-marker-layer",options:e,callback:r=>{r.plotOnSave&&a.addPlottedLayer(r.layer),a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"copy-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:!0,layer:e}});break;case"move-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{layer:e}});break;case"delete-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"marker",id:e.id})}}});break;case"edit-polyline-layer":case"clone-polyline-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{mode:c.EDIT,type:p.POLYLINE,isClone:o==="clone-polyline-layer",options:e,callback:r=>{r.plotOnSave&&a.addPlottedLayer(r.layer),a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"copy-polyline-layer":case"move-polyline-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:o==="copy-polyline-layer",layer:e}});break;case"delete-polyline-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"polyline",id:e.id})}}});break;default:console.warn("Marker layer action not found",o)}},g=(o,e)=>{a=a||s();const r=a.plottedLayers.find(t=>t.id===e.id)!==void 0;switch(o){case"clone-data-layer":case"edit-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-data-layer",config:{isPlotted:r,layerId:e.id,isClone:o==="clone-data-layer",callback:t=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers(),t.plotOnSave&&a.addPlottedLayer({qid:d(),id:t.layerId,name:t.name,type:"datalayer",analyticsType:"Data Layer",component:"datalayerLayer",permissions:{modify:!0}})}}});break;case"delete-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"data-layer",id:e.id})}}});break;case"move-data-layer":case"copy-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:o==="copy-data-layer",layer:e,callback:()=>{a.updateFolderData({folderId:a.currentFolder.id})}}});break;case"plot-data-layer-markers":a.addPlottedLayer(e);break;default:console.warn("Data layer action not found",o)}},f=(o,e)=>{a=a||s();const r=m();switch(o){case"plot-map-all":a.plotFolder(e.id,!1);break;case"plot-visible-all":a.plotFolder(e.id,!0);break;case"rename-folder":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"create-rename-folder",config:{layer:e}});break;case"copy-folder":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:!0,layer:e}});break;case"move-folder":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{layer:e}});break;case"delete-folder":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"folder",id:e.id})}}});break;case"open-folder":try{a.updateFolderData({folderId:e.id})}catch(t){r.toast({message:t,state:"error"})}break;case"new-marker-layer":e.baseObjectType="marker",MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{mode:c.CREATE,type:p.MARKER,options:e,callback:t=>{t.plotOnSave&&a.addPlottedLayer(t.layer),a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"new-polyline-layer":e.baseObjectType="polyline",e.layerSubType="polyline",MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{mode:c.CREATE,type:p.POLYLINE,options:e,callback:t=>{t.plotOnSave&&a.addPlottedLayer(t.layer),a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"new-shape-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"shape-builder",config:{folder:e.id,callback:t=>{a.updateFolderData({folderId:e.id}),a.getRecentAndPlotOnLoadLayers(),t.plotOnSave&&a.addPlottedLayer({qid:d(),id:t.layerId,name:t.name,type:"shape",analyticsType:"Shape Layer",component:"shapeLayer",permissions:{modify:!0}})}}});break;case"new-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-data-layer",config:{folder:e.id,callback:t=>{a.updateFolderData({folderId:e.id}),a.getRecentAndPlotOnLoadLayers(),t.plotOnSave&&a.addPlottedLayer({qid:d(),id:t.layerId,name:t.name,type:"datalayer",analyticsType:"Data Layer",component:"datalayerLayer",permissions:{modify:!0}})}}});break;case"new-favorite-location":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-favorite",config:{folderId:e.id,callback:({plot:t,favorite:n})=>{if(t){const i={id:n.id,qid:d(),analyticsType:"Favorite Location",type:"favorite",name:n.name,description:n.description,component:"FavoriteLayer"};a.addPlottedLayer(i)}a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"new-territory-layer":window.MALayers.createTerritoryLayer();break;case"new-folder":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"create-rename-folder",config:{isNew:!0,layer:e}});break;case"set-permissions":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"set-permissions",config:{nodeId:e.id,folderName:e.name}});break;case"set-default":a.setDefaultFolder({id:e.id,name:e.name});break;case"clear-default":a.setDefaultFolder({id:null,name:null});break;case"new-live-layer":e.baseObjectType="live",MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{mode:c.CREATE,type:p.LIVE,options:e,callback:t=>{t.plotOnSave&&a.addPlottedLayer({...t.layer,type:"live"}),a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"new-geofence-layer":e.baseObjectType="geofence",MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"select-base-object",config:e});break;case"new-live-device-layer":e.baseObjectType="live-device",e.layerSubType="device",MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"select-base-object",config:e});break;case"new-arcgis-layer":e.baseObjectType="arcgis",MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-arcgis",config:{folderId:e.id,callback:()=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;default:console.warn("Folder action not found",o)}},P=(o,e)=>{switch(a=a||s(),o){case"clone-data-layer":case"edit-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-arcgis",config:{layerId:e.id,action:o,callback:()=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"plot-arcgis-layer":e.component="ArcGISLayer",a.addPlottedLayer(e);break;case"copy-data-layer":case"move-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:o==="copy-data-layer",layer:e,callback:()=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"delete-data-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"arc-gis",id:e.id})}}});break;case"plot-load-data-layer":a.updatePlotOnLoad({id:e.id});break;default:console.warn("ArcGIS action not found",o)}},y=(o,e)=>{switch(a=a||s(),o){case"plot-shape":case"plot-shape-custom":a.addPlottedLayer(e);break;case"plot-load-shape":a.updatePlotOnLoad({id:e.id});break;case"clone-custom-shape":case"edit-shape-custom":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sketch",config:{isSavedLayer:!0,isClone:o==="clone-custom-shape",territory:{Id:e.id,Name:e.name,qid:e.qid},callback:r=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers(),r.plotOnSave&&a.addPlottedLayer({qid:d(),id:r.layerId,name:r.name,type:"shape",component:"shapeLayer",analyticsType:"Shape Layer",permissions:{modify:!0}})}}});break;case"plot-edit-shape":{a.addPlottedLayer(e);const r=setInterval(()=>{const t=a.getPlottedLayerById(e.qid),n=MAPS.view.map.findLayerById(e.qid);if(n){const i=n.graphics.items[0];clearInterval(r),MAPS.view.map.findLayerById("sketchLayer").add(i),t.isEditMode=!0,t.type==="circle"?MAPS.sketch.update([i],{tool:"transform"}):t.type==="rectangle"?MAPS.sketch.update([i],{tool:"transform",preserveAspectRatio:!1}):MAPS.sketch.update([i],{tool:"reshape"})}},500);break}case"clone-shape":case"edit-shape":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"shape-builder",config:{isClone:o==="clone-shape",territory:{Id:e.id,Name:e.Name,qid:e.qid},callback:r=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers(),r.plotOnSave&&a.addPlottedLayer({qid:d(),id:r.layerId,name:r.name,type:"shape",component:"shapeLayer",analyticsType:"Shape Layer",permissions:{modify:!0}})}}});break;case"copy-shape":case"move-shape":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:o==="copy-shape",layer:e,callback:()=>{a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"delete-shape":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"shape",id:e.id})}}});break;default:console.warn("Shape action not found",o)}},k=(o,e)=>{switch(a=a||s(),o){case"plot-live-markers":e.renderAs="Markers",e.component="MarkerLayer",a.addPlottedLayer(e);break;case"edit-live-marker-layer":case"clone-live-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{mode:c.EDIT,type:p.LIVE,isClone:o==="clone-live-marker-layer",options:e,callback:r=>{r.plotOnSave&&a.addPlottedLayer({...r.layer,type:"live"}),a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"copy-live-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:!0,layer:e}});break;case"move-live-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{layer:e}});break;case"delete-live-marker-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"live-layer",id:e.id})}}});break;case"plot-load-live-layer":a.updatePlotOnLoad({id:e.id});break;default:console.warn("Live action not found",o)}},u=(o,e)=>{switch(o){case"plot-geofence-layer":e.renderAs=["Markers"],window.Plotting.analyzeQuery(e);break;case"edit-geofence-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{params:{q:e.id}}});break;case"clone-geofence-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{params:{q:e.id,c:!0}}});break;case"copy-geofence-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:!0,layer:e}});break;case"move-geofence-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{layer:e}});break;case"delete-geofence-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"geofence",id:e.id})}}});break;case"plot-geofence-marker":case"plot-load-geofence-layer":a.updatePlotOnLoad({id:e.id});break;default:console.warn("Geofence action not found",o)}},v=(o,e)=>{switch(a=a||s(),o){case"plot-live-device-layer":a.addPlottedLayer(e);break;case"clone-live-device-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-sfdc-layer",config:{params:{q:e.id,c:!0}}});break;case"copy-live-device-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{isCopy:!0,layer:e}});break;case"move-live-device-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{layer:e}});break;case"delete-live-device-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"live-device",id:e.id})}}});break;case"plot-live-device-marker":case"plot-load-live-device-layer":a.updatePlotOnLoad({id:e.id});break;default:console.warn("Live Device action not found",o)}},L=(o,e)=>{switch(a=a||s(),o){case"plot-favorite":a.addPlottedLayer(e);break;case"edit-favorite":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"save-favorite",config:{favoriteId:e.id,callback:({plot:r,favorite:t})=>{if(r){const n={id:t.id,qid:d(),analyticsType:"Favorite Location",type:"favorite",name:t.name,description:t.description,component:"FavoriteLayer"};a.addPlottedLayer(n)}a.updateFolderData({folderId:a.currentFolder.id}),a.getRecentAndPlotOnLoadLayers()}}});break;case"delete-favorite":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"generic-confirm",config:{title:e.name,textContent:l(MAPS.app.config.globalProperties.$Labels.MapsSetting_Map_Tiles_Delete_Message,[e.name]),callback:()=>{a.deleteSavedItem({type:"favorite",id:e.id})}}});break;case"plot-load-marker":a.updatePlotOnLoad({id:e.id});break;default:console.warn("Favorite layer action not found",o)}},A=(o,e)=>{switch(o){case"plot-territory":e.qid=e.qid,e.component="TerritoryLayer",e.isTileBased=!0,MAPS.app.config.globalProperties.$bus.emit("add-layer",e,()=>{});break;case"delete-territory-layer":window.Territory.deleteTerritoryLayer(e.id);break;case"edit-territory-layer":MAPS.app.config.globalProperties.$bus.emit("render-territory-builder",e);break;case"move-territory-layer":MAPS.app.config.globalProperties.$bus.emit("open-modal",{name:"copy-move",config:{layer:e}}),window.MALayers.moveNode(e);break;default:console.warn("Territory action not found",o)}};class ${static handleAction({action:e="",layerData:r={},layers:t=[]}){const n={...r,qid:d(),updateAction:""},{type:i}=n;switch(i){case"marker":case"polyline":b(e,n);break;case"favorite":L(e,n);break;case"datalayer":g(e,n);break;case"folder":f(e,n);break;case"arcgisonline":P(e,n);break;case"shape":y(e,n);break;case"live":k(e,n);break;case"geofence":u(e,n);break;case"live-device":v(e,n);break;case"territory":A(e,n);break;default:console.warn("type not found",i)}}}export{$ as L};
