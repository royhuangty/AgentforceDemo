import{_ as A,J as Z,K as ee,O as te,B as G,I as ie,f as P,aO as B,aP as V,bP as Q,b6 as X,r as h,o as u,c as S,h as i,t as m,e as R,i as c,b as y,w as b,s as w,v as L,j as k,a0 as T,p as H,k as F,P as q,aB as re,aD as ae,a5 as ne,l as j,d as z,a as Y,x as le,aQ as O,ac as D,aR as $,be as de,bQ as C,bR as M,bS as ue}from"../bundle.js";import{R as ce}from"./routing.d6c1f97a.js";import{R as he}from"./RouteSummary.cb0ffc72.js";import{c as I,r as U}from"./index.0172543b.js";import{u as se}from"./index.d251dbc7.js";import{T as pe}from"./TimePicker.bfa4e2f9.js";import{R as me}from"./RouteSaveMixin.1664df7a.js";import{d as _e}from"./vuedraggable.umd.c7e4adc2.js";import{P as oe}from"./Popover.93a0feed.js";const ve={components:{ActionMenu:Z,ActionMenuItem:ee,TextInput:te,ButtonIcon:G,Icon:ie,TimePicker:pe},mixins:[me],emits:["clear-route","generate","reset-route"],setup(){const e=P(),t=B();return{mainStore:e,routesStore:t}},validations(){const e={startTime:{},endTime:{},routesStore:{currentRoute:{Name:{required:I.withMessage(this.$Labels.MA_Field_Req,U)}}}};return this.isTimeBased&&(e.startTime={greaterThanEnd:I.withMessage(MAPS.app.config.globalProperties.$Labels.Start_Time_Greater_Than_End_Time,t=>this.checkTimeLessOrEqual(t,this.endTime))},e.endTime={lessThanStart:I.withMessage(MAPS.app.config.globalProperties.$Labels.End_Time_Less_Than_Start_Time,t=>this.checkTimeLessOrEqual(this.startTime,t))}),e},data(){return{v$:se(),isTwentyFourHour:MAPS.currentUser.is24Hour,routeTimeHasError:!1,showResetConfirmationModal:!1,userLocale:MAPS.currentUser.LocaleFormatted,showImportEvents:!1,showConfirmDelete:!1,startTime:null,endTime:null,showCloseTooltip:!1,showTimeTooltip:!1}},computed:{currentRoute(){return this.routesStore.currentRoute},showSaveAs(){return!this.isNew&&!this.isGuideRoute&&!this.v$.$invalid},isNew(){return!this.currentRoute.Id},isGuideRoute(){return this.currentRoute.isGuideRoute},startString(){return this.currentRoute.timeBasedOptions.Start},endString(){return this.currentRoute.timeBasedOptions.End},routeDate(){return this.currentRoute?.maps__Date__c?V.fromISO(this.currentRoute.maps__Date__c):V.fromJSDate(new Date)},assetInfo(){return this.routesStore.asset&&this.routesStore.asset.type&&this.routesStore.asset.Name?`${this.routesStore.asset.type}: ${this.routesStore.asset.Name}`:""},formattedRouteDate(){return this.routeDate.toLocaleString(V.DATE_SHORT,{locale:MAPS.currentUser.LocaleFormatted})},isTimeBased(){let e;return this.currentRoute.timeBasedOptions.Enabled?e=!0:e=!1,e}},watch:{"currentRoute.Name":{handler(){this.routesStore.unsavedChanges=!0}},"routesStore.showRouteList":{handler(e){e&&this.$emit("clear-route")}}},created(){this.initTimeData()},methods:{initTimeData(){const e=Q({time:this.startString,force24Hr:!0});this.startTime={hours:e.hour,minutes:e.minute};const t=Q({time:this.endString,force24Hr:!0});this.endTime={hours:t.hour,minutes:t.minute}},checkTimeLessOrEqual(e,t){return e==null||t==null?!0:e.hours<=t.hours||e.hours===t.hours&&e.minutes<=t.minutes},emitUpdate(){if(this.v$.$touch(),this.v$.$invalid)return;const{hours:e,minutes:t}=this.startTime,{hours:r,minutes:a}=this.endTime;this.routesStore.currentRoute.timeBasedOptions={Enabled:this.isTimeBased,Start:X({hour:e,minute:t,hour12:!1}),End:X({hour:r,minute:a,hour12:!1})}},openImportEvents(){if(this.isGuideRoute){this.mainStore.toast({message:this.$Labels.Routes_Unable_To_Import_Advanced_Events,state:"warning"});return}this.$bus.emit("open-modal",{name:"import-events",config:{date:this.currentRoute?.maps__Date__c,callback:e=>{e.success&&(this.routesStore.addWaypoints(e.events),this.$emit("clear-route"))}}})},toggleTimeBased(){if(this.isGuideRoute){this.mainStore.toast({message:this.$Labels.Routes_Time_Based_Settings_Locked_Advanced_Routes,state:"warning"});return}this.currentRoute.timeBasedOptions.Enabled=!this.currentRoute.timeBasedOptions.Enabled,this.routesStore.unsavedChanges=!0,this.v$.$touch()},confirmDeleteRoute(){this.$bus.emit("open-modal",{name:"generic-confirm",config:{title:this.$Labels.MA_Delete_Route,textContent:this.$Labels.MA_Delete_Route_Confirm,noLabel:this.$Labels.MA_Cancel,yesLabel:this.$Labels.MA_Delete,callback:()=>{this.$emit("clear-route"),this.deleteRoute()}}})},async deleteRoute(){this.routesStore.callouts++;const{success:e,message:t}=await this.routesStore.deleteRoute(this.currentRoute.Id);e?(this.routesStore.resetCurrentRoute(),this.routesStore.showRouteList=!0):this.mainStore.toast({message:t,state:"error"}),this.routesStore.callouts--},confirmRemoveWaypoints(){this.$bus.emit("open-modal",{name:"generic-confirm",config:{title:this.$Labels.MA_Are_You_Sure,textContent:this.$Labels.MA_Clear_Waypoints,noLabel:this.$Labels.MA_Cancel,yesLabel:this.$Labels.MA_Remove_Waypoints,callback:()=>{this.removeWaypoints()}}})},removeWaypoints(){this.currentRoute.first=null,this.currentRoute.waypoints=[],this.currentRoute.last=null,this.currentRoute.pendingChanges=!0,this.$emit("reset-route")},back(){this.routesStore.unsavedChanges?this.$bus.emit("open-modal",{name:"generic-confirm",config:{title:this.$Labels.MA_Route_SaveChanges,textContent:this.$Labels.DO_YOU_WANT_TO_SAVE_YOUR_CHANGES_BEFORE_CONTINUING_PROMPT,noLabel:this.$Labels.MA_Cancel,yesLabel:this.$Labels.MA_Save_Close,discardLabel:this.$Labels.MA_Close_Discard,callback:async e=>{this.routesStore.unsavedChanges=!1,e.action==="yes"?await this.saveRoute():(this.routesStore.resetCurrentRoute(),this.routesStore.showRouteList=!0)}}}):(this.routesStore.resetCurrentRoute(),this.routesStore.showRouteList=!0)},saveCloseRoute(){this.saveRoute(null,!0)},async saveRoute(e,t=!1){if(this.v$.$touch(),this.v$.$invalid)return;if(this.routeTimeHasError&&this.isTimeBased){this.mainStore.toast({message:this.$Labels.Routes_Validate_Start_End_Times,state:"error"});return}if(this.isGuideRoute){let s=!1;this.currentRoute.waypoints.forEach(l=>{let n=l.maps__Options__c;typeof n=="string"&&(n=this.$_RouteSave_convertToJSON(n)),(!n||!n.TimeBasedOptions||n.TimeBasedOptions.Start===this.$Labels.MA_Set_Start)&&(s=!0)}),s&&this.mainStore.toast({message:this.$Labels.Routes_Enter_Start_Time_For_Advanced_Stops,state:"error"})}if(this.isNew){this.saveRouteAs();return}let{summary:{totaltraveltime:r,distance:a}}=this.currentRoute;r&&(r/=60),a&&(a=(a*621371e-9).toFixed(1));const o={name:MAPS.Utils.String.htmlDecode(this.currentRoute.Name),Id:this.currentRoute.Id,day:this.routeDate.get("day"),month:Number(this.routeDate.get("month"))-1,year:this.routeDate.get("year"),lookupId:this.routesStore.asset.Id,lookupField:this.routesStore.asset.field,user:this.currentRoute.User,options:{DriveProfile:this.currentRoute.travelMode,TimeBasedOptions:this.currentRoute.timeBasedOptions},distance:a,totaltraveltime:r,waypoints:this.getWaypointRecordsForSave()};try{const{success:s}=await this.routesStore.saveRoute(o);s?(this.routesStore.unsavedChanges=!1,this.routesStore.getRoutes(),this.mainStore.toast({message:this.$Labels.MA_Success}),t&&(this.routesStore.showRouteList=!0)):this.mainStore.toast({message:"Could not save route",state:"error"})}catch(s){console.warn("error while saving route.",s),this.mainStore.toast({message:String(s),state:"error"})}},saveRouteAs(){if(this.v$.$touch(),!this.v$.$invalid){if(this.isGuideRoute){this.mainStore.toast({message:this.$Labels.Routes_Cant_Reassign_Advanced_Routes,state:"warning"});return}this.$bus.emit("open-modal",{name:"route-calendar",config:{callback:async({routeId:e})=>{this.routesStore.getRoutes(),await this.routesStore.getRoute(e),this.routesStore.unsavedChanges=!1,this.$emit("generate")}}})}}}},fe=e=>(H("data-v-b6bc17e1"),e=e(),F(),e),ye={key:0,class:"labor-law-notification slds-notify_container slds-notify_container--inline"},ge={class:"slds-notify slds-notify--alert slds-theme--warning slds-theme--alert-texture slds-banner"},be={id:"routesSingleHeader",class:"slds-p-top_small slds-p-bottom_small slds-p-left_medium slds-p-right_x-small slds-grid"},Re={class:"slds-col"},Se={class:"slds-grid slds-p-bottom_small ma-route-top-menu"},Me={class:"slds-col slds-p-right_xx-small"},Te={class:"slds-p-right_small"},we={class:"slds-button-group",role:"group"},Le=["disabled"],Ae=fe(()=>i("button",{id:"routesSingleSaveDropdownButton",class:"slds-button slds-button_success slds-button_icon slds-button_icon-border-filled"},[i("span",{class:"slds-button__icon ma-icon ma-icon-down"})],-1)),Oe={class:"slds-p-left_xx-small"},Ce={class:"slds-popover slds-popover_tooltip slds-nubbin_left"},ke={class:"slds-popover__body"},Be={class:"slds-grid slds-grid_vertical-align-center"},Ee={class:"slds-col slds-grid slds-text-color_weak"},Ie={class:"ma-user-label slds-truncate slds-p-right_medium"},De={id:"datepickerContainer",class:"slds-grid"},Pe={class:"timeBasedTempButton slds-col_bump-left slds-p-left_xx-small"},Ne={class:"slds-m-right_small"},$e={class:"slds-text-title_bold"},We=["disabled"],xe={class:"slds-popover slds-popover_tooltip slds-nubbin_left"},Ve={class:"slds-popover__body"},Ue={key:0,class:"slds-grid slds-grid_vertical-align-center slds-scope Advanced Route-route-header"},Ge={style:{"margin-top":"5px"},class:"slds-text-title_caps"},He={class:"icon ma-icon-Advanced Route-logo"};function Fe(e,t,r,a,o,s){const l=h("TextInput"),n=h("ActionMenuItem"),d=h("ActionMenu"),p=h("ButtonIcon"),g=h("Icon"),v=h("TimePicker");return u(),S("div",null,[a.mainStore.settings.routes.showLaborLawNotification?(u(),S("div",ye,[i("div",ge,[i("h2",null,m(e.$Labels.MA_Labor_Laws),1)])])):R("",!0),i("div",be,[i("div",Re,[i("div",Se,[i("div",Me,[c(l,{modelValue:o.v$.routesStore.currentRoute.Name.$model,"onUpdate:modelValue":t[0]||(t[0]=_=>o.v$.routesStore.currentRoute.Name.$model=_),inputAttrs:{id:"routeHeaderTextInputRouteResource"},required:"",errors:e.$getErrorsByField(o.v$.routesStore.currentRoute.Name),labels:{placeholder:e.$Labels.routes_Route_Name,required:e.$Labels.MA_Required},class:"slds-form-element_inverse"},null,8,["modelValue","errors","labels"])]),i("div",Te,[i("div",we,[i("button",{disabled:o.v$.$invalid,class:"slds-button slds-button_success","data-pendo":"route_save",onClick:t[1]||(t[1]=(..._)=>s.saveRoute&&s.saveRoute(..._))},m(e.$Labels.MA_Save),9,Le),s.showSaveAs?(u(),y(d,{key:0,id:"routeHeaderActionMenuSaveBtnResource",forceRight:!0,showMoreLabel:e.$Labels.MA_SHOW_MORE,class:"slds-button_last ma-save-as"},{button:b(()=>[Ae]),default:b(()=>[c(n,{id:"routeHeaderActionMenuSaveAsBtnResource",class:"ma-save-as-button","data-pendo":"route_save-as",label:e.$Labels.MA_SaveAs,onClick:s.saveRouteAs},null,8,["label","onClick"])]),_:1},8,["showMoreLabel"])):R("",!0)])]),i("div",null,[c(d,{showMoreLabel:e.$Labels.MA_SHOW_MORE},{button:b(()=>[c(p,{id:"routeHeaderActionMenuShowMoreBtnResource",assistiveText:e.$Labels.MA_SHOW_MORE,iconCategory:"utility",iconName:"threedots_vertical",class:"slds-p-top_x-small slds-p-horizontal_xx-small",title:e.$Labels.MA_SHOW_MORE},null,8,["assistiveText","title"])]),default:b(()=>[w(c(n,{id:"routeHeaderActionMenuConfirmDeleteRouteBtnResource",label:e.$Labels.MA_Delete_Route,onClick:s.confirmDeleteRoute},null,8,["label","onClick"]),[[L,s.currentRoute.Id]]),c(n,{id:"routeHeaderActionMenuConfirmRemoveWaypointsBtnResource",label:e.$Labels.MA_Remove_Waypoints,onClick:s.confirmRemoveWaypoints},null,8,["label","onClick"]),c(n,{id:"routeHeaderActionMenuOpenImportEventsBtnResource",label:e.$Labels.MA_IMPORT_EVENTS,onClick:s.openImportEvents},null,8,["label","onClick"])]),_:1},8,["showMoreLabel"])]),i("div",Oe,[i("button",{id:"routesSingleBackButton",class:"slds-button slds-button_icon-container has-hover-tooltip",onClick:t[4]||(t[4]=(..._)=>s.back&&s.back(..._))},[c(g,{id:"routeHeaderCloseIconResource",category:"utility",name:"close",size:"x-small",onMouseover:t[2]||(t[2]=_=>o.showCloseTooltip=!0),onMouseleave:t[3]||(t[3]=_=>o.showCloseTooltip=!1)}),w(i("div",Ce,[i("div",ke,m(e.$Labels.MA_Close_Remove_Map),1)],512),[[L,o.showCloseTooltip]])])])]),i("div",Be,[i("div",Ee,[i("div",Ie,m(s.assetInfo),1),i("div",De,[c(g,{category:"utility",name:"event",size:"xx-small",class:"slds-p-right_xx-small"}),i("div",null,m(s.formattedRouteDate),1)])]),i("div",Pe,[i("span",Ne,[k(m(e.$Labels.routes_Route_Type)+": ",1),i("span",$e,m(s.isTimeBased?e.$Labels.routes_Time_Based:e.$Labels.MA_Standard),1)]),i("button",{id:"js-toggleTimeBased",class:T([{"active slds-is-selected":s.isTimeBased},"slds-button slds-button_icon slds-button_icon-container has-hover-tooltip"]),disabled:!a.mainStore.settings.routes.type.unlocked,onClick:t[9]||(t[9]=(..._)=>s.toggleTimeBased&&s.toggleTimeBased(..._))},[s.isTimeBased?(u(),y(g,{key:1,id:"routeHeaderRouteTypeTimeBasedResource",category:"utility",name:"clock",size:"x-small",variant:"inverse",onMouseover:t[7]||(t[7]=_=>o.showTimeTooltip=!0),onMouseleave:t[8]||(t[8]=_=>o.showTimeTooltip=!1)})):(u(),y(g,{key:0,id:"routeHeaderRouteTypeStandardResource",category:"utility",name:"clock",size:"x-small",onMouseover:t[5]||(t[5]=_=>o.showTimeTooltip=!0),onMouseleave:t[6]||(t[6]=_=>o.showTimeTooltip=!1)})),w(i("div",xe,[i("div",Ve,m(e.$Labels.MA_Toggle_Time_Based),1)],512),[[L,o.showTimeTooltip]])],10,We)])]),w(i("div",{class:T([{"slds-has-error":o.routeTimeHasError},"slds-grid slds-gutters"])},[c(v,{id:"routeHeaderTimeBasedFromResource",modelValue:o.v$.startTime.$model,"onUpdate:modelValue":[t[10]||(t[10]=_=>o.v$.startTime.$model=_),s.emitUpdate],inputAttrs:{"data-test-id":"route-start-time-picker"},errors:e.$getErrorsByField(o.v$.startTime),combobox:"",class:"slds-col",labels:{name:e.$Labels.MA_Start_Time},interval:{hours:0,minutes:15},locale:o.userLocale},null,8,["modelValue","errors","labels","locale","onUpdate:modelValue"]),c(v,{id:"routeHeaderTimeBasedToResource",modelValue:o.v$.endTime.$model,"onUpdate:modelValue":[t[11]||(t[11]=_=>o.v$.endTime.$model=_),s.emitUpdate],inputAttrs:{"data-test-id":"route-end-time-picker"},errors:e.$getErrorsByField(o.v$.endTime),combobox:"",class:"slds-col",labels:{name:e.$Labels.MA_End_Time},interval:{hours:0,minutes:15},locale:o.userLocale},null,8,["modelValue","errors","labels","locale","onUpdate:modelValue"])],2),[[L,s.isTimeBased]]),s.isGuideRoute?(u(),S("div",Ue,[i("div",Ge,[i("div",He,m(e.$Labels.routes_Maps_Advanced),1)])])):R("",!0)])])])}const qe=A(ve,[["render",Fe],["__scopeId","data-v-b6bc17e1"]]);const je={components:{Picklist:q},directives:{"click-outside":re},props:{travelMode:{type:String,default:"driving"},isGuideRoute:{type:Boolean,required:!1,default:!1}},emits:["update:travelMode"],setup(){return{mainStore:P()}},data(){return{userOverridable:!0,isTravelModeVisible:!1,selectedCustomProfile:"",customProfiles:[],isCustomDriveVisible:!1,TravelModes:{DRIVING:{value:"driving",icon:"ma-icon-custom31",label:this.$Labels.MA_Car},WALKING:{value:"walking",icon:"ma-icon-walk",label:this.$Labels.Routes_Walk},BICYCLING:{value:"bicycling",icon:"ma-icon-bicycle",label:this.$Labels.routes_Bike},CUSTOM:{value:"custom",icon:"ma-icon-new-custom98",label:this.$Labels.MA_Custom}}}},computed:{isDrivingTravelMode(){return this.travelMode===this.TravelModes.DRIVING.value},isWalkingTravelMode(){return this.travelMode===this.TravelModes.WALKING.value},isBicylingTravelMode(){return this.travelMode===this.TravelModes.BICYCLING.value},isCustomTravelMode(){return this.isValidCustomProfile(this.travelMode)},travelIcon(){let{icon:e}=this.TravelModes.DRIVING;return Object.keys(this.TravelModes).forEach(t=>{this.TravelModes[t].value===this.travelMode&&({icon:e}=this.TravelModes[t])}),e},currentTravelModeTitle(){let e="",t;return this.isValidStandardProfile(this.travelMode)?t=Object.keys(this.TravelModes).filter(r=>this.TravelModes[r]?.value===this.travelMode).map(r=>this.TravelModes[r]?.label):this.isValidCustomProfile(this.travelMode)&&(t=this.customProfiles.filter(r=>r.Id===this.travelMode).map(r=>r.Name)),Array.isArray(t)&&([e="Unknown"]=t),e},clickOutsideOptions(){return{active:!0,handler:this.hideTravelMode}}},watch:{travelMode(e){e&&!this.isValidCustomProfile(e)&&(this.selectedCustomProfile="")},selectedCustomProfile(e){e&&this.setTravelMode(e)}},async created(){await this.loadDriverProfiles(),this.travelMode?this.selectTravelMode(this.travelMode):this.setDefaultValues()},methods:{showTravelMode(){this.isTravelModeVisible=!this.isTravelModeVisible},hideTravelMode(){this.isTravelModeVisible=!1},showCustomDriveSelector(){this.isCustomDriveVisible||(this.isCustomDriveVisible=!0)},hideCustomDriveSelector(){this.isCustomDriveVisible=!1},selectTravelMode(e){if(this.isGuideRoute&&e!==this.TravelModes.DRIVING.value){this.mainStore.toast({message:this.$Labels.Routes.AdvRoute_Profiles_Warning,state:"warning"});return}e!==this.TravelModes.CUSTOM.value?(this.hideCustomDriveSelector(),this.setTravelMode(e)):this.showCustomDriveSelector()},setTravelMode(e){this.travelMode!==e&&(this.hideTravelMode(),this.isValidTravelMode(e)?this.$emit("update:travelMode",e):this.errmsg="Invalid travel mode. Please try again.")},async loadDriverProfiles(){const e=await this.buildDriverProfiles();this.customProfiles=[],e.forEach(t=>{t.Name&&this.customProfiles.push(t)}),this.isValidCustomProfile(this.travelMode)&&(this.isCustomDriveVisible=!0,this.selectedCustomProfile=this.travelMode)},async buildDriverProfiles(){const e={ajaxResource:"RouteCalendarAJAXResources",action:"getDriveProfiles"};try{const{success:t,data:r}=await MAPS.Utils.Apex.invoke("maps.RemoteFunctions.processAJAXRequest",[e]);if(t)return r?.driveProfiles||[]}catch(t){console.error(t)}return[]},isValidTravelMode(e){return this.isValidStandardProfile(e)||this.isValidCustomProfile(e)},isValidStandardProfile(e){return Object.keys(this.TravelModes).map(r=>this.TravelModes[r]?.value).includes(e)},isValidCustomProfile(e){return this.customProfiles.map(r=>r.Id).includes(e)},customProfileSelect(e){this.isValidCustomProfile(e)?this.showCustomDriveSelector():(this.hideCustomDriveSelector(),this.setTravelMode("driving"))},setDefaultValues(){this.mainStore?.settings?.routes?.driveProfile?.unlocked||(this.userOverridable=!1),this.selectTravelMode(this.mainStore?.settings?.routes?.driveProfile?.value||"driving")}}},E=e=>(H("data-v-c6e82d2b"),e=e(),F(),e),ze={id:"travelModeSelector",class:"ma-travel-mode-selector",style:{cursor:"pointer"}},Ye={class:"slds-is-relative ma-travel-mode"},Je=["title"],Ke=E(()=>i("span",{class:"slds-button__icon_x-small ma-icon ma-icon-down"},null,-1)),Qe=E(()=>i("button",{class:"slds-button slds-button_icon",title:"Show Travel Modes"},[i("span",{class:"slds-assistive-text"},"Travel Mode")],-1)),Xe={key:0,class:"slds-popover slds-nubbin_top-left slds-dynamic-menu",style:{position:"absolute","margin-top":"15px","margin-left":"-7px"}},Ze={class:"slds-popover__body slds-p-horizontal_none"},et={class:"slds-p-vertical_x-small slds-p-horizontal_small"},tt={class:"slds-form-element__label",for:""},st={class:"slds-button-group slds-grid",role:"group"},ot=["title","disabled"],it=E(()=>i("span",{style:{"font-size":"16px","line-height":"36px"},class:"slds-icon slds-button__icon slds-icon-text-default ma-icon ma-icon-custom31"},null,-1)),rt={class:"slds-assistive-text"},at=["title","disabled"],nt=E(()=>i("span",{style:{"font-size":"16px","line-height":"36px"},class:"slds-icon slds-button__icon slds-icon-text-default ma-icon ma-icon-walk"},null,-1)),lt={class:"slds-assistive-text"},dt=["title","disabled"],ut=E(()=>i("span",{style:{"font-size":"16px","line-height":"36px"},class:"slds-icon slds-button__icon slds-icon-text-default ma-icon ma-icon-bicycle"},null,-1)),ct={class:"slds-assistive-text"},ht=["title","disabled"],pt=E(()=>i("span",{style:{"font-size":"16px","line-height":"36px"},class:"slds-icon slds-button__icon slds-button__icon_left ma-icon ma-icon-new-custom98"},null,-1)),mt={class:"slds-assistive-text"};function _t(e,t,r,a,o,s){const l=h("Picklist"),n=ae("click-outside");return w((u(),S("div",ze,[i("div",Ye,[i("div",{title:s.currentTravelModeTitle,class:"slds-button slds-button_icon slds-button_icon-container slds-button_icon-more-flex",onClick:t[0]||(t[0]=(...d)=>s.showTravelMode&&s.showTravelMode(...d))},[i("span",{class:T([s.travelIcon,"slds-button__icon_large ma-icon"]),style:{"font-size":"16px","line-height":"30px"}},null,2),Ke],8,Je),Qe]),o.isTravelModeVisible?(u(),S("section",Xe,[i("div",Ze,[i("div",et,[i("label",tt,m(e.$Labels.routes_Transportation_Mode),1),i("div",st,[i("button",{id:"routeDriveProfileSelectorCarBtnResource",title:o.TravelModes.DRIVING.label,class:T([{"slds-is-selected":s.isDrivingTravelMode},"slds-button slds-button_icon slds-button_icon-border-filled"]),"aria-pressed":"true",disabled:!o.userOverridable,onClick:t[1]||(t[1]=d=>s.selectTravelMode(o.TravelModes.DRIVING.value))},[it,i("span",rt,m(o.TravelModes.DRIVING.label),1)],10,ot),i("button",{id:"routeDriveProfileSelectorWalkBtnResource",title:o.TravelModes.WALKING.label,class:T([{"slds-is-selected":s.isWalkingTravelMode},"slds-button slds-button_icon slds-button_icon-border-filled"]),"aria-pressed":"true",disabled:!o.userOverridable,onClick:t[2]||(t[2]=d=>s.selectTravelMode(o.TravelModes.WALKING.value))},[nt,i("span",lt,m(o.TravelModes.WALKING.label),1)],10,at),i("button",{id:"routeDriveProfileSelectorBicyclingBtnResource",title:o.TravelModes.BICYCLING.label,class:T([{"slds-is-selected":s.isBicylingTravelMode},"slds-button slds-button_icon slds-button_icon-border-filled"]),"aria-pressed":"true",disabled:!o.userOverridable,onClick:t[3]||(t[3]=d=>s.selectTravelMode(o.TravelModes.BICYCLING.value))},[ut,i("span",ct,m(o.TravelModes.BICYCLING.label),1)],10,dt),i("button",{id:"routeDriveProfileSelectorTruckBtnResource",title:o.TravelModes.DRIVING.label,class:T([{"slds-is-selected":s.isCustomTravelMode},"slds-button slds-button_neutral custom-travel-button"]),"aria-pressed":"true",disabled:!o.userOverridable,onClick:t[4]||(t[4]=d=>s.selectTravelMode(o.TravelModes.CUSTOM.value))},[pt,k(" "+m(o.TravelModes.CUSTOM.label)+" ",1),i("span",mt,m(o.TravelModes.CUSTOM.label),1)],10,ht)]),o.isCustomDriveVisible?(u(),y(l,{key:0,modelValue:o.selectedCustomProfile,"onUpdate:modelValue":t[5]||(t[5]=d=>o.selectedCustomProfile=d),labels:{name:e.$Labels.MA_Drive_Profiles,none:e.$Labels.MA_None},options:o.customProfiles,hasNoneOption:"",class:"slds-p-top_small",titleKey:"Name",idKey:"Id",onInput:s.customProfileSelect},null,8,["modelValue","labels","options","onInput"])):R("",!0)])])])):R("",!0)])),[[n,void 0,s.clickOutsideOptions]])}const vt=A(je,[["render",_t],["__scopeId","data-v-c6e82d2b"]]);const ft={components:{Checkbox:ne,DriveProfileSelector:vt,SLDSButton:j,ButtonIcon:G},props:{onMap:{type:Boolean,default:!1},showOnTheMapToggle:{type:Boolean,default:!1}},emits:["toggle-route","generate"],setup(){return{routesStore:B()}},data(){return{canRefreshRoute:!1,storedTravelMode:""}},computed:{currentRoute(){return this.routesStore.currentRoute},buttonLabel(){return this.routesStore.currentRoute.lockOrder?this.$Labels.MA_Get_Directions:this.$Labels.MA_Optimize}},watch:{storedTravelMode(e,t){e!==t&&(this.routesStore.pendingChanges=!0,this.currentRoute.travelMode=e,this.reloadMap())}},created(){this.storedTravelMode=this.currentRoute.travelMode},mounted(){this.canRefreshRoute=!0},unmounted(){},methods:{reloadMap(){this.canRefreshRoute&&this.$emit("generate",!this.currentRoute.lockOrder)},updateToggleValue(){this.$emit("toggle-route",!this.onMap)}}},yt={id:"routesSingleControlBar",class:"slds-p-horizontal_medium slds-p-vertical_x-small slds-grid slds-grid_vertical-align-center"},gt={class:"slds-p-left_x-small"},bt={class:"lock-stop-toggle-wrap slds-form-element slds-p-left_x-small route-control-toggle-wrap"},Rt={class:"on-the-map-toggle-wrap slds-form-element slds-col_bump-left route-control-toggle-wrap"};function St(e,t,r,a,o,s){const l=h("SLDSButton"),n=h("DriveProfileSelector"),d=h("Checkbox"),p=h("ButtonIcon");return u(),S("div",yt,[i("div",null,[c(l,{id:"routeControlBarGetDirectionBtnResource",variant:"brand",iconCategory:"utility",iconName:"level_down",iconPosition:"left",onClick:s.reloadMap},{default:b(()=>[k(m(s.buttonLabel),1)]),_:1},8,["onClick"])]),i("div",gt,[c(n,{id:"routeControlBarDriveProfileResource",travelMode:o.storedTravelMode,"onUpdate:travelMode":t[0]||(t[0]=g=>o.storedTravelMode=g),isGuideRoute:a.routesStore.currentRoute.isGuideRoute},null,8,["travelMode","isGuideRoute"])]),i("div",bt,[c(d,{modelValue:a.routesStore.currentRoute.lockOrder,"onUpdate:modelValue":t[1]||(t[1]=g=>a.routesStore.currentRoute.lockOrder=g),inputAttrs:{id:"routeControlBarLockStopOrderResource"},labels:{name:e.$Labels.MA_Lock_Order},slide:""},null,8,["modelValue","labels"])]),w(i("div",Rt,[c(p,{id:"routeControlBarHideIsolinesResource",assistiveText:e.$Labels.MA_SHOW_MORE,iconCategory:"utility",iconName:r.onMap?"preview":"hide",title:"Toggle Route Visibility",class:"slds-p-top_x-small slds-p-horizontal_xx-small",onClick:s.updateToggleValue},null,8,["assistiveText","iconName","onClick"])],512),[[L,r.showOnTheMapToggle]])])}const Mt=A(ft,[["render",St],["__scopeId","data-v-a0ecbfbf"]]);const Tt=z(()=>Y(()=>import("./RouteTimeAndDistance.72398a00.js"),[MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/RouteTimeAndDistance.72398a00.js" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "bundle.js" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/main.feeda730.css" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/RouteTimeAndDistance.8c2c7c1a.css" })],import.meta.url)),wt=z(()=>Y(()=>import("./WaypointOptions.a48853d6.js"),[MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/WaypointOptions.a48853d6.js" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "bundle.js" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/main.feeda730.css" })],import.meta.url)),Lt=z(()=>Y(()=>import("./WaypointIcon.4830e8cd.js"),[MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/WaypointIcon.4830e8cd.js" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "bundle.js" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/main.feeda730.css" }),MAPS.getURLPath({ base: '/resource/1730379547462/maps__VueDesktopV2/dist/', path: "assets/WaypointIcon.eed1edce.css" })],import.meta.url)),At={name:"RouteBodyWaypoint",components:{ActionMenu:Z,ActionMenuItem:ee,WaypointOptions:wt,WaypointIcon:Lt,RouteTimeAndDistance:Tt,TextInput:te,ButtonIcon:G,ScopedNotification:le},inject:["routeBodyRef"],props:{type:{type:String,default:"waypoint"},waypoint:{type:Object,required:!0},isDisabled:{type:Boolean,default:!1}},validations(){return{name:{required:I.withMessage(this.$Labels.MA_Field_Req,U)},address:{required:I.withMessage(this.$Labels.MA_Field_Req,U)}}},emits:["remove","update"],setup(){const e=B(),t=P();return{routesStore:e,mainStore:t}},data(){return{v$:se(),showEditMode:!1,showTimeEditMode:!1,name:this.waypoint.Name||"",note:MAPS.Utils.String.htmlDecode(this.waypoint.maps__Notes__c||""),address:this.waypoint.maps__Address__c||"",waypointOptions:{},toast:"",duration:"",start:"",timeIs24Hr:!1,showOverflowActions:!1,renderOverflowActions:!1}},computed:{currentRoute(){return this.routesStore.currentRoute},showTimeDistance(){return!this.currentRoute.pendingChanges&&this.waypoint.distance},formattedDuration(){return this.waypointOptions.TimeBasedOptions.Duration},startString(){return this.waypointOptions.TimeBasedOptions.Start},divClass(){let e="";return this.showError&&(this.currentRoute.isGuideRoute?e+="has-warning ":e+="has-error "),this.showEditMode&&(e+="is-editing "),this.isWaypoint?e+="routes-destination-list-item slds-card":this.isStart?e+="routes-start-list-item":this.isEnd&&(e+="routes-end-list-item"),e},editIcon(){return this.showEditMode?"check":"edit"},inlineErrorClass(){return this.currentRoute.isGuideRoute?"slds-inline_icon_text--warning":"slds-inline_icon_text--error"},isStart(){return this.type==="start"},isEnd(){return this.type==="end"},isWaypoint(){return this.type==="waypoint"},isLocked(){return this.waypoint.maps__isLocked__c?this.waypoint.maps__isLocked__c:!1},url(){let e;const t=this.waypoint?.marker?.record?.Id;MAPS.IsCommunity?this.waypoint.maps__LinkId__c?e=this.waypoint.maps__LinkId__c:t!==void 0?e=t:e=void 0:e=this.waypoint.maps__LinkId__c?this.waypoint.maps__LinkId__c:void 0;const r=MAPS.IsCommunity&&MAPS.CommunityBaseUrl?MAPS.CommunityBaseUrl:"";return e!==void 0?`${r}/${e}`:void 0},allowUpdateName(){return this.isWaypoint&&!this.waypoint.maps__LinkId__c},showError(){return this.waypoint.errorMsg&&this.waypoint.erroramount&&this.waypoint.erroramount>120},errorString(){const e=this.waypoint.erroramount||0,t=Math.round(parseFloat(e/60));let{errorMsg:r}=this.waypoint;if(!r||r===""||r==="Unreachable")if(t>=60){const a=Math.floor(t/60),o=t%60,s=o===0?" ":this.formatLabel(this.$Labels.Routes_Minutes_Message,{0:o});r=this.formatLabel(this.$Labels.Routes_Hours_Minutes_Late,{0:a,1:s})}else r=this.formatLabel(this.$Labels.Routes_Minutes_Late,{0:t});return r},showArrivalDeparture(){return this.waypoint.arrivaltime&&this.waypoint.departuretime&&this.currentRoute.timeBasedOptions.Enabled&&!this.showEditMode&&!this.currentRoute.pendingChanges},arrivalDeparture(){return this.isStart?this.formatLabel(this.$Labels.routes_Departure,{0:this.arrivalString}):this.isEnd?this.formatLabel(this.$Labels.routes_Arrival,{0:this.arrivalString}):this.formatLabel(this.$Labels.routes_Arrival_And_Departure,{0:this.arrivalString,1:this.departureString})},departureString(){return this.waypoint.departuretime?this.formatTime(this.waypoint.departuretime):""},arrivalString(){return this.waypoint.arrivaltime?this.formatTime(this.waypoint.arrivaltime):""},applyLabel(){return this.isStart?this.$Labels.routes_Apply_End:this.$Labels.routes_Apply_Start},scrollToThisError(){return this.waypoint.scrollToThisError}},watch:{waypoint(){this.waypoint.maps__Options__c&&typeof this.waypoint.maps__Options__c=="object"&&this.waypoint.maps__Options__c.TimeBasedOptions!==this.waypointOptions.TimeBasedOptions&&this.applyWaypointOptions(),this.waypoint.maps__Address__c!==this.address&&(this.address=this.waypoint.maps__Address__c||""),this.waypoint.Name!==this.name&&(this.name=this.waypoint.Name||"")},scrollToThisError(e){if(e){const t=this.routeBodyRef();if(!t)return;const r=t.offsetTop,a=this.$el.offsetTop;t.scrollTop=a-r}}},created(){this.applyWaypointOptions()},methods:{formatTime(e){const t=e*1e3,r=new Date(t);return this.$F("DateTime",r,{hour:"numeric",minute:"numeric",hour12:!MAPS.currentUser.is24Hour})},formatLabel(e,t={}){return Object.keys(t).forEach(r=>e=e.replace(new RegExp(`\\{${r}\\}`,"g"),t[r])),e},decodeWaypointOptions(){let e=O.defaultOptions;if(typeof this.waypoint.maps__Options__c=="object")e=this.waypoint.maps__Options__c;else if(typeof this.waypoint.maps__Options__c=="string"){const t=MAPS.Utils.String.htmlDecode(this.waypoint.maps__Options__c);try{e=JSON.parse(t)}catch{}}return JSON.parse(JSON.stringify(e))},applyWaypointOptions(){this.waypointOptions=this.decodeWaypointOptions();const e=this.waypointOptions.TimeBasedOptions||{};this.timeIs24Hr=!1,this.start=e.Start,this.duration=e.Duration},applyTo(){this.isStart?this.routesStore.updateLast({...this.waypoint,id:D()}):this.routesStore.updateFirst({...this.waypoint,id:D()})},remove(){this.$emit("remove",this.waypoint.id)},edit(){this.showEditMode?this.save():(this.showTimeEditMode=!1,this.showEditMode=!0)},applyRouteTime(){let e=this.start;e===""&&(e=this.$Labels.MA_Set_Start),this.waypointOptions.TimeBasedOptions.Start=e;let t=this.duration;t===""&&(t="0 hr, 5 min"),this.waypointOptions.TimeBasedOptions.Duration=t,this.currentRoute.pendingChanges=!0},saveRouteTime(){this.applyRouteTime(),this.emitSave({maps__Options__c:this.waypointOptions}),this.toggleTimeEditMode(!1)},toggleLockGuideRoute(){this.waypoint.maps__isLocked__c=!this.waypoint.maps__isLocked__c},toggleTimeEditMode(e){this.showEditMode||(e&&this.applyWaypointOptions(),this.showTimeEditMode=e)},save(){this.v$.$touch(),!this.v$.$invalid&&(this.applyRouteTime(),this.address!==this.waypoint.maps__Address__c?$.geocode(this.address).then((e={})=>{if(!e?.position||!e.position.lat||!e.position.lng)throw this.mainStore.toast({message:"New Address failed to geocode",state:"error"}),new Error("New Address failed to geocode");this.emitSave({Name:this.name,maps__Notes__c:this.note,maps__Address__c:this.address,maps__Options__c:this.waypointOptions,lat:e.position.lat,lng:e.position.lng})}).catch(e=>{this.mainStore.toast({message:e.message,state:"error"})}):this.emitSave({Name:this.name,maps__Notes__c:this.note,maps__Address__c:this.address,maps__Options__c:this.waypointOptions}))},emitSave(e){this.showEditMode=!1,this.$emit("update",{...this.waypoint,...e})}}},Ot={class:"ma-routes-waypoint-entry slds-col slds-p-right_x-small","data-test-id":"route-waypoint-info-wrapper",style:{"min-width":"0"}},Ct={class:"slds-grid"},kt={class:"routes-destination-list-item-form-title slds-col slds-size_4-of-6 slds-col_bump-right"},Bt=["href","title"],Et={class:"routes-destination-list-item-description slds-m-bottom_xx-small"};function It(e,t,r,a,o,s){const l=h("WaypointIcon"),n=h("TextInput"),d=h("ButtonIcon"),p=h("ActionMenuItem"),g=h("ActionMenu"),v=h("WaypointOptions"),_=h("ScopedNotification"),N=h("RouteTimeAndDistance");return u(),S("div",null,[i("div",{ref:"wrapper",class:T(s.divClass),onMouseover:t[8]||(t[8]=(...f)=>e.over&&e.over(...f)),onMouseleave:t[9]||(t[9]=(...f)=>e.out&&e.out(...f))},[c(l,{isWaypoint:s.isWaypoint,waypointIndex:r.waypoint?.index,isStart:s.isStart,isEnd:s.isEnd},null,8,["isWaypoint","waypointIndex","isStart","isEnd"]),i("div",Ot,[i("div",Ct,[i("div",kt,[s.url?(u(),S("a",{key:0,"data-test-id":"route-waypoint-record-link",href:s.url,title:o.name,target:"_blank",class:"routes-destination-list-item-form-title-inner slds-m-top_x-small slds-m-bottom_xx-small"},m(o.name),9,Bt)):(u(),y(n,{key:1,modelValue:o.v$.name.$model,"onUpdate:modelValue":t[0]||(t[0]=f=>o.v$.name.$model=f),"data-test-id":"route-waypoint-name-input",inputAttrs:{"data-test-id":"route-waypoint-name-input"},readonly:!o.showEditMode||!s.allowUpdateName,errors:e.$getErrorsByField(o.v$.name),required:"",labels:{required:e.$Labels.MA_Required}},null,8,["modelValue","readonly","errors","labels"]))]),c(d,{id:"routeBodyWaypointRouteConfirmBtnResource","data-test-id":"route-waypoint-edit-confirm-button",assistiveText:o.showEditMode?e.$Labels.MA_Save:e.$Labels.MA_Edit,iconCategory:"utility",iconName:s.editIcon,title:o.showEditMode?e.$Labels.MA_Save:e.$Labels.MA_Edit,class:"slds-button_icon-container",onClick:s.edit},null,8,["assistiveText","iconName","title","onClick"]),w(c(g,{showMoreLabel:e.$Labels.MA_SHOW_MORE},{button:b(()=>[c(d,{id:"routeBodyWaypointShowMoreBtnResource",assistiveText:e.$Labels.MA_SHOW_MORE,iconCategory:"utility",iconName:"threedots_vertical",title:"Waypoint Options",class:"slds-button_icon-container"},null,8,["assistiveText"])]),default:b(()=>[!s.isWaypoint&&!r.isDisabled?(u(),y(p,{key:0,id:"routeBodyWaypointApplyBtnResource",label:s.applyLabel,onClick:s.applyTo},null,8,["label","onClick"])):R("",!0),s.isStart?R("",!0):(u(),y(p,{key:1,id:"routeBodyWaypointLockStartBtnResource","data-pendo":"route-stop_lock-to-start",label:e.$Labels.routes_Lock_Start,onClick:t[1]||(t[1]=f=>a.routesStore.setToStart(r.waypoint))},null,8,["label"])),s.isEnd?R("",!0):(u(),y(p,{key:2,id:"routeBodyWaypointLockEndBtnResource","data-pendo":"route-stop_lock-to-end",label:e.$Labels.routes_Lock_End,onClick:t[2]||(t[2]=f=>a.routesStore.setToEnd(r.waypoint))},null,8,["label"]))]),_:1},8,["showMoreLabel"]),[[L,!o.showEditMode]]),!o.showEditMode&&!r.isDisabled?(u(),y(d,{key:0,id:"routeBodyWaypointRouteRemoveBtnResource",assistiveText:"Remove Waypoint",iconCategory:"utility",iconName:"close",title:"Remove Waypoint",class:"slds-button_icon-container",onClick:s.remove},null,8,["onClick"])):R("",!0)]),i("div",Et,[c(n,{key:"editWaypoint",modelValue:o.v$.address.$model,"onUpdate:modelValue":t[3]||(t[3]=f=>o.v$.address.$model=f),readonly:!o.showEditMode,inputAttrs:{id:"routeBodyWaypointRouteAddressResource","data-test-id":"routeBodyWaypointRouteAddressResource"},required:"",errors:e.$getErrorsByField(o.v$.address),labels:{required:e.$Labels.MA_Required}},null,8,["modelValue","readonly","errors","labels"])]),w(i("div",{"data-test-id":"route-waypoint-arrival-departure-time",class:"arrival-departure-wrap"},m(s.arrivalDeparture),513),[[L,s.showArrivalDeparture]]),s.currentRoute.timeBasedOptions.Enabled&&s.isWaypoint?(u(),y(v,{key:0,start:o.start,"onUpdate:start":t[4]||(t[4]=f=>o.start=f),duration:o.duration,"onUpdate:duration":t[5]||(t[5]=f=>o.duration=f),showTimeEditMode:o.showTimeEditMode,"onUpdate:showTimeEditMode":t[6]||(t[6]=f=>o.showTimeEditMode=f),"data-test-id":"route-waypoint-time-options-wrapper",showEditMode:o.showEditMode,isGuideRoute:s.currentRoute.isGuideRoute,isLocked:s.isLocked,onSaveRouteTime:s.saveRouteTime,onToggleLockGuideRoute:s.toggleLockGuideRoute},null,8,["start","duration","showTimeEditMode","showEditMode","isGuideRoute","isLocked","onSaveRouteTime","onToggleLockGuideRoute"])):R("",!0),o.showEditMode?(u(),y(n,{key:1,modelValue:o.note,"onUpdate:modelValue":t[7]||(t[7]=f=>o.note=f),class:"slds-m-top_x-small",inputAttrs:{id:"routeBodyWaypointRouteEditNoteResource","data-test-id":"routeBodyWaypointRouteEditNoteResource"},useTextArea:"",labels:{name:e.$Labels.MA_Notes,required:e.$Labels.MA_Required,placeholder:e.$Labels.routes_Notes}},null,8,["modelValue","labels"])):R("",!0),!o.showEditMode&&s.showError?(u(),y(_,{key:2,theme:"warning","data-test-id":"route-waypoint-error"},{content:b(()=>[i("p",null,m(s.errorString),1)]),_:1})):R("",!0)])],34),s.showTimeDistance?(u(),y(N,{key:0,distance:r.waypoint.distance,totalTravelTime:r.waypoint.totaltraveltime,travelMode:s.currentRoute.travelMode,timeGap:r.waypoint.timeGap,class:"routes-time-distance"},null,8,["distance","totalTravelTime","travelMode","timeGap"])):R("",!0)])}const Dt=A(At,[["render",It],["__scopeId","data-v-7404492c"]]);const Pt={components:{Picklist:q},emits:["update","hide"],data(){return{searchTerm:"",searches:[{options:async e=>{const{results:t}=await $.searchFavorites(e);return t}}]}},methods:{clearResults(){this.searchTerm=""},reactToSelected(e){this.searchTerm="",this.doHide(),this.$emit("update",{Name:e.Name,maps__Address__c:e.maps__Address__c,lat:e.maps__Latitude__c,lng:e.maps__Longitude__c,maps__Options__c:O.defaultStartEndOptions,id:D()})},doHide(){this.$emit("hide")}}},Nt={class:"slds-grid slds-grid_vertical-align-end"},$t={class:"slds-col search-dropdown-wrap"},Wt={id:"listbox-option-unique-id-01",class:"slds-listbox__option-text_entity slds-listbox__option slds-listbox__option_plain"},xt={class:"slds-p-left_x-small"};function Vt(e,t,r,a,o,s){const l=h("Picklist");return u(),S("div",Nt,[i("div",$t,[c(l,{inputAttrs:{id:"routeBodyFavoriteSearchPopoverPicklistResource"},ref:"MASearch",modelValue:o.searchTerm,"onUpdate:modelValue":t[0]||(t[0]=n=>o.searchTerm=n),options:o.searches,filterable:"",titleKey:"Name",idKey:"Id",labels:{name:e.$Labels.MA_Search_Fav,noSearchResults:e.$Labels.MA_NO_RESULTS_FOUND},onClear:s.clearResults,onSelectedOption:s.reactToSelected},{option:b(({option:n})=>[i("span",Wt,m(n.Name),1)]),_:1},8,["modelValue","options","labels","onClear","onSelectedOption"])]),i("div",xt,[i("button",{id:"routeBodyFavoriteSearchCancelBtnResource",class:"slds-button slds-button_neutral nowrap",onClick:t[1]||(t[1]=(...n)=>s.doHide&&s.doHide(...n))},m(e.$Labels.MA_Cancel),1)])])}const Ut=A(Pt,[["render",Vt],["__scopeId","data-v-58515cc2"]]),Gt=""+MAPS.getURLPath({base:"/resource/1730379547462/maps__VueDesktopV2/dist/",path:"assets/route-waypoint-emptystate.053aead4.svg"});const Ht={components:{Popover:oe,RouteBodyWaypoint:Dt,FavoriteSearch:Ut,draggable:_e,SLDSButton:j},provide(){return{routeBodyRef:()=>this.$el}},setup(){const e=B(),t=P();return{routesStore:e,mainStore:t}},data(){return{addStart:!1,addEnd:!1,waypoints:[],draggableRender:!1}},computed:{currentRoute(){return this.routesStore.currentRoute},showAddStart(){return!this.currentRoute.first},showAddEnd(){return!this.currentRoute.last},showEmptyState(){return(this.waypoints||[]).length===0}},watch:{"routesStore.waypoints":{handler(e){this.setWaypoints(e)}}},mounted(){this.setWaypoints(this.routesStore.waypoints)},methods:{setWaypoints(e){this.routesStore.callouts++,setTimeout(()=>{this.waypoints=[...e],this.routesStore.callouts--},1)},async openStartModal(){this.addStart=!0,await this.$nextTick(),this.$refs.addStartMASearch.$refs.MASearch.focus()},async openEndModal(){this.addEnd=!0,await this.$nextTick(),this.$refs.addEndMASearch.$refs.MASearch.focus()},doHide(){this.addEnd=!1,this.addStart=!1},updateWaypointOrder(){const e=[...this.waypoints];e.forEach((t,r,a)=>{a[r]={...t,index:r+1}}),this.routesStore.updateWaypoints(e),this.currentRoute.lockOrder=!0},waypointDragChoose(){this.currentRoute.pendingChanges=!0},removeWaypoint(e){this.routesStore.removeWaypoint(e.id)}}},Ft=e=>(H("data-v-88b73d8e"),e=e(),F(),e),qt={class:"ma-routes-wrapper slds-grid slds-grid_vertical slds-col"},jt={id:"routesSingleBody",class:"slds-grid slds-grid_vertical"},zt={id:"routesDestinationList"},Yt={key:"add-start",class:"ma-routes-add-location ma-routes-add-starting-location routes-start-list-item"},Jt={class:"slds-notify_container--inline no-destinations slds-text-align_center"},Kt={class:"slds-grid"},Qt={class:"slds-col slds-align-middle"},Xt=Ft(()=>i("figure",{class:"slds-m-bottom_medium"},[i("img",{src:Gt})],-1)),Zt={class:"slds-text-heading_medium slds-p-bottom_x-small"},es={class:"slds-p-bottom_x-small"},ts={class:"routeWaypointsWrap"},ss={key:"addEnd",class:"ma-routes-add-location ma-routes-add-ending-location routes-ending-list-item"};function os(e,t,r,a,o,s){const l=h("SLDSButton"),n=h("FavoriteSearch"),d=h("Popover"),p=h("RouteBodyWaypoint"),g=h("draggable");return u(),S("div",qt,[i("div",jt,[i("div",zt,[s.showAddStart?(u(),S("div",Yt,[c(l,{id:"routeBodyAddStartLocBtnResource",ref:"routeBodyAddStart",variant:"base",iconCategory:"utility",iconName:"add",iconPosition:"left",onClick:s.openStartModal},{default:b(()=>[k(m(e.$Labels.MA_Start_Loc),1)]),_:1},8,["onClick"]),o.addStart?(u(),y(d,{key:0,id:"routeBodyPopoverStartLocResource",width:"large",closeOnClickOutside:"",bindTo:e.$refs.routeBodyAddStart.$el,direction:"slds-nubbin_top-left",alignment:"bottom right",onClose:t[0]||(t[0]=v=>o.addStart=!1)},{content:b(()=>[c(n,{id:"routeBodyFavoriteSearchPopoverStartLocResource",ref:"addStartMASearch",onHide:s.doHide,onUpdate:a.routesStore.updateFirst},null,8,["onHide","onUpdate"])]),_:1},8,["bindTo"])):R("",!0)])):(u(),y(p,{key:"edit-start",waypoint:s.currentRoute.first,type:"start",isDisabled:!a.mainStore.settings.routes.startLocationId.unlocked,onRemove:t[1]||(t[1]=v=>a.routesStore.updateFirst(null)),onUpdate:a.routesStore.updateFirst},null,8,["waypoint","isDisabled","onUpdate"])),w(i("div",Jt,[i("div",Kt,[i("div",Qt,[Xt,i("h4",Zt,m(e.$Labels.MA_No_Stops),1),i("p",es,m(e.$Labels.MA_Go_Somewhere),1)])])],512),[[L,s.showEmptyState]]),i("div",ts,[c(g,{list:o.waypoints,options:{handle:".waypoint-marker"},itemKey:"id",onUpdate:s.updateWaypointOrder},{item:b(({element:v})=>[(u(),y(p,{key:v.id,waypoint:v,onRemove:_=>s.removeWaypoint(v),onUpdate:a.routesStore.updateWaypoint},null,8,["waypoint","onRemove","onUpdate"]))]),_:1},8,["list","options","onUpdate"])]),s.showAddEnd?(u(),S("div",ss,[c(l,{id:"routeBodyAddEndLocBtnResource",ref:"routeBodyEndLoc",variant:"base",iconCategory:"utility",iconName:"add",iconPosition:"left",onClick:s.openEndModal},{default:b(()=>[k(m(e.$Labels.MA_End_Loc),1)]),_:1},8,["onClick"]),o.addEnd?(u(),y(d,{key:0,id:"routeBodyPopoverEndLocResource",bindTo:e.$refs.routeBodyEndLoc.$el,alignment:"top",closeOnClickOutside:"",width:"large",class:"ma-routes-places",onClose:t[2]||(t[2]=v=>o.addEnd=!1)},{content:b(()=>[c(n,{id:"routeBodyFavoriteSearchPopoverEndLocResource",ref:"addEndMASearch",onHide:s.doHide,onUpdate:a.routesStore.updateLast},null,8,["onHide","onUpdate"])]),_:1},8,["bindTo"])):R("",!0)])):(u(),y(p,{key:"editEnd",waypoint:s.currentRoute.last,type:"end",isDisabled:!a.mainStore.settings.routes.endLocationId.unlocked,onRemove:t[3]||(t[3]=v=>a.routesStore.updateLast(null)),onUpdate:a.routesStore.updateLast},null,8,["waypoint","isDisabled","onUpdate"]))])])])}const is=A(Ht,[["render",os],["__scopeId","data-v-88b73d8e"]]);const rs={components:{Popover:oe,Picklist:q,SLDSButton:j},setup(){return{routesStore:B()}},data(){return{searchTerm:"",addNew:!1,searches:[{options:e=>de({term:e,excludeType:"query"})}]}},watch:{addNew(e){e||this.clearResults()}},methods:{async openAddDestination(){this.addNew=!0,await this.$nextTick(),this.$refs.addStopMASearch.focus()},doHide(){this.addNew=!1},clearResults(){this.searchTerm=""},addDestination(e){this.routesStore.addWaypoints([e])},async reactToSelectedPlace(e){this.doHide(),this.addDestination({Name:e.poi?.title,maps__Address__c:e.poi?.addressLabelFormatted,maps__Options__c:O.defaultOptions,lat:e.poi?.position?.lat,lng:e.poi?.position?.lng,id:D()})}}},as={class:"ma-routes-add-location slds-p-right_xx-small slds-p-left_small slds-col_bump-left"},ns={class:"slds-grid slds-p-horizontal_xx-small",style:{"min-height":"200px"}},ls={class:"slds-col search-dropdown-wrap"},ds={id:"listbox-option-unique-id-01",class:"slds-listbox__option-text_entity slds-listbox__option slds-listbox__option_plain"},us={class:"slds-p-left_x-small cancel-button-wrap"};function cs(e,t,r,a,o,s){const l=h("SLDSButton"),n=h("Picklist"),d=h("Popover");return u(),S("div",as,[c(l,{id:"routeAddStopBtnResource",ref:"addStopTrigger",variant:"base",iconCategory:"utility",iconName:"add",iconPosition:"left",onClick:s.openAddDestination},{default:b(()=>[k(m(e.$Labels.MA_ADD_A_STOP),1)]),_:1},8,["onClick"]),o.addNew?(u(),y(d,{key:0,id:"routeAddStopPopoverResource",bindTo:e.$refs.addStopTrigger.$el,width:"large",closeOnClickOutside:"",alignment:"bottom right",onClose:t[2]||(t[2]=p=>o.addNew=!1)},{content:b(()=>[i("div",ns,[i("div",ls,[c(n,{ref:"addStopMASearch",modelValue:o.searchTerm,"onUpdate:modelValue":t[0]||(t[0]=p=>o.searchTerm=p),inputAttrs:{id:"routeAddStopPopoverPicklistResource"},labelForId:"test",options:o.searches,labels:{name:"",search:e.$Labels.routes_Search_Loc_Add},filterable:"",onClear:s.clearResults,onSelectedOption:s.reactToSelectedPlace},{option:b(({option:{longTitle:p}})=>[i("span",ds,m(p),1)]),_:1},8,["modelValue","options","labels","onClear","onSelectedOption"])]),i("div",us,[i("button",{id:"routeAddStopCancelBtnResource",class:"slds-button slds-button_neutral",onClick:t[1]||(t[1]=(...p)=>s.doHide&&s.doHide(...p))},m(e.$Labels.MA_Cancel),1)])])]),_:1},8,["bindTo"])):R("",!0)])}const hs=A(rs,[["render",cs],["__scopeId","data-v-4d695004"]]);const ps={name:"RouteView",components:{RouteHeader:qe,RouteControlBar:Mt,RouteBody:is,RouteSummary:he,RouteAddStop:hs},emits:["reset-new-route-bus"],setup(){const e=B(),t=P();return{routesStore:e,mainStore:t}},data(){return{isNewRoute:!1,onMap:!1,pendingPrint:!1,routing:null,routeIsBuilding:!1}},computed:{currentRoute(){return this.routesStore.currentRoute},startCount(){return Object.keys(this.currentRoute.first||{}).length!==0?1:0},lastCount(){return Object.keys(this.currentRoute.last||{}).length!==0?1:0},routeType(){return this.currentRoute.timeBasedOptions.Enabled?C.TIME_BASED_ROUTE:C.ROUTE},totalStops(){const e=this.currentRoute.waypoints?this.currentRoute.waypoints.length:0,t=Object.keys(this.currentRoute.first||{}).length!==0?1:0,r=Object.keys(this.currentRoute.last||{}).length!==0?1:0;return e+t+r},showEmailRouteOption(){return this.mainStore.settings.routes?.emailRoute?.value?this.mainStore.settings.routes.emailRoute.value:!0}},watch:{"currentRoute.pendingChanges":{handler(e){e&&(this.routesStore.setUnsavedChanges(!0),this.clearRouteMap(),this.onMap=!1,this.routesStore.resetSummary())},immediate:!0}},created(){this.$bus.on("hide-plotted-route",this.hideRoute),this.$bus.on("add-to-new-route",this.addToNewRouteHandler)},mounted(){this.initalLoadRoute()},unmounted(){this.$bus.off("hide-plotted-route"),this.$bus.off("add-to-new-route"),this.clearRouteMap(),this.routing=null,this.$emit("reset-new-route-bus"),window.sessionStorage.removeItem("currentRoute"),window.sessionStorage.removeItem("routePath"),window.sessionStorage.removeItem("routeIcons")},methods:{hideRoute(){this.routing&&(MAPS.view.closePopup(),this.routing.hideRouteOnMap())},async addToNewRouteHandler(e){this.routesStore.unsavedChanges?(!this.mainStore.activeTab!=="routes"&&(this.mainStore.activeTab="routes",await this.$nextTick()),this.mainStore.toast({message:this.$Labels.Routes_New_Route_Save_Error,state:"error"})):(this.exitRoute(),this.$nextTick(()=>{this.$bus.emit("add-to-route",e)}))},resetRouteToDefaults(){this.clearRouteMap(),this.applyRouteDefaults()},initalLoadRoute(){if(this.isNewRoute=!this.currentRoute.Id,this.isNewRoute){M.isWaypointLengthLessThanMax(this.totalStops,this.currentRoute.isTimeBased?C.TIME_BASED_ROUTE:C.ROUTE),this.applyRouteDefaults();return}M.isWaypointLengthLessThanMax(this.totalStops,this.currentRoute.isTimeBased?C.TIME_BASED_ROUTE:C.ROUTE)&&this.getMAIORoute()},toggleRoute(e){this.onMap=e,this.onMap?this.currentRoute.pendingChanges||this.currentRoute.hasWaypointError||!this.currentRoutependingChanges&&!this.routing?this.getMAIORoute(!this.currentRoute.lockOrder):this.routing&&(this.$bus.emit("hide-plotted-schedule"),this.routing.restoreRouteOnMap()):this.routing&&(MAPS.view.closePopup(),this.routing.hideRouteOnMap())},applyRouteDefaults(){const{startLocationId:e,endLocationId:t}=O.routeDefaults;!e&&!t||(this.routesStore.callouts++,$.getFavoriteInfo(e).then(r=>(this.routesStore.updateFirst(r),e===t?Promise.resolve({Name:r.Name,maps__Address__c:r.maps__Address__c,lat:r.lat,lng:r.lng,id:D(),maps__Options__c:O.defaultStartEndOptions,record:r.record}):$.getFavoriteInfo(t))).then(r=>{this.routesStore.updateLast(r)}).catch(r=>{this.mainStore.toast({message:this.$Labels.Routes_Default_Start_Stop_Location_Error,state:"error"}),console.error(r)}).finally(()=>{this.routesStore.callouts--}))},async getMAIORoute(e=!1){if(!this.routeIsBuilding){if(this.routeIsBuilding=!0,this.validateWaypoints()){await this.$nextTick(),this.onMap=!1,this.routeIsBuilding=!1;return}this.$bus.emit("hide-plotted-schedule"),this.routesStore.clearWaypointData(),this.routesStore.resetSummary(),this.clearRouteMap(),this.routesStore.callouts++,this.routesStore.loadingMessage="Optimizing Route",this.routing=new ce().setWaypoints(this.currentRoute.waypoints).setOptimized(e).setDriveProfile(this.currentRoute.travelMode).setTraffic(O.isTrafficEnabled).setFirstWaypoint(this.currentRoute.first).setLastWaypoint(this.currentRoute.last).setIsGuideRoute(this.currentRoute.isGuideRoute),this.currentRoute?.timeBasedOptions?.Enabled&&(this.routing.setRouteTimeBasedOptions(this.currentRoute.timeBasedOptions).setFirstWaypoint(this.currentRoute.first).setLastWaypoint(this.currentRoute.last).setTimeBased(!0),this.currentRoute.isGuideRoute?this.routing.setTimebasedlegacy(!0):this.routing.setTimebasedlegacy(!1)),this.routing.build("routing").then(()=>{ue(this.routing.route,t=>{this.applyRoutingResult(t,this.routing.route)})}).catch(t=>{this.onMap=!1,this.showRoutingErrors(t),console.warn(t)}).finally(()=>{this.routesStore.callouts--,this.routesStore.loadingMessage="",this.routeIsBuilding=!1,this.pendingPrint=!1})}},exitRoute(){this.clearRouteMap(),this.routesStore.resetCurrentRoute(),this.routesStore.showRouteList=!0},clearRouteMap(){!this.routing||this.routing.clearRouteOnMap()},validateWaypoints(){return!(M.isWaypointLengthLessThanMax(this.totalStops,this.routeType)&&M.isWaypointLengthGreaterThanMin(this.totalStops,this.routeType))},showRoutingErrors(e){if(!e){M.showGenericErrorMessage();return}if(e&&typeof e=="object"&&!e.maioCode&&!e.status)if(e.message){if(e.codeArea==="RS"){M.routingError(e.message);return}const o=e.message.indexOf("Waypoint "),s=e.message.indexOf(" is not schedulable");if(o===0&&s>0){const l=e.message.substring(o+9,s);e.maioCode=82016,e.details=[{id:l}]}}else{console.warn(e),M.showGenericErrorMessage();return}M.showErrorMessage(e.maioCode,this.routeType);const t=M.getWaypointErrorMessage(e.maioCode,this.routeType);if(!t||!e.details||e.details.length===0||!e.details[0].id)return;const r=this.currentRoute.waypoints;this.routesStore.clearWaypoints();const a=[];r.forEach(o=>{o.id===e.details[0].id?a.push({...o,errorMsg:e.details[0].errormessage!==void 0&&e.details[0].errormessage==="Unreachable"?e.details[0].errormessage:t,erroramount:e.details[0].erroramount!==void 0&&e.details[0].erroramount>=200?e.details[0].erroramount:200}):a.push(o)}),a.length>0&&this.routesStore.appendWaypoints(a)},applyRoutingResult(e,t){this.currentRoute.pendingChanges=!1,!t.hasWaypointError||this.currentRoute.isGuideRoute?(this.currentRoute.boundingbox=t.boundingbox,this.currentRoute.hasWaypointError=!1,this.onMap=!0):(this.currentRoute.hasWaypointError=!0,this.onMap=!1);const r=this.currentRoute.waypoints;this.routesStore.clearWaypoints();const a=[];let o=!1;e.summary.totaltraveltime=0;for(let s=0;s<e.waypoints.length;s++){const l=e.waypoints[s];if(l.totaltraveltime=Math.round(l.totaltraveltime/60)*60,e.summary.totaltraveltime+=l.totaltraveltime,l.errormessage&&s!==0&&e.waypoints[0].start&&l.erroramount){const n=moment.unix(e.waypoints[0].start).format("MM-DD-YYYY"),d=moment.unix(l.start).format("MM-DD-YYYY");n!==d&&(l.errormessage=this.$Labels.Routes_Multi_Day_Route_Error)}if(l.isFirst){const n=this.applyMAIODataToWaypoint(this.currentRoute.first,l);this.routesStore.setFirst(n)}else if(l.isLast){const n=this.applyMAIODataToWaypoint(this.currentRoute.last,l);this.routesStore.setLast(n)}else{const n=r.find(d=>d.id===l.id);if(n){const d=this.applyMAIODataToWaypoint(n,l);!o&&d.errorMsg&&(d.scrollToThisError=!0,o=!0),a.push(d)}}}this.currentRoute.summary=e.summary,a.length>0&&this.routesStore.appendWaypoints(a),this.pendingPrint&&this.showPrintRoute(),this.currentRoute?.timeBasedOptions?.Enabled&&!this.currentRoute.isGuideRoute&&this.maxTimeGap()},applyMAIODataToWaypoint(e,t){return{...e,index:t.index,distance:t.distance,nontraffictime:t.nontraffictime,totaltraveltime:t.totaltraveltime,maneuvers:t.maneuvers,tooltipMetadata:t.tooltipMetadata,duration:t.duration,start:t.start,errorMsg:t.errormessage,erroramount:t.erroramount,arrivaltime:t.arrivaltime,departuretime:t.departuretime}},showPrintRoute(){if(this.totalStops<2){this.mainStore.toast({message:this.$Labels.MA_Please_Add_Two_Stops,state:"error"});return}if(this.routing){MAPS.view.map.findLayerById(this.routing.id).allLayers.forEach(l=>{const n=l.graphics.toJSON();window.sessionStorage.setItem(l.id,JSON.stringify(n))});const t=this.routesStore.routeMap[this.routing.id]||{},r=JSON.parse(JSON.stringify(this.currentRoute)),{waypoints:a}=r;a.forEach(l=>{const{maps__MarkerLayer__c:n,maps__LinkId__c:d}=l,p=t[n]||{},{queryData:g={},recordMap:v=new Map}=p,{tooltips:_=[]}=g,N={tooltips:[]};if(v.has(d)){const f=v.get(d),J=new Map;for(let W=0;W<_.length;W++){const x=_[W];if(!J.has(x.ActualFieldName)){J.set(x.ActualFieldName,!0);const K=MAPS.Utils.Obj.get(f,x.ActualFieldName);N.tooltips.push({label:K.fieldLabel,value:K.formatted})}l.tooltipMetadata=N}}}),window.sessionStorage.setItem("currentRoute",JSON.stringify(r));const o=`${MAPS.baseURL}/apex/maps__PrintEmailRoute?units=${O.units}&email=${this.showEmailRouteOption}&mapsV2=true`,s=window.open(o,"","height=800,width=800,location=0,scrollbars=1");s&&s.focus(),this.pendingPrint=!1}},maxTimeGap(){let e=0;return[...this.currentRoute.waypoints,this.currentRoute.first,this.currentRoute.last].forEach((t,r,a)=>{if(r){const o=a[r-1];let s=MAPS.Utils.Obj.get(t,"maps__Options__c"),l=MAPS.Utils.Obj.get(o,"maps__Options__c");try{typeof s=="string"&&(s=JSON.parse(MAPS.Utils.String.htmlDecode(t.maps__Options__c))),typeof l=="string"&&(l=JSON.parse(MAPS.Utils.String.htmlDecode(a[r-1].maps__Options__c)))}catch{}const n=moment(MAPS.Utils.Obj.get(s,"TimeBasedOptions.Start"),"h:mm a");let d=moment(MAPS.Utils.Obj.get(l,"TimeBasedOptions.Start"),"h:mm a");if(d){const p=MAPS.Utils.Obj.get(l,"TimeBasedOptions.Duration");typeof p=="string"&&p.split(",").forEach(g=>{const v=g.trim().replace("hr","hour").replace("min","minute").split(/\s+/),_=Number(v[0]);v.length===2&&!Number.isNaN(_)&&(d=d.add(v[0],v[1]))})}if(n.isValid()&&d.isValid()){const p=Math.abs(n.valueOf()-d.valueOf())/1e3;o.timeGap=p,p>e&&(e=p)}}}),e}}},ms={id:"routesSingleWrapper",class:"slds-grid slds-grid--vertical"};function _s(e,t,r,a,o,s){const l=h("RouteHeader"),n=h("RouteControlBar"),d=h("RouteBody"),p=h("RouteAddStop"),g=h("RouteSummary");return u(),S("div",ms,[c(l,{id:"routeHeaderResource",onClearRoute:s.clearRouteMap,onResetRoute:s.resetRouteToDefaults,onGenerate:s.getMAIORoute},null,8,["onClearRoute","onResetRoute","onGenerate"]),c(n,{id:"routeControlBarResource",onMap:o.onMap,"onUpdate:onMap":t[0]||(t[0]=v=>o.onMap=v),showOnTheMapToggle:o.routing!=null,onGenerate:s.getMAIORoute,onToggleRoute:s.toggleRoute},null,8,["onMap","showOnTheMapToggle","onGenerate","onToggleRoute"]),c(d,{id:"routeBodyResource",class:T({"route-line-is-drawn":o.onMap,"start-location-exists":s.startCount,"end-location-exists":s.lastCount})},null,8,["class"]),c(g,{id:"routeSummaryResource",pendingPrint:o.pendingPrint,"onUpdate:pendingPrint":t[1]||(t[1]=v=>o.pendingPrint=v),pendingChanges:s.currentRoute.pendingChanges,onGenerate:s.getMAIORoute,onPrintRoute:s.showPrintRoute},{button:b(()=>[c(p)]),_:1},8,["pendingPrint","pendingChanges","onGenerate","onPrintRoute"])])}const ws=A(ps,[["render",_s],["__scopeId","data-v-167d7fa3"]]);export{ws as default};
