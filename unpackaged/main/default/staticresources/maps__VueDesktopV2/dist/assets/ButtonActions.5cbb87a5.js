import{_ as L,l as I,S as x,f as C,g as B,aO as O,aZ as M,R as w,a_ as P,a$ as T,ac as b,b0 as R,r as S,o as u,c as p,b as v,e as k,F as f,h as y,t as _,q as m,i as z,w as A,a0 as D,s as $,v as V}from"../bundle.js";const F={name:"ButtonsActions",components:{SLDSButton:I,Spinner:x},props:{buttonTemplate:{type:String,default:""},layerType:{type:String,default:""},recordId:{type:String,default:""},sfLayerId:{type:String,default:""},isNavigationMarker:{type:Boolean,default:!1},mapsLayerId:{type:String,default:""},isCluster:{type:Boolean,default:!1},isBoundary:{type:Boolean,default:!1},showListViewActions:{type:Boolean,default:!1}},emits:["handle-action"],setup(){const t=C(),e=B(),c=O();return{mainStore:t,layersStore:e,routesStore:c}},data(){return{isLoading:!1,actions:[],supportsActivities:!1,checkInOutProcessing:!1,labels:{Layer_Actions:MAPS.app.config.globalProperties.$Labels.Layer_Actions},checkInOutButton:null}},computed:{layerActions(){const t=[[],[]];return this.$props.showListViewActions&&(t[0].push({action:"addSelectedTab",label:MAPS.app.config.globalProperties.$Labels.Listview_Button_AddToList,type:"layerAction"}),t[1].push({action:"replaceSelectedTab",label:MAPS.app.config.globalProperties.$Labels.Listview_Button_ReplaceSelected,type:"layerAction"})),this.isCluster&&(t[0].push({action:"zoomToMarkers",label:MAPS.app.config.globalProperties.$Labels.MA_Zoom_To_Markers,type:"layerAction"}),t[1].push({action:"drawPolygon",label:MAPS.app.config.globalProperties.$Labels.MA_Draw_Polygon,type:"layerAction"})),{columns:t}},invalidPolylineActions(){const t=new Set;return t.add("Clear Coordinates"),t.add("Set Verified Location"),t.add("Remove Marker"),t.add("Set Reference Point"),t.add("Create Favorite"),t.add("Take Me There"),t},masterRecord(){let t=null;const e=M({layerId:this.mapsLayerId});return e&&e.has(this.recordId)&&(t=e.get(this.recordId)),t}},async created(){this.init()},unmounted(){this.unwatch&&this.unwatch()},methods:{init(){const t=this.mainStore?.settings?.buttons?.[this.buttonTemplate]||[];let e=JSON.parse(JSON.stringify(t));this.buttonTemplate==="massActionLayout"?e=this.formatMassButtons(e):e=this.buildActionButtons(e),this.actions=e,this.checkInOutButton&&(this.updateCheckInOutButton({disabled:!0}),this.processCheckInOutStatus(),this.masterRecord&&(this.unwatch=w(()=>this.masterRecord.checkInOutProcessing.value,()=>{this.processCheckInOutStatus()})))},updateCheckInOutButton({disabled:t=!1,action:e="Check In",label:c=MAPS.app.config.globalProperties.$Labels.ActionFramework_Check_In}){const i=this.actions.find(n=>n.uid===this.checkInOutButton.section)??[],{columns:r=[]}=i,l=this.checkInOutButton.column,a=(r[l]??[]).find(n=>n.action==="Check In"||n.action==="Check Out");a&&(a.disabled=t,a.action=e,a.label=c)},async handleAction(t){const{action:e}=t;(e==="Check Out"||e==="Check In")&&(t.disabled=!0,this.masterRecord.checkInOutProcessing.value=!0),this.$emit("handle-action",t)},formatButtonText(t){return MAPS.Utils.String.htmlDecode(t)},determinButtonVisibility(t,e){const c=P[t.action];if(!c)return!1;const{Requirements:i,Modes:r,BaseObjects:l="",UnsupportedLayers:d=[]}=c;if(MAPS.isMobile&&!r.includes("Mobile")||!MAPS.isMobile&&!r.includes("Desktop")||l&&!l.split(";").includes(e.baseObject))return!1;let a=!0;for(let o=0;o<i.length;o++){const s=i[o];s==="Activity Support"&&!e.activitySupport&&(a=!1),s==="Verified Location Support"&&!e.verifiedLocationSupport&&(a=!1),s==="Contact Or Lead"&&!e.contactOrLead&&(a=!1),s==="Chatter Support"&&!e.chatterSupport&&(a=!1)}const n=String(this.layerType||"").toLowerCase();for(let o=0;o<d.length;o++){const s=String(d[o]||"").toLowerCase();if(n===s){a=!1;break}}return!(!a||e.layerType==="polyline"&&this.invalidPolylineActions.has(t.action))},buildActionButtons(t){let e={};if(this.layerType==="sfMarkerLayer"||this.isNavigationMarker){const i=this.isNavigationMarker?"navigationLayer":"sfMarkerLayer";e=T({type:i,layerUID:this.mapsLayerId,savedQueryId:this.sfLayerId})??{}}const c={activitySupport:e?.options?.supportsActivities||!1,verifiedLocationSupport:e?.addressFields?.verifiedLatitude&&e?.addressFields?.verifiedLongitude,contactOrLead:["003","00Q"].includes(this.$props.recordId.substring(0,3)),chatterSupport:e?.options?.supportsChatter||!1,layerType:e?.options?.layerType||"",baseObject:e?.options?.baseObjectId};this.buttonTemplate==="favoriteMarkerLayout"&&(c.verifiedLocationSupport=!0);for(let i=0;i<t.length;i++){const r=t[i];r.uid=b();const{columns:l}=r;for(let d=0;d<l.length;d++){const a=l[d],n=[];for(let o=0;o<a.length;o++){const s=a[o];s.uid=b(),s.visible=this.determinButtonVisibility(s,c),s.visible&&((s.action==="Check In"||s.action==="Check Out")&&(this.checkInOutButton={section:r.uid,column:d}),n.push(s))}l[d]=n}}return t},formatMassButtons(t){const e=[];let i=[];for(let r=0;r<t.length;r++){const l=t[r],{buttons:d,header:a}=l,n={header:a,columns:[],uid:b()};for(let o=0;o<d.length;o++){const s=d[o];s.visible=!0,s.uid=b(),i.push(s),i.length===3&&(n.columns.push(i),i=[])}i.length>0&&(n.columns.push(i),i=[]),e.push(n)}return e},async processCheckInOutStatus(){if(!(this.masterRecord&&this.masterRecord?.checkInOutProcessing?.value===!0))try{const{supportsActivities:t,buttonAction:e,buttonLabel:c}=await R({recordId:this.$props.recordId,layerId:this.mapsLayerId});this.updateCheckInOutButton({action:e,label:c,disabled:!1}),this.supportsActivities=t===!0}catch(t){console.warn("check in status unknown",t)}}}},N={id:"mass-actions-wrapper-buttons",style:{"min-height":"50px"}},j={class:"slds-text-color_weak slds-p-bottom_xx-small slds-p-left_xx-small"},U={id:"sl-cluster-layer-actions",class:"slds-grid slds-p-bottom_x-small"},Q={style:{"font-size":"12px"}},J={class:"slds-grid"},Z={style:{"font-size":"12px"}};function q(t,e,c,i,r,l){const d=S("Spinner"),a=S("SLDSButton");return u(),p("div",N,[r.isLoading?(u(),v(d,{key:0})):k("",!0),t.$props.showListViewActions||c.isCluster?(u(),p(f,{key:1},[y("div",j,_(r.labels.Layer_Actions),1),y("div",U,[(u(!0),p(f,null,m(l.layerActions.columns,(n,o)=>(u(),p("div",{key:`layer-action_${o}`,class:"slds-grid slds-grid_vertical slds-size_1-of-2 slds-p-horizontal_xx-small"},[(u(!0),p(f,null,m(n,(s,g)=>(u(),p("div",{key:`button_${o*g}`},[z(a,{id:`popup-${s.type}-BtnActionResource`,variant:"neutral",class:"slds-col slds-size_1-of-1 slds-p-horizontal_small slds-p-vertical_xx-small slds-m-bottom_xx-small",style:{"line-height":"16px",padding:"5px 5px"},onClick:h=>l.handleAction(s)},{default:A(()=>[y("span",Q,_(l.formatButtonText(s.label)),1)]),_:2},1032,["id","onClick"])]))),128))]))),128))])],64)):k("",!0),(u(!0),p(f,null,m(r.actions,(n,o)=>(u(),p("div",{key:n.uid},[r.actions.length>1?(u(),p("div",{key:0,class:D(["slds-text-color_weak slds-p-bottom_xx-small slds-p-left_xx-small",{"slds-p-top_x-small":o!==0}])},_(n.header),3)):k("",!0),y("div",J,[(u(!0),p(f,null,m(n.columns,(s,g)=>$((u(),p("div",{key:`button_${g*o}`,class:"slds-grid slds-grid_vertical slds-size_2-of-6 slds-p-horizontal_xx-small"},[(u(!0),p(f,null,m(s,h=>(u(),p("div",{key:h.uid},[h.visible?(u(),v(a,{key:0,variant:"neutral",disabled:h.disabled,class:"slds-col slds-size_1-of-1 slds-p-horizontal_small slds-p-vertical_xx-small slds-m-bottom_xx-small",style:{"line-height":"16px",padding:"5px 5px"},onClick:E=>l.handleAction(h)},{default:A(()=>[y("span",Z,_(l.formatButtonText(h.label)),1)]),_:2},1032,["disabled","onClick"])):k("",!0)]))),128))])),[[V,s.length>0]])),128))])]))),128))])}const H=L(F,[["render",q]]);export{H as default};
