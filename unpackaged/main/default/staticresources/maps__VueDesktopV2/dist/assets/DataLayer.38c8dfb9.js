import{f as te,aG as j,Q as W,M as J,_ as re,H as le,B as oe,J as ne,K as de,a5 as ce,l as ue,g as he,aH as ye,b7 as pe,bk as ge,a3 as U,cr as _e,by as z,cv as me,cw as be,r as R,o as d,c as u,h as n,t as p,e as A,s as G,v as K,b as E,w as V,i as P,F as k,q as N,a0 as Q,n as Le,j as fe,p as ve,k as Me}from"../bundle.js";import{H as we}from"./HoveringTooltip.b169338c.js";let B;const Y=(e,t)=>(e=e||"",e=String(e),e=e.replace(/[^\d.-]/g,""),e===""&&t?null:e),X=e=>new Promise(t=>{setTimeout(t,e)}),se=e=>{if(Array.isArray(e.values)&&e.values.length===0&&e.values.push(`--${MAPS.app.config.globalProperties.$Labels.Layers_On_The_Map_Plotted_Data_Layer_Other}--`),e.operator!=="range"&&Array.isArray(e.values))e.values=e.values.join(", ");else if(e.operator==="range"){const t=MAPS.app.config.globalProperties.$F("Numeric",e.min),r=MAPS.app.config.globalProperties.$F("Numeric",e.max);e.values=MAPS.Utils.Labels.format(MAPS.app.config.globalProperties.$Labels.Layers_On_The_Map_Plotted_Data_Layer_To,[t,r])}},ke=e=>{const{color:t="93c47d:Circle"}=e,r=t.split(":");let l=r[0];const s=r[1]||"Circle";String(l).startsWith("#")||(l=`#${l}`);const i=J.createSVG({type:s,color:l}),o=J.shapes[s]||{},{size:c={}}=o,h=c.y||30,b=c.x||30;return{type:"picture-marker",url:`data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(i)))}`,height:Math.ceil(Number(h)*.3),width:Math.ceil(Number(b)*.3)}},Te=e=>{const t=[];return Object.keys(e).forEach(l=>{const s=e[l];t.push({value:s.row_id,symbol:s.symbol,label:s.color})}),{type:"unique-value",field:"rowid",defaultSymbol:{type:"simple-marker",color:"green",outline:{color:"white",width:2}},uniqueValueInfos:t}},Se=async({sfDataOptions:e,key:t})=>{const r={key:t,data:e},{status:l,data:s}=await MAPS.Utils.HTTP.MAIORequest({endpoint:"/tile/storage/2",data:JSON.stringify(r),headers:{Authorization:`Browser ${MAPS.maioKey}`,orgid:MAPS.orgId,"content-type":"application/json"}});if(l===200){const{key:i}=s,o=`${MAPS.maioDomain}/tile/draw/2/{x}/{y}/{z}/${i}`,{legend:c={}}=e,h={};return(c.rows||[]).forEach((b,_)=>{const L={uiVisible:!0};Object.keys(b).forEach(a=>{let g=b[a];if(a==="color"){const f=g.split(":");let[T]=f;T.startsWith("#")||(T=`#${T}`),g=T}L[a]=g}),h[`legend_${_}`]=L}),{success:!0,legend:h,url:o}}return{success:!1}},Ae=async({recordIds:e=[],status:t=()=>{},sfDataOptions:r,mapInfo:l})=>{const s=e.length;let i=[];const o=1500;let c;const h={};let b=!0;for(let y=0;y<s;y+=o)i.push(e.slice(y,y+o));t(MAPS.app.config.globalProperties.$Labels.MA_Loading_With_Ellipsis);let _=0;const L=async(y,v)=>{const M=v.length,m={details:!0,ids:v,data:r,mapinfo:l};try{await X(_),_<=1e3&&(_+=25);const{status:x,data:w}=await MAPS.Utils.HTTP.MAIORequest({endpoint:"/data/markers/3",data:JSON.stringify(m),headers:{Authorization:`Browser ${MAPS.maioKey}`,orgid:MAPS.orgId,"content-type":"application/json"}});let F=[];if(x===200){const{markers:H}=w;if(F=H,_>=1e3&&(_-=1e3),!c){c=w.legend;const{rows:$=[]}=c;for(let D=0;D<$.length;D++){const S=$[D],C=ke(S),O={total:0,visible:0,onMap:!0,icon:C.url,uiVisible:!1,symbol:C};Object.keys(S).forEach(q=>{let I=S[q];q==="values"&&Array.isArray(I)&&(I=I.join(", "),I.indexOf("--Other--")>-1&&I.replaceAll("--Other--","Other")),O[q]=I}),se(O),h[S.row_id]=O}}}return{promiseId:y,success:x===200,markers:F,batchTotal:M}}catch(x){return x.message.indexOf("code 429")>-1?(t("Waiting..."),console.warn("Too many calls to MAIO, we need to wait!",`waiting ${_} before our next call`),_=1e4,await X(_),await L(y,v)):{promiseId:y,success:!1,message:x.message}}},a=y=>{const v=[];for(let M=0;M<y.length;M++){const m=y[M],x=m.rowid,w=h[x];w.total++,w.visible++,w.uiVisible=!0;const{position:F}=m,H={type:"point",longitude:F.lng,latitude:F.lat},{popup:$={}}=m,{header:D=[]}=$,[S]=D;let C=m.label||m.title||"",O="";S&&(O=S.label||"",C=S.value||"");const q={type:"graphic",geometry:H,title:C,attributes:{title:C,titleField:O,layertype:"dataLayer",rowid:m.rowid,uid:m.uid,popup:JSON.stringify(m.popup),color:m.color,url:w.icon,legendValues:w.values,dataSource:r.file_id,levelOfDetail:r.level_id}};v.push(q)}return v},g=i.splice(0,1)[0];let f=0;const T=[];if(g){const y=await L("firstBatch",g);if(y.success){const{batchTotal:v,markers:M}=y;f+=v,t(`${MAPS.app.config.globalProperties.$Labels.MA_Loading_With_Ellipsis} ${W(MAPS.app.config.globalProperties.$Labels.Mobile_Legend_Count,[f,s])}`);const m=a(M);T.push(...m)}else return{success:!1,message:MAPS.app.config.globalProperties.$Labels.ShapeLayer_Cannot_Show_Data}}const ie=Te(h);return await MAPS.Utils.Async.concurrentRace({maxConcurrency:3,chunks:i,promiseCallback:L,completedCallback:y=>{const{batchTotal:v,markers:M}=y;f+=v,t(`${MAPS.app.config.globalProperties.$Labels.MA_Loading_With_Ellipsis} ${W(MAPS.app.config.globalProperties.$Labels.Mobile_Legend_Count,[f,s])}`);const m=a(M);T.push(...m)},rejectedCallback:y=>{b=!1,console.error("e",y),i=[]}}),{success:b,allMarkers:T,markerRenderer:ie,legend:h,message:b?"":MAPS.app.config.globalProperties.$Labels.ShapeLayer_Cannot_Show_Data}},Z=e=>{let t=e%360;return t>180?t-=360:t<-180&&(t+=360),t},Pe=async({sfDataOptions:e,status:t=()=>{}})=>{B=B||te();let r=15e3;if(MAPS.isMobile){let a=1e3;B?.settings?.mobile?.plotLimit&&(a=B.settings.mobile.plotLimit===""?1e3:Y(B.settings.mobile.plotLimit)),r=a}e.filters.forEach(a=>{a.values&&(Array.isArray(a.values)||(a.values=[a.values]),a.values.forEach((g,f)=>{g.match(/^[+-]?\$?\d+(,\d{3})*(\.\d+)?$/)&&(a.values[f]=Y(g))})),a.operator!=="range"?(delete a.min,delete a.max):delete a.values,delete a.guid});const l=await j.getMapBounds(),{center:s,NE:i,SW:o}=l,c={data:e,mapinfo:{nelat:i.latitude,nelng:Z(i.longitude),swlat:o.latitude,swlng:Z(o.longitude),celat:s.latitude,celng:s.longitude,limit:r,offset:0},ids:[],aggregates:!1,details:!1},h={method:"post",action:"markers",subType:"data",version:"3"},b=JSON.stringify(c),{success:_,data:L}=await MAPS.Utils.Apex.invoke("maps.RemoteFunctions.MapAnythingIORequestPOST",[h,b]);if(_){const{ids:a=[]}=L;return a.length>0?await Ae({recordIds:a,sfDataOptions:e,mapInfo:c.mapinfo,status:f=>{t(f)}}):{recordIds:a,sfDataOptions:e,mapInfo:c.mapinfo,status:g=>{t(g)}}}return{success:!1,message:"Something went wrong"}};const{FeatureLayer:xe,clusterLabelCreator:Ce,CustomContent:ee}=await le(["esri/layers/FeatureLayer","esri/smartMapping/labels/clusters","esri/popup/content/CustomContent"]),Oe={components:{ButtonIcon:oe,ActionMenu:ne,ActionMenuItem:de,Checkbox:ce,SLDSButton:ue,HoveringTooltip:we},props:{layer:{type:Object,default:()=>{},required:!0}},emits:["remove-layer"],setup(){const e=te(),t=he();return{mainStore:e,layersStore:t}},data(){return{layerIsVisible:!1,isLoading:!0,loadingMsg:this.$Labels.Layers_On_The_Map_Plotted_Data_Layer_Text_Data_Layer_Loading,errorMessage:"",description:"",dataLayer:{name:"",options:{}},layerPermissions:{modify:!0},renderType:"cluster",icon:null,layerOnMap:!1,markerRenderer:null,renderModes:[{value:"markers",label:this.$Labels.MA_Render_Markers,icon:this.$Images.icon_pin,active:!1},{value:"cluster",label:this.$Labels.MA_Render_Clusters,icon:this.$Images.icon_cluster,active:!0},{value:"heatmap",label:this.$Labels.MA_Render_Heatmap,icon:this.$Images.icon_heatmap,active:!1}],totalFeatures:0,markersVisible:0,legend:{},showAllLegendRows:!1,tileOpacity:.8,dataLayerType:"",hoverTimeout:null,tooltipVisible:!1,renderTooltip:!1}},computed:{isPlotOnLoad(){return this.layersStore.polLayers.find(e=>e.id===this.layer.id)!==void 0},proximitySettings(){return this.mainStore.settings.proximitySettings},layerIcon(){return ye().datalayer},isEditMode(){return this.layer.isEditMode},layerOptions(){const e=[{label:this.$Labels.MA_REFRESH,action:"refresh",types:[]}];return this.dataLayerType==="marker"&&e.push({label:this.$Labels.MA_Zoom_To_Fit,action:"zoom",types:[],disabled:!this.layerOnMap}),this.layerPermissions?.modify&&e.unshift({label:this.$Labels.MA_Edit,action:"edit",types:[]}),e},activeMode(){return this.renderModes.find(t=>t.value===this.renderType)||{}},recordCount(){const e=this.$Labels.Layers_On_The_Map_Plotted_Marker_Layer_Text_Records;return this.formatLabel(e,{0:this.totalFeatures})},recordVisibleInfo(){const e=this.formatLabel(this.$Labels.Layers_On_The_Map_Plotted_Marker_Layer_Text_Markers_Created,{0:this.totalFeatures}),t=this.formatLabel(this.$Labels.Layers_On_The_Map_Plotted_Marker_Layer_Text_Visible,{0:this.markersVisible});return`${e}, ${t}`},legendName(){const e=this.dataLayer?.options?.legend||{},t=e?.title||"",r=e?.subTitle||"";return r!==""?`${t}, ${r}`:t},legendVisibilityLabel(){return this.dataLayerType==="marker"?this.showAllLegendRows?this.$Labels.MA_Show_Less:this.$Labels.MA_SHOW_MORE:this.showAllLegendRows?this.$Labels.Layers_On_The_Map_Hide_Legend:this.$Labels.Layers_On_The_Map_Show_Legend}},watch:{"layer.updateAction":{handler(e){e==="updateLegend"?this.refreshLegendCounts():e==="refreshLayer"&&this.refreshLayer()}}},async created(){const e=this.layer?.permissions||{};this.layerPermissions={...this.layerPermissions,...e},this.isLoading=!0,await this.getDataLayer(),this.isLoading=!1,this.layersStore.updateIsLoading(this.layer.qid)},unmounted(){this.removeGraphic()},methods:{showTooltipInfo(){this.hoverTimeout&&clearTimeout(this.hoverTimeout),this.hoverTimeout=setTimeout(async()=>{this.renderTooltip=!0,await this.$nextTick(),await this.calculateTooltipInfo(),this.tooltipVisible=!0},500)},hideTooltipInfo(){this.hoverTimeout&&clearTimeout(this.hoverTimeout),this.tooltipVisible=!1,this.renderTooltip=!1},async calculateTooltipInfo(){const t=this.$refs.layerHeader;this.$refs.hoveringTooltip&&await this.$refs.hoveringTooltip.calculateTooltipInfo(t)},async filterProximityAndRefreshLegendCounts(){this.layersStore.proximityActivatedLayers.size!==0?await pe():await this.refreshLegendCounts()},formatLabel(e,t={}){return Object.keys(t).forEach(r=>e=e.replace(new RegExp(`\\{${r}\\}`,"g"),t[r])),e},checkIsUrl(e){return typeof e.formatted_value=="string"&&e.formatted_value.indexOf("href=")>-1},getUrlFormatted(e,t){return e?`${t.value.indexOf("http")===0?"":"https://"}${t.value}`:t.formatted_value},async refreshLegendCounts(){const e=MAPS.view.map.findLayerById(this.layer.qid),t=await e.queryFeatures(),{features:r=[]}=t;this.markersVisible=this.layerIsVisible||this.isLoading?r.length:0;const l={};MAPS.deletedFeatures.has(this.layer.qid)&&MAPS.deletedFeatures.get(this.layer.qid).forEach(o=>{o?.attributes?.rowid&&(l[o.attributes.rowid]||(l[o.attributes.rowid]=0),l[o.attributes.rowid]++)});const s=[];Object.keys(this.legend).forEach(i=>{const o=this.legend[i];s.push(e.queryFeatureCount({type:"query",where:`rowid = '${o.row_id}'`}).then(c=>{let h=0;l[o.row_id]&&(h=l[o.row_id]),o.visible=!o.onMap||!this.layerIsVisible?0:c,o.total=c+h,o.rowCountSummary=MAPS.Utils.Labels.format(this.$Labels.Mobile_Legend_Count,[o.visible,o.total])}))}),this.layer.updateAction=""},removeGraphic(){this.legend={},this.totalFeatures=0,this.markersVisible=0,this.loadingMsg=this.$Labels.Layers_On_The_Map_Plotted_Data_Layer_Text_Data_Layer_Loading,this.dataLayerType==="marker"?ge.removeLayer({id:this.layer.qid}):j.removeTileLayer({id:this.layer.qid})},async generateMarkers(e){e||(e=MAPS.view.map.findLayerById(this.layer.qid)),e.renderer.visualVariables=[],e.featureReduction=null,e.renderer=this.markerRenderer},async refreshLayer(){this.isLoading||(MAPS.view.closePopup(),this.isLoading=!0,this.errorMessage="",this.removeGraphic(),await this.getDataLayer(),this.isLoading=!1)},async handleAction(e){if(e==="refresh")this.refreshLayer();else if(e==="zoom"){const r=await MAPS.view.map.findLayerById(this.layer.qid).queryExtent(),{extent:l}=r;MAPS.view.goTo(l)}else e==="edit"&&this.$bus.emit("open-modal",{name:"save-data-layer",config:{isPlotted:!0,layerId:this.layer.id,callback:t=>{this.layersStore.updateFolderData({folderId:this.layersStore.currentFolder.id}),this.layersStore.getRecentAndPlotOnLoadLayers(),t.plotOnSave&&this.refreshLayer()}}})},async generateHeatMap(e){e||(e=MAPS.view.map.findLayerById(this.layer.qid));const t={type:"heatmap",colorStops:[{ratio:0,color:"rgba(255, 255, 255, 0)"},{ratio:.1,color:"rgba(0, 34, 200, 1)"},{ratio:.2,color:"rgba(43, 28, 167, 1)"},{ratio:.3,color:"rgba(85, 23, 133, 1)"},{ratio:.4,color:"rgba(128, 17, 100, 1)"},{ratio:.5,color:"rgba(170, 11, 67, 1)"},{ratio:.6,color:"rgba(213, 6, 33, 1)"},{ratio:.7,color:"rgba(255, 0, 0, 1)"},{ratio:.8,color:"rgba(255, 57, 0, 1)"},{ratio:.9,color:"rgba(255, 113, 0, 1)"},{ratio:1,color:"rgba(255, 170, 0, 1)"}],minDensity:0,maxDensity:.1,radius:10};e.featureReduction=null,e.renderer=t},async generateClusters(e){e||(e=MAPS.view.map.findLayerById(this.layer.qid)),e.renderer.type==="heatmap"&&await this.generateMarkers();const{labelingInfo:t,clusterMinSize:r}=await Ce.getLabelSchemes({layer:e,view:MAPS.view}).then(i=>i.primaryScheme);e.renderer.visualVariables=[{type:"color",field:"cluster_count",stops:[{value:1,color:"invalid"},{value:2,color:"#2b83ba"},{value:9,color:"#2b83ba"},{value:10,color:"#FFDB58"},{value:98,color:"#FFDB58"},{value:99,color:"#d7191c"},{value:998,color:"#d7191c"},{value:999,color:"#BF40BF"}]}];const l=new ee({outFields:["*"],creator:i=>{const{graphic:o}=i,c=U(_e,{graphic:o});return z(c,document.createElement("div")),c.el}}),s={type:"cluster",popupTemplate:{title:`<div><div class="slds-text-heading_small">${e.title}</div><div class="slds-text-title">${MAPS.app.config.globalProperties.$Labels.MA_CLUSTERS}</div></div>`,content:[l]},labelingInfo:t,clusterMinSize:r,symbol:{type:"simple-marker",style:"circle",size:35,color:"#69dcff",outline:{color:[0,0,0,.5],width:3}},clusterRadius:125,clusterMaxSize:35,maxScale:5e3};e.featureReduction=s},async toggleRenderType(e){if(this.renderType===e){this.renderType=null,await this.toggleVisibility(!this.layerIsVisible);return}this.renderType=e,e==="cluster"?await this.generateClusters():e==="markers"?await this.generateMarkers():e==="heatmap"&&await this.generateHeatMap(),this.layerIsVisible||await this.toggleVisibility()},async getDataLayer(){try{MAPS.deletedFeatures.delete(this.layer.qid);const e={action:"get_layer_data",ajaxResource:"TreeAJAXResources",id:this.layer.id},{options:t,success:r}=await MAPS.Utils.Apex.invoke("maps.RemoteFunctions.processAJAXRequest",[e]);if(r){this.dataLayer.name=t.Name;try{const s=t?.maps__Options__c;this.dataLayer.options=JSON.parse(s)}catch(s){this.errorMessage=s.message;return}const l=this.dataLayer.options.type;l==="point"||l==="marker"?(this.dataLayerType="marker",this.cleanLegacyData(),await this.getMarkerData()):(this.layer.visibleAreaOnly=!1,this.dataLayerType="polygon",await this.getPolygonData()),this.layer.dataLayerType=l,this.layer.dataLayerOptions=this.dataLayer.options}else this.errorMessage="Error getting this layer."}catch(e){this.isLoading=!1,this.errorMessage=e.message}},async getPolygonData(){const e=await Se({sfDataOptions:this.dataLayer.options,key:this.layer.qid,status:t=>{this.loadingMsg=t}});e.success?(await j.addWebTileLayer({id:this.layer.qid,qid:this.layer.qid,title:this.dataLayer.name,urlTemplate:e.url,opacity:this.tileOpacity}),this.showAllLegendRows=!0,this.buildLegendRows(e.legend),this.layerIsVisible=!0,this.layerOnMap=!0):this.errorMessage="Tile Error"},buildLegendRows(e){Object.keys(e).forEach(t=>{const r=e[t];se(r)}),this.legend=e},async getMarkerData(){const e=await Pe({sfDataOptions:this.dataLayer.options,status:t=>{this.loadingMsg=t}});e.success?(this.buildLegendRows(e.legend),await this.createMarkerLayer({markers:e.allMarkers,renderer:e.markerRenderer})):this.errorMessage=e.message},async createMarkerLayer({markers:e,renderer:t}){this.markerRenderer=t;const r=new xe({qid:this.layer.qid,id:this.layer.qid,objectIdField:"uid",outFields:["*"],SF_MAPS_TYPE:"dataLayerMarkers",geometryType:"point",fields:[{name:"uid",alias:"UID",type:"oid"},{name:"titleField",alias:"Title Field",type:"string"},{name:"layertype",alias:"LAYERTYPE",type:"string"},{name:"rowid",type:"string"},{name:"popup",type:"string"},{name:"title",type:"string"},{name:"url",type:"string"},{name:"legendValues",type:"string"},{name:"dataSource",type:"string"},{name:"levelOfDetail",type:"string"}],titleFn:l=>{const s=U(me,{checkIsUrl:this.checkIsUrl,getUrlFormatted:this.getUrlFormatted});z(s,document.createElement("div")),l.innerHTML=s.el.innerHTML},popupTemplate:{title:'<div class="maps-esri-list-title">{title}</div><div class="maps-popup-header" />',content:[new ee({outFields:["*"],creator:l=>{const{graphic:s}=l,{attributes:i}=s,o=U(be,{graphic:s,attributes:i,layerId:this.layer.qid,checkIsUrl:this.checkIsUrl,getUrlFormatted:this.getUrlFormatted});return z(o,document.createElement("div")),o.el}})]},renderer:t,source:e,title:this.layer.name,spatialReference:{wkid:4326}});this.renderType==="cluster"?await this.generateClusters(r):this.renderType==="markers"?await this.generateMarkers(r):await this.generateHeatMap(r),this.totalFeatures=e.length,MAPS.view.map.add(r),await this.filterProximityAndRefreshLegendCounts(),this.layerIsVisible=!0,this.layerOnMap=!0},removeLayer(){this.layersStore.removePlottedLayer(this.layer.qid)},cleanLegacyData(){const e={file_id:this.dataLayer.options.file_id||"",filters:this.dataLayer.options.filters||[],legend:this.dataLayer.options.legend||{},level_id:this.dataLayer.options.level_id,popup:this.dataLayer.options.popup,defaultMarkerColor:this.dataLayer.options.defaultMarkerColor||"93c47d:Circle"},t=this.dataLayer.options?.legend?.rows||[],r=[];for(let l=0;l<t.length;l++){const s=t[l];if(s.topic_id==="--Other--"){e.defaultMarkerColor=s.color||e.defaultMarkerColor;continue}if(typeof s.values=="object"&&s.values.join(",").toLowerCase().indexOf("--other--")>-1){e.defaultMarkerColor=s.color||e.defaultMarkerColor;continue}if(typeof s.values=="string"&&s.values.toLowerCase().indexOf("--other--")>-1){e.defaultMarkerColor=s.color||e.defaultMarkerColor;continue}r.push(s)}e.legend.rows=r,this.dataLayer.options=e},async setRowVisiblity(){const e=[];Object.keys(this.legend).forEach(l=>{const s=this.legend[l];s.onMap&&e.push(s.row_id)});const t=`rowid IN ('${e.join("','")}')`,r=MAPS.view.map.findLayerById(this.layer.qid);r.definitionExpression=t,await this.filterProximityAndRefreshLegendCounts(),MAPS.view.closePopup()},toggleLegendRowUIVisibility(){this.showAllLegendRows=!this.showAllLegendRows,this.dataLayerType==="marker"&&Object.keys(this.legend).forEach(e=>{const t=this.legend[e];t.total===0&&(t.uiVisible=this.showAllLegendRows)})},async toggleVisibility(e){const t=MAPS.view.map.findLayerById(this.layer.qid);this.layerIsVisible=e===!0||!this.layerIsVisible&&this.renderType===null?this.layerIsVisible:!this.layerIsVisible,t.visible=this.layerIsVisible,await this.filterProximityAndRefreshLegendCounts()}}},ae=e=>(ve("data-v-9b906205"),e=e(),Me(),e),Ie={class:"DataLayer PlottedRowUnit slds-grid slds-grid--vertical"},Re={class:"slds-col slds-grow-none",style:{position:"relative",width:"20px"}},Ve={key:0,role:"status",class:"slds-spinner slds-spinner_x-small slds-spinner_brand"},Fe={class:"slds-assistive-text"},De=ae(()=>n("div",{class:"slds-spinner__dot-a"},null,-1)),qe=ae(()=>n("div",{class:"slds-spinner__dot-b"},null,-1)),Ee=["src"],Be={class:"basicinfo slds-col slds-p-left_x-small slds-col_bump-right slds-size_9-of-12"},$e={class:"slds-text-heading_small slds-truncate"},He={key:0,class:"slds-text-color_weak"},Ue={key:1,class:"slds-text-color_error"},ze=["title"],Ne=["src"],je={class:"slds-assistive-text"},We={class:"slds-p-around_x-small slds-border_bottom"},Je={class:"slds-grid slds-grid_vertical-align-center"},Ge={class:"slds-p-right_x-small"},Ke=["src"],Qe={style:{color:"black"}},Ye={class:"slds-p-around_x-small slds-border_bottom"},Xe={class:"slds-p-vertical_x-small slds-p-horizontal_small"},Ze={class:"plottinginfo-wrapper"},et={class:"inline status",style:{"margin-top":"6px"}},tt={class:"info"},st={key:1,class:"info"},at={key:0,class:"slds-col slds-align-bottom slds-p-right_x-small"},it={class:"mapsLegend"},rt={class:"slds-col_bump-left slds-p-horizontal_small"},lt=["src"],ot={class:"slds-p-horizontal_xx-small"},nt={class:"slds-p-horizontal_xx-small"},dt={key:0,class:"slds-grid slds-grid_align-center slds-border_top"};function ct(e,t,r,l,s,i){const o=R("ButtonIcon"),c=R("Checkbox"),h=R("ActionMenuItem"),b=R("ActionMenu"),_=R("HoveringTooltip"),L=R("SLDSButton");return d(),u("div",Ie,[n("div",{ref:"layerHeader",class:"slds-grid slds-grid_vertical-align-center slds-p-around_x-small slds-border_bottom",onMouseover:t[1]||(t[1]=(...a)=>i.showTooltipInfo&&i.showTooltipInfo(...a)),onMouseleave:t[2]||(t[2]=(...a)=>i.hideTooltipInfo&&i.hideTooltipInfo(...a))},[n("div",Re,[s.isLoading?(d(),u("div",Ve,[n("span",Fe,p(e.$Labels.Layers_On_The_Map_Loading),1),De,qe])):(d(),u("img",{key:1,src:i.layerIcon},null,8,Ee))]),n("div",Be,[n("div",$e,p(s.dataLayer.name||r.layer.name),1),s.isLoading?A("",!0):(d(),u("div",He,p(e.$Labels.MA_Data_Layer),1)),G(n("div",{class:"slds-text-color_weak"},p(s.loadingMsg),513),[[K,s.isLoading]]),!s.isLoading&&s.errorMessage?(d(),u("div",Ue,p(s.errorMessage),1)):A("",!0)]),s.dataLayerType==="marker"?(d(),E(b,{key:0,disabled:!s.layerOnMap||s.isLoading},{button:V(()=>[s.layerIsVisible?(d(),u("button",{key:1,class:"slds-button slds-button_icon slds-button_icon-bare slds-button_icon-small",title:i.activeMode.label},[n("img",{src:i.activeMode.icon,style:{height:"18px"}},null,8,Ne),n("span",je,p(e.$Labels.MA_Options),1)],8,ze)):(d(),E(o,{key:0,iconCategory:"utility",iconName:"hide",size:"small",title:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options,assistiveText:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options},null,8,["title","assistiveText"]))]),default:V(()=>[n("div",We,p(e.$Labels.Layers_On_The_Map_OverFlow_Header_Query_Display),1),P(h,{role:"menuitemcheckbox",label:e.$Labels.Layers_On_The_Map_OverFlow_Checkbox_Markers_Are_Visible,onClick:i.toggleVisibility},{default:V(()=>[P(c,{modelValue:s.layerIsVisible,"onUpdate:modelValue":t[0]||(t[0]=a=>s.layerIsVisible=a),labels:{name:e.$Labels.Layers_On_The_Map_OverFlow_Checkbox_Markers_Are_Visible},class:"slds-p-horizontal_xxx-small layer-action-item"},null,8,["modelValue","labels"])]),_:1},8,["label","onClick"]),(d(!0),u(k,null,N(s.renderModes,a=>(d(),E(h,{key:a.value,label:a.label,class:Q(["drop-menu-item",{active:s.renderType===a.value}]),onClick:g=>i.toggleRenderType(a.value)},{default:V(()=>[n("div",Je,[n("div",Ge,[n("img",{src:a.icon},null,8,Ke)]),n("div",Qe,p(a.label),1)])]),_:2},1032,["label","class","onClick"]))),128))]),_:1},8,["disabled"])):A("",!0),P(b,{disabled:s.isLoading},{button:V(()=>[P(o,{id:"dataLayerRowThreeDotsBtnResource",iconCategory:"utility",iconName:"threedots_vertical",size:"small",title:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options,assistiveText:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options},null,8,["title","assistiveText"])]),default:V(()=>[n("div",Ye,p(e.$Labels.Layers_On_The_Map_OverFlow_Header_Options),1),(d(!0),u(k,null,N(i.layerOptions,a=>(d(),E(h,{key:a.id,disabled:a.disabled,label:a.label,onClick:g=>i.handleAction(a.action)},null,8,["disabled","label","onClick"]))),128))]),_:1},8,["disabled"]),P(o,{id:"dataLayerRemoveLayerBtnResource",iconCategory:"utility",iconName:"close",disabled:s.isLoading,size:"small",title:e.$Labels.Layers_On_The_Map_Remove_Layer,assistiveText:e.$Labels.Layers_On_The_Map_Remove_Layer,onClick:i.removeLayer},null,8,["disabled","title","assistiveText","onClick"]),s.renderTooltip?(d(),E(_,{key:1,ref:"hoveringTooltip",tooltipVisible:s.tooltipVisible,layer:r.layer,showBaseObject:!1},null,8,["tooltipVisible","layer"])):A("",!0)],544),!s.isLoading&&!s.errorMessage?(d(),u(k,{key:0},[n("div",Xe,[n("div",Ze,[s.dataLayerType==="marker"?(d(),u(k,{key:0},[n("div",et,p(i.recordCount),1),n("div",tt,[n("div",null,p(i.recordVisibleInfo),1),n("div",null,p(i.legendName),1)])],64)):(d(),u("div",st,[n("div",null,p(i.legendName),1)]))])]),s.dataLayerType==="marker"?(d(),u("div",at,[P(L,{variant:"base",iconCategory:"utility",iconName:s.showAllLegendRows?"chevronup":"chevrondown",iconPosition:"right",iconClass:["slds-icon_xx-small"],label:i.legendVisibilityLabel,onClick:i.toggleLegendRowUIVisibility},null,8,["iconName","label","onClick"])])):A("",!0),n("div",it,[(d(!0),u(k,null,N(s.legend,a=>G((d(),u("div",{key:a.row_id,class:Q(["legend-row slds-p-horizontal_small slds-p-vertical_xxx-small slds-grid slds-grid_vertical-align-center",{"slds-border_top":s.showAllLegendRows}])},[s.dataLayerType==="marker"?(d(),u(k,{key:0},[P(c,{modelValue:a.onMap,"onUpdate:modelValue":g=>a.onMap=g,labels:{name:a.values},class:"slds-col",onChange:i.setRowVisiblity},null,8,["modelValue","onUpdate:modelValue","labels","onChange"]),n("div",rt,p(a.rowCountSummary),1),n("img",{src:a.icon,style:{height:"20px",width:"20px"}},null,8,lt)],64)):s.showAllLegendRows?(d(),u(k,{key:1},[n("div",{class:"slds-m-around_xxx-small",style:Le({background:a.color,height:"20px",width:"20px","border-radius":"3px"})},null,4),a.operator==="range"?(d(),u(k,{key:0},[n("div",ot,p(a.min),1),n("div",null,p(e.$Labels.Layers_On_The_Map_Territory_Layer_To),1),n("div",nt,p(a.max),1)],64)):(d(),u(k,{key:1},[fe(p(a.values),1)],64))],64)):A("",!0)],2)),[[K,a.uiVisible]])),128)),s.dataLayerType==="polygon"?(d(),u("div",dt,[P(L,{id:"dataLayerShowLegendBtnResource",variant:"base",label:i.legendVisibilityLabel,onClick:i.toggleLegendRowUIVisibility},null,8,["label","onClick"])])):A("",!0)])],64)):A("",!0)])}const yt=re(Oe,[["render",ct],["__scopeId","data-v-9b906205"]]);export{yt as default};
