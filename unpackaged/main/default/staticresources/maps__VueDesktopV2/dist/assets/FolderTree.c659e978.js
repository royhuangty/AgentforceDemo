import{_ as y,B as T,S as N,I,r as u,o as i,c as l,h as p,i as m,a0 as b,t as F,b as _,e as h,F as v,q as g}from"../bundle.js";const B={name:"TreeNode",components:{ButtonIcon:T,Spinner:N,Icon:I},props:{selectedNodes:{type:Array,required:!0},label:{type:String,required:!0},nodes:{type:Array,default:()=>[]},node:{type:Object,default:()=>{}},root:{type:String,default:""}},emits:["node-expand","bus"],data(){return{isLoading:!1}},computed:{hasChildren(){let e=!0;return this.node.isLoaded&&this.nodes.length===0&&(e=!1),e},selected(){return this.selectedNodes.findIndex(e=>e.id===this.node.id)>-1}},methods:{bus(e){this.$emit("bus",e)},openFolder(e){this.$emit("bus",{action:"open",node:e})},selectFolder(e){this.$emit("bus",{action:"select",node:e}),this.bus("select",e)}}},L=["aria-expanded","aria-selected","aria-level"],S={class:"slds-tree__item"},k={class:"slds-tree__item-label slds-truncate",title:"Tree Item"},M={key:1,class:"slds-m-left_medium",style:{position:"relative"}},C={key:0,role:"group"};function w(e,s,t,a,d,n){const o=u("ButtonIcon"),f=u("Icon"),r=u("Spinner"),x=u("TreeNode",!0);return i(),l("li",{"aria-expanded":t.node?.state?.expanded||!1,"aria-selected":n.selected,"aria-label":"Tree Branch","aria-level":t.node.level,role:"treeitem"},[p("div",S,[m(o,{iconCategory:"utility",iconName:"chevronright",style:{"border-radius":"0 .25rem .25rem 0","margin-left":"-1px"},assistiveText:t.label,title:t.label,class:b(["slds-m-right_x-small",{"slds-hidden":!n.hasChildren}]),onClick:s[0]||(s[0]=c=>e.$emit("bus",{node:t.node,action:"open"}))},null,8,["assistiveText","title","class"]),p("span",{class:b(["slds-has-flexi-truncate slds-grid slds-grid_vertical-align-center",{"disable-click":t.node.disabled}]),onClick:s[1]||(s[1]=c=>e.$emit("bus",{node:t.node,action:"select"}))},[p("span",k,F(t.label),1),t.node.disabled?(i(),_(f,{key:0,category:"utility",name:"lock",size:"xx-small",class:"slds-p-left_medium"})):h("",!0),t.node.isLoading?(i(),l("div",M,[m(r,{size:"x-small",isInline:""})])):h("",!0)],2)]),t.node?.state?.expanded?(i(),l("ul",C,[(i(!0),l(v,null,g(t.nodes,c=>(i(),_(x,{key:c.id,nodes:c.nodes,label:c.text,node:c,selectedNodes:t.selectedNodes,onBus:n.bus},null,8,["nodes","label","node","selectedNodes","onBus"]))),128))])):h("",!0)],8,L)}const A=y(B,[["render",w],["__scopeId","data-v-77fbb2fd"]]),$={components:{TreeNode:A,Spinner:N},props:{selectedNodes:{type:Array,default:()=>[]},hideUserFolders:{type:Boolean,default:!1},isMultiSelect:{type:Boolean,default:!1},folderId:{type:String,default:""},isFolderMove:{type:Boolean,default:!1}},emits:["open-node","node-selected","update:selectedNodes","node-removed"],data(){return{tree:[],activeNodes:[],isLoading:!1,folderIdsInsideMovingFolder:new Set}},async created(){this.isLoading=!0;const e=await this.getFolder({folderId:0,folderType:0,level:1});this.addTreeNode(e),this.isLoading=!1},methods:{async getFolder({folderId:e,folderType:s,parentId:t,level:a}){const d=await MAPS.Utils.HTTP.get({url:`${MAPS.baseURL}/apex/maps__MapsTree`,params:{id:e,types:"Folder",type:s}});return d?.data?this.formatDataForTree(d.data,a,t):this.formatDataForTree([],a)},addTreeNode(e,s){if(s){const t=this.tree.find(a=>a.id===s);t.nodes=e}else e.forEach(t=>{this.tree.push(t)})},formatDataForTree(e,s,t){const a=[];return e.forEach(d=>{const n={level:s,text:d.data,id:d.attr.id,isLoaded:s===1,state:{checked:!1,selected:!1,expanded:d.state==="open"},nodes:[],attributes:d.attr,expandable:!0,disabled:this.disableNode(d,t)};d.children.forEach(o=>{n.nodes.push({level:s+1,text:o.data,id:o.attr.id,isLoaded:!1,state:{checked:!1,selected:!1,expanded:o.state==="open"},nodes:[],attributes:o.attr,expandable:!0,disabled:this.disableNode(o,d.attr.id)})}),this.hideUserFolders&&d.attr.id==="RoleRoot"||a.push(n)}),a},handleAction({action:e,node:s}){if(e==="open")this.openNode(s);else if(e==="select"){const t=this.activeNodes.findIndex(a=>a.id===s.id);if(t>-1){this.$emit("node-removed",s),this.activeNodes.splice(t,1);return}this.isMultiSelect||(this.activeNodes=[]),this.activeNodes.push(s),this.$emit("node-selected",s),this.$emit("update:selectedNodes",this.activeNodes)}},async openNode(e){if(e.isLoaded){e.state.expanded=!e.state.expanded;return}e.isLoading=!0;const{attributes:s,level:t}=e,a=t+1,d=await this.getFolder({folderId:s.id,folderType:s.NodeType,parentId:e.id,level:a});e.nodes=[...d],e.isLoaded=!0,e.state.expanded=!0,e.isLoading=!1},disableNode(e,s){const{NodeType:t,create:a,id:d}=e.attr,n=this.$props.isFolderMove&&(this.folderIdsInsideMovingFolder.has(s)||d===this.$props.folderId),o=new Set;return o.add("PersonalRoot"),o.add("PersonalFolder"),n&&this.folderIdsInsideMovingFolder.add(d),n||a!=="true"&&!o.has(t)}}},D={"data-q3-id":"maps-tree",class:"maps-tree_wrapper"},P={"aria-labelledby":"treeheading",class:"slds-tree",role:"tree"};function q(e,s,t,a,d,n){const o=u("Spinner"),f=u("TreeNode");return i(),l("div",D,[d.isLoading?(i(),_(o,{key:0})):h("",!0),(i(!0),l(v,null,g(d.tree,r=>(i(),l("div",{key:r.id,class:"slds-tree_container"},[p("ul",P,[m(f,{"data-test-id":`data-tree-node-${r.id}`,selectedNodes:d.activeNodes,label:r.text,node:r,nodes:r.nodes,root:"",onBus:n.handleAction},null,8,["data-test-id","selectedNodes","label","node","nodes","onBus"])])]))),128))])}const R=y($,[["render",q]]);export{R as F};
