import{_ as V,P as O,bF as I,r,o as u,b as m,S as U,l as A,B as j,O as $,f as B,g as w,bG as E,ac as v,bH as P,m as S,D as c,b1 as N,bI as x,w as f,e as L,h as b,c as y,q as R,i as _,F as K,j as T,t as D}from"../bundle.js";import{M as q}from"./Modal.76578f76.js";import{u as z}from"./index.d251dbc7.js";import{C as G}from"./ConditionValue.f4982441.js";import"./Group.7e0cb254.js";import"./Radio.2202254f.js";import"./DatePicker.899772b4.js";import"./TimePicker.bfa4e2f9.js";import"./index.0172543b.js";const W={name:"FieldLookupSearch",components:{Picklist:O},props:{modelValue:{type:String,required:!0},baseObject:{type:String,default:""},field:{type:String,default:""}},emits:["update:modelValue"],data(){return{searchTerm:"",lookupSearch:[{options:e=>this.searchLookupOptions(e)}]}},methods:{async searchLookupOptions(e){return await I({searchTerm:e,baseObject:this.baseObject,field:this.field})}}};function H(e,t,s,n,l,i){const p=r("Picklist");return u(),m(p,{modelValue:l.searchTerm,"onUpdate:modelValue":t[0]||(t[0]=d=>l.searchTerm=d),filterable:"",idKey:"value",labels:{name:e.$Labels.MA_Value},titleKey:"label",options:l.lookupSearch,onSelectedOption:t[1]||(t[1]=d=>e.$emit("update:modelValue",d.value)),onClear:t[2]||(t[2]=d=>e.$emit("update:modelValue",""))},null,8,["modelValue","labels","options"])}const X=V(W,[["render",H]]),J={components:{Modal:q,Spinner:U,SLDSButton:A,Picklist:O,ConditionValue:G,ButtonIcon:j,TextInput:$,LookupFieldSearch:X},props:{modalOptions:{type:Object,default:()=>{}}},emits:["close-modal"],setup(){const e=B(),t=w();return{mainStore:e,layersStore:t}},data(){return{v$:z(),plottedLayers:[],layersToUpdate:[],isLoading:!1,layerFieldMap:{},loadingText:this.$Labels.MA_Loading_With_Ellipsis}},async created(){this.setInitialState()},methods:{close(){this.$emit("close-modal")},async getFields(e,t){t.fieldsLoading=!0;const{baseObject:s}=e;if(t.baseObject=s,this.layerFieldMap[s])return t.fieldsLoading=!1,this.layerFieldMap[s];this.layerFieldMap[s]=[{label:"Loading",value:"loading"}],t.field=this.$Labels.MA_Loading_With_Ellipsis;const n=await E(s);return this.layerFieldMap[s]=n,t.fieldsLoading=!1,t.field="",n},clearLayer(e){e.field="",e.baseObject="",e.value="",e.fieldDisplayData=null},deleteRow(e){this.layersToUpdate=this.layersToUpdate.filter(t=>t.uid!==e)},async setInitialState(){const{layers:e=[]}=this.modalOptions;if(!e.length){await this.$nextTick(),this.close(),this.mainStore.toast({message:this.$Labels.Change_Owner_Update_Field_Status,subMessage:this.$Labels.Change_Owner_No_Records_Found,state:"warning"});return}this.plottedLayers=e;const t={markerLayer:"",field:"",fieldsLoading:!1,value:"",fieldValueLoading:!1,fieldDisplayData:null,baseObject:"",uid:v(),searchTerm:""};if(e.length===1){const[s]=e;t.markerLayer=s.uid,t.baseObject=s.baseObject,this.getFields(s,t)}this.layersToUpdate.push(t)},async setValueInput(e,t){t.fieldValueLoading=!0;const s=await P({baseObject:t.baseObject,fieldName:e.value}),n=[];(s.PicklistOptions||[]).forEach(p=>{p.value&&n.push({id:p.value,title:p.label})});const l=S(s.DisplayType),i={typeString:s.DisplayType,displayType:l,multiselect:l===c.MULTIPICKLIST,picklistOptions:n,textarea:l===c.TEXTAREA,plottedObject:s.BaseObject,updateField:s.FieldName,typeahead:l===c.REFERENCE};t.fieldDisplayData=i,t.fieldValueLoading=!1},clearFieldValue(e){e.value="",e.fieldDisplayData=null},addRow(){const e={markerLayer:"",field:"",fieldsLoading:!1,value:"",fieldValueLoading:!1,fieldDisplayData:null,baseObject:"",uid:v(),searchTerm:""};this.layersToUpdate.push(e)},updateField(){if(this.v$.$touch(),this.v$.$invalid){this.mainStore.toast({message:this.$Labels.AGISLB_Modal_ArcGIS_Validation_Fix,state:"error"});return}const e={};this.layersToUpdate.forEach(t=>{const{markerLayer:s}=t,n=this.plottedLayers.find(d=>d.uid===s);e[s]||(e[s]={fieldUpdateInfo:[],records:n.recordIds,tooltips:[]});let l=t.value;const i=S(t?.fieldDisplayData?.typeString);if(i===c.MULTIPICKLIST)l=t.value.join(";");else if(i===c.DATE)l=MAPS.app.config.globalProperties.$F("DateTime",t.value.date);else if(i===c.DATETIME){const{date:d,time:h={}}=l;l="",d&&(l=N({dateObject:d,timeObject:h}))}else i===c.TIME&&(l=Number(l.hours)*3600+Number(l.minutes)*60);e[s].fieldUpdateInfo.push({fieldName:t.field,newFieldValue:l});const p=(n.tooltips||[]).find(d=>d===t.field);p&&e[s].tooltips.push(p)}),x(e),this.close()}}},Q={id:"layers-to-update-wrapper",class:"slds-grid slds-grid_vertical"},Y={key:2,class:"slds-col slds-size_2-of-8"},Z={class:"slds-col",style:{"margin-top":"24px"}},ee={class:"slds-p-top_medium"},te={class:"slds-grid"},le={class:"slds-col_bump-left"};function ae(e,t,s,n,l,i){const p=r("Spinner"),d=r("Picklist"),h=r("TextInput"),k=r("LookupFieldSearch"),F=r("ConditionValue"),M=r("ButtonIcon"),g=r("SLDSButton"),C=r("Modal");return u(),m(C,{id:"update-field-modal",title:e.$Labels.ActionFramework_Update_Field,labels:{close:e.$Labels.MA_Close},onClose:i.close},{content:f(()=>[l.isLoading?(u(),m(p,{key:0})):L("",!0),b("div",Q,[(u(!0),y(K,null,R(l.layersToUpdate,a=>(u(),y("div",{key:a.uid,class:"slds-grid slds-gutters"},[_(d,{modelValue:a.markerLayer,"onUpdate:modelValue":o=>a.markerLayer=o,options:l.plottedLayers,titleKey:"name",filterable:"",idKey:"uid",labels:{name:e.$Labels.MA_Marker_Layer},class:"slds-col slds-size_2-of-8",onSelectedOption:o=>i.getFields(o,a),onClear:o=>i.clearLayer(a)},null,8,["modelValue","onUpdate:modelValue","options","labels","onSelectedOption","onClear"]),a.markerLayer?(u(),m(d,{key:0,modelValue:a.field,"onUpdate:modelValue":o=>a.field=o,disabled:a.fieldsLoading,options:l.layerFieldMap[a.baseObject]||[],titleKey:"label",filterable:"",idKey:"value",labels:{name:e.$Labels.MA_Field},class:"slds-col slds-size_2-of-8",onSelectedOption:o=>i.setValueInput(o,a),onClear:o=>i.clearFieldValue(a)},null,8,["modelValue","onUpdate:modelValue","disabled","options","labels","onSelectedOption","onClear"])):L("",!0),a.fieldValueLoading?(u(),m(h,{key:1,modelValue:l.loadingText,"onUpdate:modelValue":t[0]||(t[0]=o=>l.loadingText=o),class:"slds-col slds-size_2-of-8",disabled:"",labels:{name:e.$Labels.MA_Value}},null,8,["modelValue","labels"])):L("",!0),a.fieldDisplayData?(u(),y("div",Y,[a.fieldDisplayData.typeahead?(u(),m(k,{key:0,modelValue:a.value,"onUpdate:modelValue":o=>a.value=o,baseObject:a.baseObject,field:a.field},null,8,["modelValue","onUpdate:modelValue","baseObject","field"])):(u(),m(F,{key:1,value:a.value,"onUpdate:value":o=>a.value=o,displayType:a.fieldDisplayData.displayType,range:!1,picklistOptions:a.fieldDisplayData.picklistOptions,multiselectDialog:a.fieldDisplayData.multiselect,useTextArea:a.fieldDisplayData.textarea,useTypeAhead:a.fieldDisplayData.typeahead},null,8,["value","onUpdate:value","displayType","picklistOptions","multiselectDialog","useTextArea","useTypeAhead"]))])):L("",!0),b("div",Z,[_(M,{assistiveText:e.$Labels.modal_MLB_option_MP_button_Delete_Btn_Assist_Text,iconCategory:"utility",iconName:"delete",title:e.$Labels.modal_MLB_option_MP_button_Delete_Btn_Assist_Text,variant:"border-filled",onClick:o=>i.deleteRow(a.uid)},null,8,["assistiveText","title","onClick"])])]))),128)),b("div",ee,[_(g,{iconCategory:"utility",iconName:"add",iconPosition:"left",onClick:i.addRow},{default:f(()=>[T(D(e.$Labels.MA_Add_Field),1)]),_:1},8,["onClick"])])])]),footer:f(()=>[b("div",te,[b("div",le,[_(g,{disabled:l.isLoading,onClick:i.close},{default:f(()=>[T(D(e.$Labels.MA_Cancel),1)]),_:1},8,["disabled","onClick"]),_(g,{disabled:l.isLoading||l.layersToUpdate.length===0,variant:"brand",onClick:i.updateField},{default:f(()=>[T(D(e.$Labels.MA_Save_Close),1)]),_:1},8,["disabled","onClick"])])])]),_:1},8,["title","labels","onClose"])}const me=V(J,[["render",ae]]);export{me as default};
