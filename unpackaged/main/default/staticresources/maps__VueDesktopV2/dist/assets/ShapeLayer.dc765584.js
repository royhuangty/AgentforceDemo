import{_ as U,H as J,J as H,B as K,K as j,a5 as X,l as Q,g as W,f as Y,aH as Z,Q as $,a3 as ee,cr as se,by as te,cs as ie,c7 as I,co as T,cp as P,b7 as x,ca as V,bk as A,cf as ae,r as L,o as c,c as b,h as _,t as g,i as v,w as M,b as O,e as w,F as q,q as F,a0 as B,s as le,v as oe,j as re,p as ne,k as de}from"../bundle.js";import{b as ce}from"./shapeBuilder-db.c992211c.js";import{a as he}from"./kml-utils.24d6bf9d.js";import{H as ye}from"./HoveringTooltip.b169338c.js";const{GraphicsLayer:E,FeatureLayer:pe,Graphic:D,webMercatorUtils:N,CustomContent:me}=await J(["esri/layers/GraphicsLayer","esri/layers/FeatureLayer","esri/Graphic","esri/geometry/support/webMercatorUtils","esri/popup/content/CustomContent"]),ue={components:{ActionMenu:H,ButtonIcon:K,ActionMenuItem:j,Checkbox:X,SLDSButton:Q,HoveringTooltip:ye},props:{layer:{type:Object,default:()=>{},required:!0}},setup(){const e=W(),t=Y();return{layersStore:e,mainStore:t}},data(){return{loading:!1,loadingMsg:"",errorMessage:"",plottedShapes:[],shapeData:[],shapeCounts:{Circle:{label:"Circle",count:0},Polygon:{label:"Polygon",count:0},Rectangle:{label:"Rectangle",count:0},KML:{label:"KML",count:0}},shapeOnMap:!1,isVisible:!1,markerVisibility:!1,showLabels:!1,labels:[],isKML:!1,isGeoJSON:!1,mergeShape:!1,labelOverride:"",hoverTimeout:null,tooltipVisible:!1,renderTooltip:!1}},computed:{isPlotOnLoad(){return this.layersStore.polLayers.find(e=>e.id===this.layer.id)!==void 0},layerIcon(){return Z().shape},layerPermissions(){return this.layer.permissions||{}},layerOptions(){const e=[{label:this.$Labels.MA_REFRESH,action:"refresh",types:[]},{label:this.$Labels.MA_Zoom_To_Fit,action:"zoom",types:[],disabled:!this.shapeOnMap}];return this.layerPermissions.modify&&e.unshift({label:this.$Labels.MA_Edit,action:"edit",types:[]}),e},isEditMode(){return this.layer.isEditMode},totalCount(){let e=0;return Object.keys(this.shapeCounts).forEach(t=>{const l=this.shapeCounts[t];e+=l.count}),$(this.$Labels.Layers_On_The_Map_Plotted_Shape_Layer_Boundaries,[e])},invertProximity(){return this.mainStore.settings.proximitySettings.invertProximity.value||!1}},watch:{"layer.isEditMode":{handler(e){e&&this.showLabels&&this.removeLabels(),!e&&this.showLabels&&this.toggleLabels()}},"layer.refreshIndex":{handler(){this.refreshLayer()}}},async created(){this.polygons=[],await this.getShape(),await this.handleMarkerVisibility(),this.layersStore.updateIsLoading(this.layer.qid)},unmounted(){this.removeGraphic()},methods:{showTooltipInfo(){this.hoverTimeout&&clearTimeout(this.hoverTimeout),this.hoverTimeout=setTimeout(async()=>{this.renderTooltip=!0,await this.$nextTick(),await this.calculateTooltipInfo(),this.tooltipVisible=!0},500)},hideTooltipInfo(){this.hoverTimeout&&clearTimeout(this.hoverTimeout),this.tooltipVisible=!1,this.renderTooltip=!1},async calculateTooltipInfo(){const t=this.$refs.layerHeader;this.$refs.hoveringTooltip&&await this.$refs.hoveringTooltip.calculateTooltipInfo(t)},async getShape(){this.loading=!0;const e={ajaxResource:"TerritoryAJAXResources",action:"getTerritory",id:this.layer.id},{data:t,success:l}=await MAPS.Utils.Apex.invoke("maps.RemoteFunctions.processAJAXRequest",[e]);if(l){const{territory:i}=t;let s={};const{maps__ShapeLayerGeometries__r:a={},maps__Options__c:r}=i;try{s=JSON.parse(r),i.maps__Options__c=s}catch(d){console.error(d),this.showError("Unable to build the saved shape.");return}this.layer.territory=i,this.layer.name=this.layer.territory.Name;const{records:n=[]}=a;if(this.showLabels=s?.colorOptions?.labelEnabled||!1,this.labelOverride=this.showLabels&&s?.colorOptions?.labelOverride||"",i.maps__CustomGeometry__c){this.createESRILayer();const d=[];n.forEach(async y=>{const{maps__Geometry__c:m}=y,h=JSON.parse(m);d.push(this.plotGeometry(h))}),await Promise.allSettled(d)}else this.isGeoJSON=!0,this.markerVisibility=i.maps__Options__c.advancedOptions.affectVisibility,this.mergeShape=i.maps__Options__c.advancedOptions.dissolveGeometry,await this.processShapeGeomtry(n[0]),await this.drawTerritory();this.showLabels&&!this.errorMessage&&(this.showLabels=!0,await this.toggleLabels())}this.loading=!1},async toggleMergeShape(){this.removeGraphic(!1),await this.drawTerritory(),await this.toggleLabels()},async processShapeGeomtry(e){let t={};try{const s=e.maps__Geometry__c||"{}",a=e.maps__Geometry2__c||"",r=e.maps__Geometry3__c||"",n=e.maps__Geometry4__c||"",d=e.maps__Geometry5__c||"",y=e.maps__Geometry6__c||"",m=e.maps__Geometry7__c||"",h=e.maps__Geometry8__c||"",o=e.maps__Geometry9__c||"",p=e.maps__Geometry10__c||"";t=JSON.parse(s+a+r+n+d+y+m+h+o+p)}catch(s){this.showError(this.$Labels.ShapeLayer_Cannot_Show_Data),this.errorMessage=this.$Labels.ShapeLayer_Cannot_Show_Data,console.warn("Unable to parse custom shape info",s),console.warn(e.maps__Geometry__c);return}const l=[];Object.keys(t).forEach(s=>{const a=t[s];l.push(...a)});const i=await ce({geoIdArray:l,status:s=>{this.loadingMsg=s}});i.success?(this.polygons=i.polygons,this.shapeCounts=i.shapeCounts):(this.showError(i.message),this.errorMessage=i.message)},async drawTerritory(){const e=this;this.loading=!0;const{colorOptions:t={}}=this.layer?.territory?.maps__Options__c||{},l={type:"simple-fill",color:MAPS.Utils.Color.hexToRgba(t.fillColor||"#3083d3",t.fillOpacity||.5),style:"solid",outline:{width:1,color:MAPS.Utils.Color.hexToRgba(t.borderColor||"#16325C",1)}},i=new pe({qid:this.layer.qid,id:this.layer.qid,SF_MAPS_TYPE:"territory",renderer:{type:"simple",symbol:l},popupTemplate:{title:'<div class="maps-esri-list-title">{title}</div><div class="maps-popup-header slds-p-around_x-small">{title}</div>',content:[new me({outFields:["*"],creator:o=>{const{graphic:p}=o,f=ee(se,{graphic:p});return te(f,document.createElement("div")),f.el}})]},source:[],title:this.layer.name,isBoundary:!0,objectIdField:"id",spatialReference:{wkid:4326},fields:[{name:"id",alias:"ID",type:"oid"},{name:"label",alias:"Label",type:"string"},{name:"title",alias:"Title",type:"string"}]}),s=[];this.polygons.forEach(o=>{const p=new D({geometry:o,attributes:o.attributes});s.push(p)});const{labelFontColor:a="#FFFFFF",labelFontSize:r="10px",labelOverride:n="",labelBGColor:d="#000000",labelBGOpacity:y="0.3"}=t,m=MAPS.Utils.Color.hexToRgba(d,y),h={type:"text",color:a,text:n||this.layer.name,backgroundColor:m,haloColor:"black",haloSize:"1px",font:{size:r,family:"Avenir Next LT Pro",weight:"bold"}};if(this.mergeShape){this.loadingMsg="Merging Shapes";const o=[];s.forEach(u=>{o.push(u.geometry)});const p=await ie({geomtryArray:o}),f=new D({geometry:p,attributes:{title:e.layer.name,label:e.labelOverride||e.layer.name,ObjectID:e.layer.qid}});i.source=[f]}else i.source=s,i.labelingInfo=[{symbol:h,labelPlacement:"always-horizontal",labelExpressionInfo:{expression:"$feature.Label"}}],i.labelsVisible=this.showLabels;MAPS.view.map.add(i),this.loading=!1,this.isVisible=!0,this.shapeOnMap=!0},async updateInvalidGeometry(){try{const t=MAPS.view.map.findLayerById(this.layer.qid).graphics.items[0],l=await I({type:this.layer.type,graphic:t}),i={ajaxResource:"TerritoryAJAXResources",action:"saveGeometryInfo",geometry:JSON.stringify(l),geometryName:`${this.layer.name}-geometry`,territory:this.layer.territory.Id,removeOldGeo:!0},{success:s}=await MAPS.Utils.Apex.invoke("maps.RemoteFunctions.processAJAXRequest",[i]);s&&console.log("Invalid ring polygon successfully updated")}catch{console.warn("unable to update invalid ring polygon")}},async plotGeometry(e){try{this.shapeData.push(e);const t=String(e?.proximityType||"").toLowerCase(),{colorOptions:l={}}=this.layer.territory.maps__Options__c;if(this.layer.type=t,this.shapeData.type=t,t==="circle"){this.shapeCounts.Circle.count++;const{center:i,radius:s}=e;await this.drawCircle({center:[i.lng,i.lat],radius:s,fillColor:l.fillColor,borderColor:l.borderColor,opacity:l.fillOpacity})}else if(t==="polygon"){this.shapeCounts.Polygon.count++;let{points:i}=e;const{rings:s}=e;if(s){const[a=[]]=s;i=a,console.warn("rings found in a saved shape layer, this layer will stop working unless resaved")}await this.drawPolygon({type:"polygon",points:i,fillColor:l.fillColor,borderColor:l.borderColor,opacity:l.fillOpacity}),s&&this.updateInvalidGeometry()}else if(t==="rectangle"){this.shapeCounts.Rectangle.count++;let i;const{bounds:s}=e;if(s){const{NE:r,SW:n}=s;i=[r,{lat:r.lat,lng:n.lng},n,{lat:n.lat,lng:r.lng}]}const{rings:a}=e;if(a){const[r=[]]=a;i=r,console.warn("rings found in a saved shape layer, this layer will stop working unless resaved")}await this.drawPolygon({type:"rectangle",points:i,fillColor:l.fillColor,borderColor:l.borderColor,opacity:l.fillOpacity}),a&&this.updateInvalidGeometry()}else t==="kml"?(this.isKML=!0,this.shapeCounts.KML.count++,await this.plotKML({fileId:e.id})):t==="traveltime"?(this.shapeCounts.Polygon.count++,await this.drawTravelTime({type:"traveltime",geometry:e,fillColor:l.fillColor,borderColor:l.borderColor,opacity:l.fillOpacity})):t==="traveldistance"&&(this.shapeCounts.Polygon.count++,await this.drawTravelDistance({type:"traveldistance",geometry:e,fillColor:l.fillColor,borderColor:l.borderColor,opacity:l.fillOpacity}))}catch(t){console.error(t)}},async drawTravelTime({geometry:e,fillColor:t,borderColor:l,opacity:i}){const s=MAPS.view.map.findLayerById(this.layer.qid),{travelLatitude:a,travelLongitude:r,travelTime:n}=e,d=n*60,y={latitude:a,longitude:r},m={...e,label:this.labelOverride||this.layer.name},h=await T({type:"traveltime",options:{id:this.layer.qid,departure:"any",travelTime:d,center:y,label:this.layer.name},attributes:m,fillColor:t,borderColor:l,opacity:i}),o=P(y);await s.graphics.addMany([h,o]),this.shapeOnMap=!0,this.isVisible=!0,this.handleAction("zoom")},async drawTravelDistance({geometry:e,fillColor:t,borderColor:l,opacity:i}){const s=MAPS.view.map.findLayerById(this.layer.qid),{travelLatitude:a,travelLongitude:r,travelDistance:n}=e,d={latitude:a,longitude:r},y={...e,label:this.labelOverride||this.layer.name},m=await T({type:"traveldistance",options:{id:this.layer.qid,range:n,center:d,label:this.layer.name},attributes:y,fillColor:t,borderColor:l,opacity:i}),h=P(d);await s.graphics.addMany([m,h]),this.shapeOnMap=!0,this.isVisible=!0,this.handleAction("zoom")},async drawCircle({center:e,radius:t,fillColor:l,borderColor:i,opacity:s}){const a=MAPS.view.map.findLayerById(this.layer.qid),r=await T({type:"circle",options:{center:e,radius:t,id:this.layer.qid,label:this.layer.name},attributes:{label:this.labelOverride||this.layer.name},fillColor:l,borderColor:i,opacity:s});a.graphics.add(r),this.shapeOnMap=!0,this.isVisible=!0},async drawPolygon({type:e,points:t,fillColor:l,borderColor:i,opacity:s}){const a=MAPS.view.map.findLayerById(this.layer.qid),r=await T({type:e,fillColor:l,options:{id:this.layer.qid,points:t,label:this.layer.name},attributes:{label:this.labelOverride||this.layer.name},borderColor:i,opacity:s});a.graphics.add(r),this.shapeOnMap=!0,this.isVisible=!0},async handleMarkerVisibility(){this.markerVisibility&&this.isVisible?(this.layersStore.proximityActivatedLayers.add(this.layer.qid),await x()):(this.layersStore.proximityActivatedLayers.delete(this.layer.qid),this.layersStore.proximityActivatedLayers.size===0?await V():await x())},async removeLayer(){this.layersStore.removePlottedLayer(this.layer.qid)},createESRILayer(){const e=new E({qid:this.layer.qid,id:this.layer.qid,isBoundary:!0,graphics:[],spatialReference:{wkid:4326},title:this.layer.name});MAPS.view.map.add(e)},async removeGraphic(e=!0){e&&(this.shapeCounts={Circle:{label:"Circle",count:0},Polygon:{label:"Polygon",count:0},Rectangle:{label:"Rectangle",count:0},KML:{label:"KML",count:0}}),this.markerVisibility&&(this.layersStore.proximityActivatedLayers.delete(this.layer.qid),this.layersStore.proximityActivatedLayers.size===0?await V():await x()),this.removeLabels(),this.isEditMode?A.removeGraphic({id:this.layer.qid}):A.removeLayer({id:this.layer.qid})},async plotKML({fileId:e}){try{await he({qid:this.layer.qid,fileId:e}),this.shapeOnMap=!0,this.isVisible=!0}catch{this.mainStore.toast({message:this.$Labels.Layers_Error_Parsing_KML,state:"error"})}},async handleAction(e){e==="zoom"?await ae({layerUIDs:[this.layer.qid]}):e==="refresh"?this.refreshLayer():e==="edit"?this.isGeoJSON?this.$bus.emit("open-modal",{name:"shape-builder",config:{isPlotted:!0,territory:{Id:this.layer.id,Name:this.layer.Name,qid:this.layer.qid},callback:t=>{t.plotOnSave&&this.refreshLayer()}}}):this.$bus.emit("open-modal",{name:"save-sketch",config:{territory:this.layer.territory,isPlotted:!0,optionsDisabled:this.isKML,callback:t=>{this.layersStore.updateFolderData({folderId:this.layersStore.currentFolder.id}),this.layersStore.getRecentAndPlotOnLoadLayers(),t.plotOnSave&&this.refreshLayer()}}}):e==="visible"?await this.toggleVisibility():e==="labels"?await this.toggleLabels():e==="mergeGeometry"&&await this.toggleMergeShape()},async toggleVisibility(){const e=MAPS.view.map.findLayerById(this.layer.qid);e.visible=this.isVisible,this.showLabels&&(this.isVisible?await this.toggleLabels():this.removeLabels()),await this.handleMarkerVisibility()},showError(e){this.mainStore.toast({message:e,state:"error"})},async refreshLayer(){this.shapeData=[],this.layer.hasEdits=!1,await this.removeGraphic(),await this.getShape(),await this.handleMarkerVisibility()},async toggleLabels(){if(this.showLabels){const e=this.layer?.territory?.maps__Options__c?.colorOptions,{labelFontColor:t="#FFFFFF",labelFontSize:l="10px",labelJustification:i="center",labelBGColor:s="#000000",labelBGOpacity:a="0.3"}=e;try{const r=MAPS.Utils.Color.hexToRgba(s,a),n=MAPS.view.map.findLayerById(this.layer.qid);let d=[];const y=[];if(this.isGeoJSON){if(!this.mergeShape){n.labelsVisible=!0;return}d=(await n.queryFeatures()).features}else{const{graphics:h={}}=n,{items:o=[]}=h,p=o.find(f=>f?.geometry?.type!=="point");d.push(p)}d.forEach(h=>{const{geometry:o,attributes:p}=h,{extent:f}=o,u=f;let C;const G=f?.spatialReference?.isGeographic;if(u){if(i==="center")C={type:"point",latitude:u.center.latitude,longitude:u.center.longitude};else if(i==="right"){const S=G?[u.xmax,u.center.latitude]:N.xyToLngLat(u.xmax,u.center.y);C={type:"point",latitude:S[1],longitude:S[0]}}else if(i==="left"){const S=G?[u.xmin,u.center.latitude]:N.xyToLngLat(u.xmin,u.center.y);C={type:"point",latitude:S[1],longitude:S[0]}}}const R={type:"text",color:t,text:p.label,backgroundColor:r,haloColor:"black",haloSize:"1px",font:{size:l,family:"Avenir Next LT Pro",weight:"bold"}},z={qid:`label_${this.layer.qid}`,type:"graphic",geometry:C,symbol:R};y.push(z)});const m=new E({qid:`label_${this.layer.qid}`,id:`label_${this.layer.qid}`,spatialReference:{wkid:4326},graphics:y,label:this.layer.name});MAPS.view.map.add(m)}catch(r){this.showError("An error occured. Unable to show labels"),console.error("Unable to show labels",r)}}else this.removeLabels()},removeLabels(){if(this.isGeoJSON&&!this.mergeShape){const e=MAPS.view.map.findLayerById(this.layer.qid);e.labelsVisible=!1}A.removeLayer({id:`label_${this.layer.qid}`})},async updateShapeGeometry(){this.loading=!0;const t=MAPS.view.map.findLayerById(this.layer.qid).graphics.items[0],l=await I({type:this.layer.type,graphic:t}),i={ajaxResource:"TerritoryAJAXResources",action:"saveGeometryInfo",geometry:JSON.stringify(l),geometryName:`${this.layer.name}-geometry`,territory:this.layer.territory.Id,removeOldGeo:!0},{data:s,success:a}=await MAPS.Utils.Apex.invoke("maps.RemoteFunctions.processAJAXRequest",[i]);a?(this.layer.hasEdits=!1,this.mainStore.toast({message:"Shape Updated"}),this.refreshLayer()):(console.error(s),this.showError("Something went wrong. Unable to save updates.")),this.loading=!1}}},k=e=>(ne("data-v-eb860aca"),e=e(),de(),e),_e={class:"PlottedShapeLayer"},be={class:"slds-col slds-grow-none",style:{position:"relative",width:"20px","margin-left":"2px"}},ge={key:0,role:"status",class:"slds-spinner slds-spinner_x-small slds-spinner_brand"},fe={class:"slds-assistive-text"},ve=k(()=>_("div",{class:"slds-spinner__dot-a"},null,-1)),Le=k(()=>_("div",{class:"slds-spinner__dot-b"},null,-1)),we=["src"],Se=k(()=>_("div",{class:"ftu-plotonload"},null,-1)),Me={class:"basicinfo slds-col slds-p-left_small slds-col_bump-right slds-size_9-of-12"},Oe={class:"sl-layer-name slds-text-heading_small slds-truncate"},Ce={key:0,class:"slds-text-color_weak"},Te={key:1},xe={key:0,class:"slds-text-color_error"},Ae={key:1,class:"sl-total-counts"},ke={class:"slds-p-around_x-small slds-border_bottom"},Ge={class:"slds-p-around_x-small slds-border_bottom"},Ie={class:"plottinginfo-wrapper slds-grid slds-grid_vertical slds-border_top slds-p-around_small"},Pe={class:"slds-m-right_xx-small"},Ve={key:1,class:"slds-grid slds-grid_align-center slds-p-vertical_small"};function qe(e,t,l,i,s,a){const r=L("ButtonIcon"),n=L("Checkbox"),d=L("ActionMenu"),y=L("ActionMenuItem"),m=L("HoveringTooltip"),h=L("SLDSButton");return c(),b("div",_e,[_("div",{ref:"layerHeader",class:B(["slds-grid slds-grid_vertical-align-center slds-p-around_x-small",{"is-plot-on-load":a.isPlotOnLoad}]),onMouseover:t[7]||(t[7]=(...o)=>a.showTooltipInfo&&a.showTooltipInfo(...o)),onMouseleave:t[8]||(t[8]=(...o)=>a.hideTooltipInfo&&a.hideTooltipInfo(...o))},[_("div",be,[s.loading?(c(),b("div",ge,[_("span",fe,g(e.$Labels.Layers_On_The_Map_Loading),1),ve,Le])):(c(),b("img",{key:1,style:{"margin-left":"2px"},src:a.layerIcon},null,8,we)),Se]),_("div",Me,[_("div",Oe,g(l.layer?.territory?.Name||l.layer.name),1),s.loading?(c(),b("div",Ce,g(s.loadingMsg),1)):(c(),b("div",Te,[s.errorMessage?(c(),b("div",xe,g(s.errorMessage),1)):(c(),b("div",Ae,g(a.totalCount),1))]))]),v(d,{disabled:!s.shapeOnMap||a.isEditMode||s.loading},{button:M(()=>[v(r,{id:"shapeLayerDisplayOption",iconCategory:"utility",iconName:s.isVisible?"preview":"hide",size:"small",title:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options,assistiveText:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options},null,8,["iconName","title","assistiveText"])]),default:M(()=>[_("div",ke,g(e.$Labels.Layers_On_The_Map_OverFlow_Header_Options),1),v(n,{modelValue:s.isVisible,"onUpdate:modelValue":t[0]||(t[0]=o=>s.isVisible=o),labels:{name:e.$Labels.LayersTab_Shape_Display_ShapeVisible},class:"slds-p-vertical_xx-small slds-p-horizontal_medium layer-action-item",onChange:t[1]||(t[1]=o=>a.handleAction("visible"))},null,8,["modelValue","labels"]),s.isKML?w("",!0):(c(),O(n,{key:0,modelValue:s.markerVisibility,"onUpdate:modelValue":t[2]||(t[2]=o=>s.markerVisibility=o),disabled:!s.isVisible,labels:{name:a.invertProximity?e.$Labels.Only_Show_Markers_Outside_Shape:e.$Labels.Layers_On_The_Map_OverFlow_Boundary_Shape_Display_Checkbox_Markers_Inside_Shape},class:"slds-p-vertical_xx-small slds-p-horizontal_medium layer-action-item",onChange:a.handleMarkerVisibility},null,8,["modelValue","disabled","labels","onChange"])),s.isGeoJSON?(c(),O(n,{key:1,modelValue:s.mergeShape,"onUpdate:modelValue":t[3]||(t[3]=o=>s.mergeShape=o),disabled:!s.isVisible,labels:{name:e.$Labels.LayersTab_Shape_Display_MergeBoundaries},class:"slds-p-vertical_xx-small slds-p-horizontal_medium layer-action-item",onChange:t[4]||(t[4]=o=>a.handleAction("mergeGeometry"))},null,8,["modelValue","disabled","labels"])):w("",!0),s.isKML?w("",!0):(c(),O(n,{key:2,modelValue:s.showLabels,"onUpdate:modelValue":t[5]||(t[5]=o=>s.showLabels=o),disabled:!s.isVisible,labels:{name:e.$Labels.LayersTab_Shape_Display_ShowShapeLabels},class:"slds-p-vertical_xx-small slds-p-horizontal_medium layer-action-item",onChange:t[6]||(t[6]=o=>a.handleAction("labels"))},null,8,["modelValue","disabled","labels"]))]),_:1},8,["disabled"]),v(d,{disabled:!s.shapeOnMap||a.isEditMode||s.loading},{button:M(()=>[v(r,{id:"shapeLayerThreeDotDisplayOption",iconCategory:"utility",iconName:"threedots_vertical",size:"small",title:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options,assistiveText:e.$Labels.Layers_On_The_Map_OverFlow_Header_Options},null,8,["title","assistiveText"])]),default:M(()=>[_("div",Ge,g(e.$Labels.Layers_On_The_Map_OverFlow_Header_Options),1),(c(!0),b(q,null,F(a.layerOptions,o=>(c(),O(y,{key:o.id,disabled:o.disabled,label:o.label,onClick:p=>a.handleAction(o.action)},null,8,["disabled","label","onClick"]))),128))]),_:1},8,["disabled"]),v(r,{id:"shapeLayerCloseOption",iconCategory:"utility",iconName:"close",disabled:s.loading,size:"small",title:e.$Labels.Layers_On_The_Map_Remove_Layer,assistiveText:e.$Labels.Layers_On_The_Map_Remove_Layer,onClick:a.removeLayer},null,8,["disabled","title","assistiveText","onClick"])],34),s.renderTooltip?(c(),O(m,{key:0,ref:"hoveringTooltip",tooltipVisible:s.tooltipVisible,layer:l.layer,showBaseObject:!1},null,8,["tooltipVisible","layer"])):w("",!0),le(_("div",Ie,[(c(!0),b(q,null,F(s.shapeCounts,(o,p)=>(c(),b("div",{key:p,class:"slds-col"},[o.count>0?(c(),b("div",{key:0,class:B([`shapeLayer-${p}-Counter`,"slds-grid"])},[_("div",Pe,g(o.label)+":",1),_("div",null,g(o.count),1)],2)):w("",!0)]))),128))],512),[[oe,!s.loading&&!s.errorMessage]]),l.layer.hasEdits&&!s.loading?(c(),b("div",Ve,[v(h,{variant:"brand",iconCategory:"utility",iconName:"check",iconPosition:"left",onClick:a.updateShapeGeometry},{default:M(()=>[re(g(e.$Labels.Layers_On_The_Map_OverFlow_Boundary_Button_Apply_Changes),1)]),_:1},8,["onClick"])])):w("",!0)])}const Ne=U(ue,[["render",qe],["__scopeId","data-v-eb860aca"]]);export{Ne as default};
